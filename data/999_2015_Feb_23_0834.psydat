ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
V/Users/patrickbissett/OneDrive/Poldrack/TrainedInhibition/PsychoPy/LearningTask3.psyexp
p7
sS'dataFileName'
p8
V/Users/patrickbissett/OneDrive/Poldrack/TrainedInhibition/PsychoPy/data/999_2015_Feb_23_0834
p9
sS'runtimeInfo'
p10
NsS'name'
p11
S'LearningTask'
p12
sS'dataNames'
p13
(lp14
S'ok1.keys'
p15
aS'ok1.rt'
p16
aS'resp.keys'
p17
aS'resp.corr'
p18
asS'autoLog'
p19
I01
sS'extraInfo'
p20
(dp21
S'expName'
p22
g12
sS'gender (m/f)'
p23
V
sS'age'
p24
V
sS'frameRate'
p25
cnumpy.core.multiarray
scalar
p26
(cnumpy
dtype
p27
(S'f8'
I0
I1
tRp28
(I3
S'<'
NNNI-1
I-1
I0
tbS'mH\xa8\xe6^\xfeM@'
tRp29
sS'session'
p30
I3
sS'date'
p31
V2015_Feb_23_0834
p32
sS'participant'
p33
V999
p34
ssS'loopsUnfinished'
p35
(lp36
g1
(cpsychopy.data
TrialHandler
p37
g3
NtRp38
(dp39
S'origin'
p40
V<PsychoPy2experiment version="1.81.03" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'t', 'y', 'g', 'h'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$ShapeStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[101, 101]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="text" val="OK, ready to start the main experiment?&#10;&#10;Remember, press;&#10; - 'S' if the SMALL letters are S&#10; - 'H' if the SMALL letters are H&#10;&#10;Try to respond as quickly and as accurately as possible.&#10;&#10;When you are ready to proceed press any key." valType="str" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;msg=''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Begin Routine" val="if resp.corr:#stored on last run routine&#10;  msg=&quot;Correct! RT=%.3f&quot; %(resp.rt)&#10;else:&#10;  msg=&quot;Oops! That was wrong&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="text" val="$msg" valType="str" updates="set every repeat"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="thanks">\u000a      <TextComponent name="thanksMsg">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="thanksMsg" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="stopVal" val="2.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="text" val="You're done! Fun, wasn't it!? ;-)" valType="str" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="text" val="In this experiment you will be presented with a large letter made up of smaller letters. Your task is to&#10;&#10;Respond by pressing;&#10; - 'S' if the SMALL letters are S&#10; - 'H' if the SMALL letters are H&#10;&#10;Try to respond as quickly and as accurately as possible.&#10;&#10;There will be a number of practice trials in which you will be given feedback. &#10;&#10;Press any key when you are ready to proceed." valType="str" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practiceTrials">\u000a      <Param name="conditionsFile" val="trialTypes3.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practiceTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'ShapeStimulus': u'crosscyan.gif', u'yPos': 200, u'Shape': u'Line', u'location': u'up_right', u'corrAns': u'y'}, {u'xPos': 200, u'ShapeStimulus': u'crossgray.gif', u'yPos': 200, u'Shape': u'Triangle', u'location': u'up_right', u'corrAns': u'y'}, {u'xPos': 200, u'ShapeStimulus': u'crossorange.gif', u'yPos': 200, u'Shape': u'Square', u'location': u'up_right', u'corrAns': u'y'}, {u'xPos': 200, u'ShapeStimulus': u'crossyellow.gif', u'yPos': 200, u'Shape': u'Circle', u'location': u'up_right', u'corrAns': u'y'}, {u'xPos': -200, u'ShapeStimulus': u'circlegreen.gif', u'yPos': 200, u'Shape': u'Line', u'location': u'up_left', u'corrAns': u't'}, {u'xPos': -200, u'ShapeStimulus': u'circlemaagenta.gif', u'yPos': 200, u'Shape': u'Triangle', u'location': u'up_left', u'corrAns': u't'}, {u'xPos': -200, u'ShapeStimulus': u'circlewhite.gif', u'yPos': 200, u'Shape': u'Square', u'location': u'up_left', u'corrAns': u't'}, {u'xPos': -200, u'ShapeStimulus': u'circlecyan.gif', u'yPos': 200, u'Shape': u'Circle', u'location': u'up_left', u'corrAns': u't'}, {u'xPos': 200, u'ShapeStimulus': u'diamondgray.gif', u'yPos': -200, u'Shape': u'Line', u'location': u'down_right', u'corrAns': u'h'}, {u'xPos': 200, u'ShapeStimulus': u'diamondorange.gif', u'yPos': -200, u'Shape': u'Triangle', u'location': u'down_right', u'corrAns': u'h'}, {u'xPos': 200, u'ShapeStimulus': u'diamondwhite.gif', u'yPos': -200, u'Shape': u'Square', u'location': u'down_right', u'corrAns': u'h'}, {u'xPos': 200, u'ShapeStimulus': u'diamondmagenta.gif', u'yPos': -200, u'Shape': u'Circle', u'location': u'down_right', u'corrAns': u'h'}, {u'xPos': -200, u'ShapeStimulus': u'hexagonyellow.gif', u'yPos': -200, u'Shape': u'Line', u'location': u'down_left', u'corrAns': u'g'}, {u'xPos': -200, u'ShapeStimulus': u'hexagonmagenta.gif', u'yPos': -200, u'Shape': u'Triangle', u'location': u'down_left', u'corrAns': u'g'}, {u'xPos': -200, u'ShapeStimulus': u'hexagongreen.gif', u'yPos': -200, u'Shape': u'Square', u'location': u'down_left', u'corrAns': u'g'}, {u'xPos': -200, u'ShapeStimulus': u'hexagongray.gif', u'yPos': -200, u'Shape': u'Circle', u'location': u'down_left', u'corrAns': u'g'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="practiceTrials"/>\u000a    <Routine name="instrMain"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="trialTypes2.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="4" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'yPos': 200, u'Shape': u'Line', u'corrAns': u'y', u'numVertices': 2, u'location': u'up_right'}, {u'xPos': 200, u'yPos': 200, u'Shape': u'Triangle', u'corrAns': u'y', u'numVertices': 3, u'location': u'up_right'}, {u'xPos': 200, u'yPos': 200, u'Shape': u'Square', u'corrAns': u'y', u'numVertices': 4, u'location': u'up_right'}, {u'xPos': 200, u'yPos': 200, u'Shape': u'Circle', u'corrAns': u'y', u'numVertices': 90, u'location': u'up_right'}, {u'xPos': -200, u'yPos': 200, u'Shape': u'Line', u'corrAns': u't', u'numVertices': 2, u'location': u'up_left'}, {u'xPos': -200, u'yPos': 200, u'Shape': u'Triangle', u'corrAns': u't', u'numVertices': 3, u'location': u'up_left'}, {u'xPos': -200, u'yPos': 200, u'Shape': u'Square', u'corrAns': u't', u'numVertices': 4, u'location': u'up_left'}, {u'xPos': -200, u'yPos': 200, u'Shape': u'Circle', u'corrAns': u't', u'numVertices': 90, u'location': u'up_left'}, {u'xPos': 200, u'yPos': -200, u'Shape': u'Line', u'corrAns': u'h', u'numVertices': 2, u'location': u'down_right'}, {u'xPos': 200, u'yPos': -200, u'Shape': u'Triangle', u'corrAns': u'h', u'numVertices': 3, u'location': u'down_right'}, {u'xPos': 200, u'yPos': -200, u'Shape': u'Square', u'corrAns': u'h', u'numVertices': 4, u'location': u'down_right'}, {u'xPos': 200, u'yPos': -200, u'Shape': u'Circle', u'corrAns': u'h', u'numVertices': 90, u'location': u'down_right'}, {u'xPos': -200, u'yPos': -200, u'Shape': u'Line', u'corrAns': u'g', u'numVertices': 2, u'location': u'down_left'}, {u'xPos': -200, u'yPos': -200, u'Shape': u'Triangle', u'corrAns': u'g', u'numVertices': 3, u'location': u'down_left'}, {u'xPos': -200, u'yPos': -200, u'Shape': u'Square', u'corrAns': u'g', u'numVertices': 4, u'location': u'down_left'}, {u'xPos': -200, u'yPos': -200, u'Shape': u'Circle', u'corrAns': u'g', u'numVertices': 90, u'location': u'down_left'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <LoopTerminator name="trials"/>\u000a    <Routine name="thanks"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p41
sS'thisTrial'
p42
g1
(cpsychopy.data
TrialType
p43
c__builtin__
dict
p44
(dp45
VxPos
p46
I-200
sVcorrAns
p47
Vg
sVlocation
p48
Vdown_left
p49
sVShapeStimulus
p50
Vhexagongray.gif
p51
sVShape
p52
VCircle
p53
sVyPos
p54
I-200
stRp55
sS'_exp'
p56
I245186640
sg11
S'practiceTrials'
p57
sg6
g7
sS'thisRepN'
p58
I0
sg19
I01
sg20
g21
sS'data'
p59
g1
(cpsychopy.data
DataHandler
p60
g44
(dp61
S'ran'
p62
cnumpy.ma.core
_mareconstruct
p63
(cnumpy.ma.core
MaskedArray
p64
cnumpy
ndarray
p65
(I0
tp66
S'b'
tRp67
(I1
(I16
I1
tg27
(S'f4'
I0
I1
tRp68
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg17
cnumpy.core.multiarray
_reconstruct
p69
(g65
(I0
tS'b'
tRp70
(I1
(I16
I1
tg27
(S'O4'
I0
I1
tRp71
(I3
S'|'
NNNI-1
I-1
I63
tbI00
(lp72
NaS'--'
p73
aS'--'
p74
aNaNaS'--'
p75
aS'--'
p76
aS'--'
p77
aS'--'
p78
aS'--'
p79
aS'--'
p80
aNaS'--'
p81
aNaS'--'
p82
aS'--'
p83
atbsS'order'
p84
g63
(g64
g65
g66
S'b'
tRp85
(I1
(I16
I1
tg68
I00
S'\x00\x00\x80@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x00\x00\x00\x00@@\x00\x00\x00\x00\x00\x00\xa0@'
S'\x00\x01\x01\x00\x00\x01\x01\x01\x01\x01\x01\x00\x01\x00\x01\x00'
Ntbsg18
g63
(g64
g65
g66
S'b'
tRp86
(I1
(I16
I1
tg68
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x01\x01\x00\x00\x01\x01\x01\x01\x01\x01\x00\x01\x00\x01\x01'
NtbstRp87
(dp88
S'isNumeric'
p89
(dp90
g62
I01
sg17
I00
sg84
I01
sg18
I01
ssS'trials'
p91
g38
sS'dataTypes'
p92
(lp93
g62
ag84
ag17
ag18
asS'dataShape'
p94
(lp95
I16
aI1
asbsS'method'
p96
S'random'
p97
sS'sequenceIndices'
p98
g69
(g65
(I0
tS'b'
tRp99
(I1
(I16
I1
tg27
(S'i4'
I0
I1
tRp100
(I3
S'<'
NNNI-1
I-1
I0
tbI01
S'\x04\x00\x00\x00\x03\x00\x00\x00\x0b\x00\x00\x00\r\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x08\x00\x00\x00\x0c\x00\x00\x00\x01\x00\x00\x00\x0e\x00\x00\x00\x06\x00\x00\x00\x02\x00\x00\x00\x07\x00\x00\x00\n\x00\x00\x00\t\x00\x00\x00\x05\x00\x00\x00'
tbsS'finished'
p101
I00
sS'nReps'
p102
I1
sS'nRemaining'
p103
I10
sS'trialList'
p104
(lp105
g1
(g43
g44
(dp106
g46
I200
sg47
Vy
sg48
Vup_right
p107
sg50
Vcrosscyan.gif
p108
sg52
VLine
p109
sg54
I200
stRp110
ag1
(g43
g44
(dp111
g46
I200
sg47
Vy
sg48
g107
sg50
Vcrossgray.gif
p112
sg52
VTriangle
p113
sg54
I200
stRp114
ag1
(g43
g44
(dp115
g46
I200
sg47
Vy
sg48
g107
sg50
Vcrossorange.gif
p116
sg52
VSquare
p117
sg54
I200
stRp118
ag1
(g43
g44
(dp119
g46
I200
sg47
Vy
sg48
g107
sg50
Vcrossyellow.gif
p120
sg52
g53
sg54
I200
stRp121
ag1
(g43
g44
(dp122
g46
I-200
sg47
Vt
sg48
Vup_left
p123
sg50
Vcirclegreen.gif
p124
sg52
g109
sg54
I200
stRp125
ag1
(g43
g44
(dp126
g46
I-200
sg47
Vt
sg48
g123
sg50
Vcirclemagenta.gif
p127
sg52
g113
sg54
I200
stRp128
ag1
(g43
g44
(dp129
g46
I-200
sg47
Vt
sg48
g123
sg50
Vcirclewhite.gif
p130
sg52
g117
sg54
I200
stRp131
ag1
(g43
g44
(dp132
g46
I-200
sg47
Vt
sg48
g123
sg50
Vcirclecyan.gif
p133
sg52
g53
sg54
I200
stRp134
ag1
(g43
g44
(dp135
g46
I200
sg47
Vh
sg48
Vdown_right
p136
sg50
Vdiamondgray.gif
p137
sg52
g109
sg54
I-200
stRp138
ag1
(g43
g44
(dp139
g46
I200
sg47
Vh
sg48
g136
sg50
Vdiamondorange.gif
p140
sg52
g113
sg54
I-200
stRp141
ag1
(g43
g44
(dp142
g46
I200
sg47
Vh
sg48
g136
sg50
Vdiamondwhite.gif
p143
sg52
g117
sg54
I-200
stRp144
ag1
(g43
g44
(dp145
g46
I200
sg47
Vh
sg48
g136
sg50
Vdiamondmagenta.gif
p146
sg52
g53
sg54
I-200
stRp147
ag1
(g43
g44
(dp148
g46
I-200
sg47
Vg
sg48
g49
sg50
Vhexagonyellow.gif
p149
sg52
g109
sg54
I-200
stRp150
ag1
(g43
g44
(dp151
g46
I-200
sg47
Vg
sg48
g49
sg50
Vhexagonmagenta.gif
p152
sg52
g113
sg54
I-200
stRp153
ag1
(g43
g44
(dp154
g46
I-200
sg47
Vg
sg48
g49
sg50
Vhexagongreen.gif
p155
sg52
g117
sg54
I-200
stRp156
ag55
asS'seed'
p157
NsS'thisIndex'
p158
g26
(g100
S'\x0f\x00\x00\x00'
tRp159
sS'thisN'
p160
I5
sS'thisTrialN'
p161
I5
sS'nTotal'
p162
I16
sS'_warnUseOfNext'
p163
I01
sbasS'saveWideText'
p164
I01
sS'thisEntry'
p165
(dp166
sS'version'
p167
S''
sS'_paramNamesSoFar'
p168
(lp169
g46
ag48
ag50
ag52
ag54
ag47
asS'entries'
p170
(lp171
(dp172
g30
I3
sg23
V
sg16
F5.1298670768737793
sg24
V
sg25
g29
sg22
g12
sg15
S'space'
p173
sg31
g32
sg33
g34
sa(dp174
g30
I3
sg17
Nsg46
I-200
sg47
Vt
sg50
g124
sg18
I0
sg25
g29
sg24
V
sg33
g34
sS'practiceTrials.thisN'
p175
I0
sg54
I200
sg31
g32
sg52
g109
sg22
g12
sS'practiceTrials.thisTrialN'
p176
I0
sS'practiceTrials.thisIndex'
p177
g26
(g100
S'\x04\x00\x00\x00'
tRp178
sS'practiceTrials.thisRepN'
p179
I0
sg23
V
sg48
g123
sa(dp180
g30
I3
sg17
Nsg46
I200
sg47
Vy
sg50
g120
sg18
I0
sg25
g29
sg24
V
sg33
g34
sS'practiceTrials.thisN'
p181
I1
sg54
I200
sg31
g32
sg52
g53
sg22
g12
sS'practiceTrials.thisTrialN'
p182
I1
sS'practiceTrials.thisIndex'
p183
g26
(g100
S'\x03\x00\x00\x00'
tRp184
sS'practiceTrials.thisRepN'
p185
I0
sg23
V
sg48
g107
sa(dp186
g30
I3
sg17
Nsg46
I200
sg47
Vh
sg50
g146
sg18
I0
sg25
g29
sg24
V
sg33
g34
sS'practiceTrials.thisN'
p187
I2
sg54
I-200
sg31
g32
sg52
g53
sg22
g12
sS'practiceTrials.thisTrialN'
p188
I2
sS'practiceTrials.thisIndex'
p189
g26
(g100
S'\x0b\x00\x00\x00'
tRp190
sS'practiceTrials.thisRepN'
p191
I0
sg23
V
sg48
g136
sa(dp192
g30
I3
sg17
Nsg46
I-200
sg47
Vg
sg50
g152
sg18
I0
sg25
g29
sg24
V
sg33
g34
sS'practiceTrials.thisN'
p193
I3
sg54
I-200
sg31
g32
sg52
g113
sg22
g12
sS'practiceTrials.thisTrialN'
p194
I3
sS'practiceTrials.thisIndex'
p195
g26
(g100
S'\r\x00\x00\x00'
tRp196
sS'practiceTrials.thisRepN'
p197
I0
sg23
V
sg48
g49
sa(dp198
g30
I3
sg17
Nsg46
I200
sg47
Vy
sg50
g108
sg18
I0
sg25
g29
sg24
V
sg33
g34
sS'practiceTrials.thisN'
p199
I4
sg54
I200
sg31
g32
sg52
g109
sg22
g12
sS'practiceTrials.thisTrialN'
p200
I4
sS'practiceTrials.thisIndex'
p201
g26
(g100
S'\x00\x00\x00\x00'
tRp202
sS'practiceTrials.thisRepN'
p203
I0
sg23
V
sg48
g107
sasS'loops'
p204
(lp205
g38
asS'savePickle'
p206
I01
sb.