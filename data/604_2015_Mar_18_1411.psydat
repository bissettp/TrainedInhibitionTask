ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
V/Users/patrickbissett/OneDrive/Poldrack/TrainedInhibition/PsychoPy/IntegratingDifferentCodeFlexibleStim8.psyexp
p7
sS'dataFileName'
p8
V/Users/patrickbissett/OneDrive/Poldrack/TrainedInhibition/PsychoPy/data/604_2015_Mar_18_1411
p9
sS'runtimeInfo'
p10
NsS'name'
p11
S'LearningTask'
p12
sS'dataNames'
p13
(lp14
S'ok1.keys'
p15
aS'ok1.rt'
p16
aS'resp.keys'
p17
aS'resp.corr'
p18
aS'resp.rt'
p19
asS'autoLog'
p20
I01
sS'extraInfo'
p21
(dp22
S'expName'
p23
g12
sS'gender (m/f)'
p24
V
sS'age'
p25
V
sS'frameRate'
p26
cnumpy.core.multiarray
scalar
p27
(cnumpy
dtype
p28
(S'f8'
I0
I1
tRp29
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x00\x08\x089\x13\xfdM@'
tRp30
sS'session'
p31
I3
sS'date'
p32
V2015_Mar_18_1411
p33
sS'participant'
p34
V604
p35
ssS'loopsUnfinished'
p36
(lp37
g1
(cpsychopy.data
TrialHandler
p38
g3
NtRp39
(dp40
S'origin'
p41
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="code_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="import random&#10;&#10;Integers = [1, 2, 3, 4, 5, 6, 7, 8]&#10;&#10;ConditionChoice = random.choice(Integers)&#10;&#10;if ConditionChoice == 1:&#10;    CurrentStimulus = ConditionOne['fileName']&#10;elif ConditionChoice == 2:&#10;    CurrentStimulus = ConditionTwo['fileName']&#10;elif ConditionChoice == 3:&#10;    CurrentStimulus = ConditionThree['fileName']&#10;elif ConditionChoice == 4:&#10;    CurrentStimulus = ConditionFour['fileName']&#10;elif ConditionChoice == 5:&#10;    CurrentStimulus = ConditionFive['fileName']&#10;elif ConditionChoice == 6:&#10;    CurrentStimulus = ConditionSix['fileName']&#10;elif ConditionChoice == 7:&#10;    CurrentStimulus = ConditionSeven['fileName']&#10;elif ConditionChoice == 8:&#10;    CurrentStimulus = ConditionEight['fileName']" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'t', 'y', 'g', 'h'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$CurrentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[101, 101]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="StimSetup">\u000a      <CodeComponent name="code">\u000a        <Param name="Begin Experiment" val="import random&#10;&#10;colors = ['yellow', 'white', 'orange', 'magenta', 'green', 'gray', 'cyan', 'blue']&#10;shapes = ['triangle', 'square', 'line', 'invertedtriangle', 'hexagon', 'diamond', 'cross', 'circle']&#10;rewards = [0.5, 1, 2, 4] * 2&#10;conditions = ['go', 'go', 'go', 'go', 'stop', 'stop', 'stop', 'stop']&#10;trialDetailsList = []&#10;&#10;shuffle(colors)&#10;shuffle(shapes)&#10;&#10;for i, color in enumerate(colors): # cycle through each color and keep track of an index number&#10;    trialDetails = {} # a dictionary of key-value pairs&#10;    trialDetails['fileName'] = shapes[i] + color + '.gif'&#10;    trialDetails['reward'] = rewards[i]&#10;    trialDetails['condition'] = conditions[i]&#10;    trialDetailsList.append(trialDetails)&#10;&#10;shuffle(trialDetailsList) # do this now to ensure that order of presentation of rewards and conditions is also shuffled&#10;&#10;ConditionOne = trialDetailsList[0]&#10;ConditionTwo = trialDetailsList[1]&#10;ConditionThree = trialDetailsList[2]&#10;ConditionFour = trialDetailsList[3]&#10;ConditionFive = trialDetailsList[4]&#10;ConditionSix = trialDetailsList[5]&#10;ConditionSeven = trialDetailsList[6]&#10;ConditionEight = trialDetailsList[7]" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="OK, ready to start the main experiment?&#10;&#10;Remember, press;&#10; - 'S' if the SMALL letters are S&#10; - 'H' if the SMALL letters are H&#10;&#10;Try to respond as quickly and as accurately as possible.&#10;&#10;When you are ready to proceed press any key." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#message variable just needs some value at start&#10;message=0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="DisplayReward = random.randrange(1, 6)&#10;&#10;if resp.corr:#stored on last run routine&#10;    if DisplayReward == 1:&#10;            message = 0;&#10;    else:&#10;        if ConditionChoice == 1:&#10;            CurrentReward = ConditionOne['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;        elif ConditionChoice == 2:&#10;            CurrentReward = ConditionTwo['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;        elif ConditionChoice == 3:&#10;            CurrentReward = ConditionThree['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;        elif ConditionChoice == 4:&#10;            CurrentReward = ConditionFour['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;        elif ConditionChoice == 5:&#10;            CurrentReward = ConditionFive['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;        elif ConditionChoice == 6:&#10;            CurrentReward = ConditionSix['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;        elif ConditionChoice == 7:&#10;            CurrentReward = ConditionSeven['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;        elif ConditionChoice == 8:&#10;            CurrentReward = ConditionEight['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;elif resp.rt == 0:&#10;    message =&quot;Too Slow&quot;&#10;else:&#10;  message=&quot;Wrong&quot;&#10;&#10;&#10;&#10;#if DisplayReward == 1:&#10;#    message = 0;&#10;#else:&#10;#    message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;&#10;#  message=&quot;Correct! RT=%.3f&quot; %(resp.rt)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.07" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="StimSetup"/>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practiceTrials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practiceTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="practiceTrials"/>\u000a    <Routine name="instrMain"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="10" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="trials"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p42
sS'thisTrial'
p43
g1
(cpsychopy.data
TrialType
p44
c__builtin__
dict
p45
(dp46
VxPos
p47
I-200
sVcorrAns
p48
Vt
sVyPos
p49
I200
stRp50
sS'_exp'
p51
I232686704
sg11
S'trials'
p52
sg6
g7
sS'thisRepN'
p53
I2
sg20
I01
sg21
g22
sS'data'
p54
g1
(cpsychopy.data
DataHandler
p55
g45
(dp56
S'ran'
p57
cnumpy.ma.core
_mareconstruct
p58
(cnumpy.ma.core
MaskedArray
p59
cnumpy
ndarray
p60
(I0
tp61
S'b'
tRp62
(I1
(I4
I10
tg28
(S'f4'
I0
I1
tRp63
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg17
cnumpy.core.multiarray
_reconstruct
p64
(g60
(I0
tS'b'
tRp65
(I1
(I4
I10
tg28
(S'O4'
I0
I1
tRp66
(I3
S'|'
NNNI-1
I-1
I63
tbI00
(lp67
S'y'
aS'y'
aS'--'
p68
aS'--'
p69
aS'--'
p70
aS'--'
p71
aS'--'
p72
aS'--'
p73
aS'--'
p74
aS'--'
p75
aS't'
aS't'
aS't'
aS'--'
p76
aS'--'
p77
aS'--'
p78
aS'--'
p79
aS'--'
p80
aS'--'
p81
aS'--'
p82
aS'h'
aS'h'
aS'h'
aS'--'
p83
aS'--'
p84
aS'--'
p85
aS'--'
p86
aS'--'
p87
aS'--'
p88
aS'--'
p89
aS'g'
aS'g'
aS'--'
p90
aS'--'
p91
aS'--'
p92
aS'--'
p93
aS'--'
p94
aS'--'
p95
aS'--'
p96
aS'--'
p97
atbsg18
g58
(g59
g60
g61
S'b'
tRp98
(I1
(I4
I10
tg63
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x01\x01\x01\x01\x01\x01\x01\x01\x00\x00\x00\x01\x01\x01\x01\x01\x01\x01\x00\x00\x00\x01\x01\x01\x01\x01\x01\x01\x00\x00\x01\x01\x01\x01\x01\x01\x01\x01'
NtbsS'order'
p99
g58
(g59
g60
g61
S'b'
tRp100
(I1
(I4
I10
tg63
I00
S'\x00\x00\x00\x00\x00\x00\x80@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@\x00\x00\xc0@\x00\x00\x10A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\xa0@\x00\x00\x00A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@@\x00\x00\xe0@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x01\x01\x01\x01\x01\x01\x01\x01\x00\x00\x00\x01\x01\x01\x01\x01\x01\x01\x00\x00\x00\x01\x01\x01\x01\x01\x01\x01\x00\x00\x01\x01\x01\x01\x01\x01\x01\x01'
Ntbsg19
g58
(g59
g60
g61
S'b'
tRp101
(I1
(I4
I10
tg63
I00
S'h\xd4\xd5>\x08\xc7\xc4>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x008R\xde>\xb8\xca\xb3>h`\xcd>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\xc6\xd5>\x00/\xab>\xf8\xc2\xc4>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xd8+\xbc>\xa0\x97\x91>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x01\x01\x01\x01\x01\x01\x01\x01\x00\x00\x00\x01\x01\x01\x01\x01\x01\x01\x00\x00\x00\x01\x01\x01\x01\x01\x01\x01\x00\x00\x01\x01\x01\x01\x01\x01\x01\x01'
NtbstRp102
(dp103
S'isNumeric'
p104
(dp105
g57
I01
sg17
I00
sg19
I01
sg99
I01
sg18
I01
ssg52
g39
sS'dataTypes'
p106
(lp107
g57
ag99
ag17
ag18
ag19
asS'dataShape'
p108
(lp109
I4
aI10
asbsS'method'
p110
S'random'
p111
sS'sequenceIndices'
p112
g64
(g60
(I0
tS'b'
tRp113
(I1
(I4
I10
tg28
(S'i4'
I0
I1
tRp114
(I3
S'<'
NNNI-1
I-1
I0
tbI01
S'\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00'
tbsS'finished'
p115
I00
sS'nReps'
p116
I10
sS'nRemaining'
p117
I30
sS'trialList'
p118
(lp119
g1
(g44
g45
(dp120
g47
I200
sg48
Vy
sg49
I200
stRp121
ag50
ag1
(g44
g45
(dp122
g47
I200
sg48
Vh
sg49
I-200
stRp123
ag1
(g44
g45
(dp124
g47
I-200
sg48
Vg
sg49
I-200
stRp125
asS'seed'
p126
NsS'thisIndex'
p127
g27
(g114
S'\x01\x00\x00\x00'
tRp128
sS'thisN'
p129
I9
sS'thisTrialN'
p130
I1
sS'nTotal'
p131
I40
sS'_warnUseOfNext'
p132
I01
sbasS'saveWideText'
p133
I01
sS'thisEntry'
p134
(dp135
g17
S't'
sg19
F0.40112614631652832
sg18
I1
ssS'version'
p136
S''
sS'_paramNamesSoFar'
p137
(lp138
VxPos
p139
aVcorrAns
p140
aVyPos
p141
asS'entries'
p142
(lp143
(dp144
g31
I3
sg24
V
sg16
F1.4339230060577393
sg25
V
sg26
g30
sg23
g12
sg15
S'space'
p145
sg32
g33
sg34
g35
sa(dp146
g31
I3
sg17
S'y'
sg139
I200
sg24
V
sg18
I1
sg19
F0.501068115234375
sg25
V
sS'practiceTrials.thisN'
p147
I0
sg141
I200
sg26
g30
sg32
g33
sg23
g12
sS'practiceTrials.thisTrialN'
p148
I0
sS'practiceTrials.thisIndex'
p149
g27
(g114
S'\x00\x00\x00\x00'
tRp150
sS'practiceTrials.thisRepN'
p151
I0
sg34
g35
sg140
Vy
sa(dp152
g31
I3
sg17
S'g'
sg139
I-200
sg24
V
sg18
I1
sg19
F0.45115399360656738
sg25
V
sS'practiceTrials.thisN'
p153
I1
sg141
I-200
sg26
g30
sg32
g33
sg23
g12
sS'practiceTrials.thisTrialN'
p154
I1
sS'practiceTrials.thisIndex'
p155
g27
(g114
S'\x03\x00\x00\x00'
tRp156
sS'practiceTrials.thisRepN'
p157
I0
sg34
g35
sg140
Vg
sa(dp158
g31
I3
sg17
S't'
sg139
I-200
sg24
V
sg18
I1
sg19
F0.53299212455749512
sg25
V
sS'practiceTrials.thisN'
p159
I2
sg141
I200
sg26
g30
sg32
g33
sg23
g12
sS'practiceTrials.thisTrialN'
p160
I2
sS'practiceTrials.thisIndex'
p161
g27
(g114
S'\x01\x00\x00\x00'
tRp162
sS'practiceTrials.thisRepN'
p163
I0
sg34
g35
sg140
Vt
sa(dp164
g31
I3
sg17
S'h'
sg139
I200
sg24
V
sg18
I1
sg19
F0.41737985610961914
sg25
V
sS'practiceTrials.thisN'
p165
I3
sg141
I-200
sg26
g30
sg32
g33
sg23
g12
sS'practiceTrials.thisTrialN'
p166
I3
sS'practiceTrials.thisIndex'
p167
g27
(g114
S'\x02\x00\x00\x00'
tRp168
sS'practiceTrials.thisRepN'
p169
I0
sg34
g35
sg140
Vh
sa(dp170
g31
I3
sg17
S'y'
sg47
I200
sg24
V
sg18
I1
sg19
F0.41763615608215332
sg25
V
sg26
g30
sg49
I200
sS'trials.thisN'
p171
I0
sg23
g12
sS'trials.thisTrialN'
p172
I0
sg48
Vy
sS'trials.thisRepN'
p173
I0
sg32
g33
sg34
g35
sS'trials.thisIndex'
p174
g27
(g114
S'\x00\x00\x00\x00'
tRp175
sa(dp176
g31
I3
sg17
S'h'
sg47
I200
sg24
V
sg18
I1
sg19
F0.41753196716308594
sg25
V
sg26
g30
sg49
I-200
sS'trials.thisN'
p177
I1
sg23
g12
sS'trials.thisTrialN'
p178
I1
sg48
Vh
sS'trials.thisRepN'
p179
I0
sg32
g33
sg34
g35
sS'trials.thisIndex'
p180
g27
(g114
S'\x02\x00\x00\x00'
tRp181
sa(dp182
g31
I3
sg17
S't'
sg47
I-200
sg24
V
sg18
I1
sg19
F0.43422102928161621
sg25
V
sg26
g30
sg49
I200
sS'trials.thisN'
p183
I2
sg23
g12
sS'trials.thisTrialN'
p184
I2
sg48
Vt
sS'trials.thisRepN'
p185
I0
sg32
g33
sg34
g35
sS'trials.thisIndex'
p186
g27
(g114
S'\x01\x00\x00\x00'
tRp187
sa(dp188
g31
I3
sg17
S'g'
sg47
I-200
sg24
V
sg18
I1
sg19
F0.36752200126647949
sg25
V
sg26
g30
sg49
I-200
sS'trials.thisN'
p189
I3
sg23
g12
sS'trials.thisTrialN'
p190
I3
sg48
Vg
sS'trials.thisRepN'
p191
I0
sg32
g33
sg34
g35
sS'trials.thisIndex'
p192
g27
(g114
S'\x03\x00\x00\x00'
tRp193
sa(dp194
g31
I3
sg17
S'y'
sg47
I200
sg24
V
sg18
I1
sg19
F0.38433098793029785
sg25
V
sg26
g30
sg49
I200
sS'trials.thisN'
p195
I4
sg23
g12
sS'trials.thisTrialN'
p196
I0
sg48
Vy
sS'trials.thisRepN'
p197
I1
sg32
g33
sg34
g35
sS'trials.thisIndex'
p198
g27
(g114
S'\x00\x00\x00\x00'
tRp199
sa(dp200
g31
I3
sg17
S'h'
sg47
I200
sg24
V
sg18
I1
sg19
F0.33434295654296875
sg25
V
sg26
g30
sg49
I-200
sS'trials.thisN'
p201
I5
sg23
g12
sS'trials.thisTrialN'
p202
I1
sg48
Vh
sS'trials.thisRepN'
p203
I1
sg32
g33
sg34
g35
sS'trials.thisIndex'
p204
g27
(g114
S'\x02\x00\x00\x00'
tRp205
sa(dp206
g31
I3
sg17
S't'
sg47
I-200
sg24
V
sg18
I1
sg19
F0.35115599632263184
sg25
V
sg26
g30
sg49
I200
sS'trials.thisN'
p207
I6
sg23
g12
sS'trials.thisTrialN'
p208
I2
sg48
Vt
sS'trials.thisRepN'
p209
I1
sg32
g33
sg34
g35
sS'trials.thisIndex'
p210
g27
(g114
S'\x01\x00\x00\x00'
tRp211
sa(dp212
g31
I3
sg17
S'g'
sg47
I-200
sg24
V
sg18
I1
sg19
F0.28435993194580078
sg25
V
sg26
g30
sg49
I-200
sS'trials.thisN'
p213
I7
sg23
g12
sS'trials.thisTrialN'
p214
I3
sg48
Vg
sS'trials.thisRepN'
p215
I1
sg32
g33
sg34
g35
sS'trials.thisIndex'
p216
g27
(g114
S'\x03\x00\x00\x00'
tRp217
sa(dp218
g31
I3
sg17
S'h'
sg47
I200
sg24
V
sg18
I1
sg19
F0.38429999351501465
sg25
V
sg26
g30
sg49
I-200
sS'trials.thisN'
p219
I8
sg23
g12
sS'trials.thisTrialN'
p220
I0
sg48
Vh
sS'trials.thisRepN'
p221
I2
sg32
g33
sg34
g35
sS'trials.thisIndex'
p222
g27
(g114
S'\x02\x00\x00\x00'
tRp223
sasS'loops'
p224
(lp225
g1
(g38
g3
NtRp226
(dp227
g41
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="code_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="import random&#10;&#10;Integers = [1, 2, 3, 4, 5, 6, 7, 8]&#10;&#10;ConditionChoice = random.choice(Integers)&#10;&#10;if ConditionChoice == 1:&#10;    CurrentStimulus = ConditionOne['fileName']&#10;elif ConditionChoice == 2:&#10;    CurrentStimulus = ConditionTwo['fileName']&#10;elif ConditionChoice == 3:&#10;    CurrentStimulus = ConditionThree['fileName']&#10;elif ConditionChoice == 4:&#10;    CurrentStimulus = ConditionFour['fileName']&#10;elif ConditionChoice == 5:&#10;    CurrentStimulus = ConditionFive['fileName']&#10;elif ConditionChoice == 6:&#10;    CurrentStimulus = ConditionSix['fileName']&#10;elif ConditionChoice == 7:&#10;    CurrentStimulus = ConditionSeven['fileName']&#10;elif ConditionChoice == 8:&#10;    CurrentStimulus = ConditionEight['fileName']" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'t', 'y', 'g', 'h'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$CurrentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[101, 101]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="StimSetup">\u000a      <CodeComponent name="code">\u000a        <Param name="Begin Experiment" val="import random&#10;&#10;colors = ['yellow', 'white', 'orange', 'magenta', 'green', 'gray', 'cyan', 'blue']&#10;shapes = ['triangle', 'square', 'line', 'invertedtriangle', 'hexagon', 'diamond', 'cross', 'circle']&#10;rewards = [0.5, 1, 2, 4] * 2&#10;conditions = ['go', 'go', 'go', 'go', 'stop', 'stop', 'stop', 'stop']&#10;trialDetailsList = []&#10;&#10;shuffle(colors)&#10;shuffle(shapes)&#10;&#10;for i, color in enumerate(colors): # cycle through each color and keep track of an index number&#10;    trialDetails = {} # a dictionary of key-value pairs&#10;    trialDetails['fileName'] = shapes[i] + color + '.gif'&#10;    trialDetails['reward'] = rewards[i]&#10;    trialDetails['condition'] = conditions[i]&#10;    trialDetailsList.append(trialDetails)&#10;&#10;shuffle(trialDetailsList) # do this now to ensure that order of presentation of rewards and conditions is also shuffled&#10;&#10;ConditionOne = trialDetailsList[0]&#10;ConditionTwo = trialDetailsList[1]&#10;ConditionThree = trialDetailsList[2]&#10;ConditionFour = trialDetailsList[3]&#10;ConditionFive = trialDetailsList[4]&#10;ConditionSix = trialDetailsList[5]&#10;ConditionSeven = trialDetailsList[6]&#10;ConditionEight = trialDetailsList[7]" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="OK, ready to start the main experiment?&#10;&#10;Remember, press;&#10; - 'S' if the SMALL letters are S&#10; - 'H' if the SMALL letters are H&#10;&#10;Try to respond as quickly and as accurately as possible.&#10;&#10;When you are ready to proceed press any key." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#message variable just needs some value at start&#10;message=0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="DisplayReward = random.randrange(1, 6)&#10;&#10;if resp.corr:#stored on last run routine&#10;    if DisplayReward == 1:&#10;            message = 0;&#10;    else:&#10;        if ConditionChoice == 1:&#10;            CurrentReward = ConditionOne['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;        elif ConditionChoice == 2:&#10;            CurrentReward = ConditionTwo['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;        elif ConditionChoice == 3:&#10;            CurrentReward = ConditionThree['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;        elif ConditionChoice == 4:&#10;            CurrentReward = ConditionFour['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;        elif ConditionChoice == 5:&#10;            CurrentReward = ConditionFive['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;        elif ConditionChoice == 6:&#10;            CurrentReward = ConditionSix['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;        elif ConditionChoice == 7:&#10;            CurrentReward = ConditionSeven['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;        elif ConditionChoice == 8:&#10;            CurrentReward = ConditionEight['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;elif resp.rt == 0:&#10;    message =&quot;Too Slow&quot;&#10;else:&#10;  message=&quot;Wrong&quot;&#10;&#10;&#10;&#10;#if DisplayReward == 1:&#10;#    message = 0;&#10;#else:&#10;#    message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;&#10;#  message=&quot;Correct! RT=%.3f&quot; %(resp.rt)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.07" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="StimSetup"/>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practiceTrials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practiceTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="practiceTrials"/>\u000a    <Routine name="instrMain"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="10" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="trials"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p228
sg43
(lp229
sg51
I232686704
sg11
S'practiceTrials'
p230
sg6
g7
sg53
I1
sg20
I01
sg21
g22
sg54
g1
(g55
g45
(dp231
g57
g58
(g59
g60
g61
S'b'
tRp232
(I1
(I4
I1
tg63
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00'
Ntbsg17
g64
(g60
(I0
tS'b'
tRp233
(I1
(I4
I1
tg66
I00
(lp234
S'y'
aS't'
aS'h'
aS'g'
atbsg18
g58
(g59
g60
g61
S'b'
tRp235
(I1
(I4
I1
tg63
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00'
Ntbsg99
g58
(g59
g60
g61
S'b'
tRp236
(I1
(I4
I1
tg63
I00
S'\x00\x00\x00\x00\x00\x00\x00@\x00\x00@@\x00\x00\x80?'
S'\x00\x00\x00\x00'
Ntbsg19
g58
(g59
g60
g61
S'b'
tRp237
(I1
(I4
I1
tg63
I00
S'\x00F\x00?,r\x08?\xd0\xb2\xd5>\xa8\xfd\xe6>'
S'\x00\x00\x00\x00'
NtbstRp238
(dp239
g104
(dp240
g57
I01
sg17
I00
sg19
I01
sg99
I01
sg18
I01
ssg52
g226
sg106
(lp241
g57
ag99
ag17
ag18
ag19
asg108
(lp242
I4
aI1
asbsg110
g111
sg112
g64
(g60
(I0
tS'b'
tRp243
(I1
(I4
I1
tg114
I01
S'\x00\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00'
tbsg115
I01
sg116
I1
sg117
I-1
sg118
(lp244
g1
(g44
g45
(dp245
g139
I200
sg140
Vy
sg141
I200
stRp246
ag1
(g44
g45
(dp247
g139
I-200
sg140
Vt
sg141
I200
stRp248
ag1
(g44
g45
(dp249
g139
I200
sg140
Vh
sg141
I-200
stRp250
ag1
(g44
g45
(dp251
g139
I-200
sg140
Vg
sg141
I-200
stRp252
asg126
Nsg127
g168
sg129
I4
sg130
I0
sg131
I4
sg132
I01
sbag39
asS'savePickle'
p253
I00
sb.