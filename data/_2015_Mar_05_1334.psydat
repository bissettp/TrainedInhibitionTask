ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
V/Users/patrickbissett/OneDrive/Poldrack/TrainedInhibition/PsychoPy/IntegratingDifferentCodeFlexibleStim.psyexp
p7
sS'dataFileName'
p8
V/Users/patrickbissett/OneDrive/Poldrack/TrainedInhibition/PsychoPy/data/_2015_Mar_05_1334
p9
sS'runtimeInfo'
p10
NsS'name'
p11
S'LearningTask'
p12
sS'dataNames'
p13
(lp14
S'ok1.keys'
p15
aS'ok1.rt'
p16
asS'autoLog'
p17
I01
sS'extraInfo'
p18
(dp19
S'expName'
p20
g12
sS'gender (m/f)'
p21
V
sS'age'
p22
V55
p23
sS'frameRate'
p24
cnumpy.core.multiarray
scalar
p25
(cnumpy
dtype
p26
(S'f8'
I0
I1
tRp27
(I3
S'<'
NNNI-1
I-1
I0
tbS'^x\xde\xc42\xfbM@'
tRp28
sS'session'
p29
I3
sS'date'
p30
V2015_Mar_05_1334
p31
sS'participant'
p32
V
ssS'loopsUnfinished'
p33
(lp34
g1
(cpsychopy.data
TrialHandler
p35
g3
NtRp36
(dp37
S'origin'
p38
V<PsychoPy2experiment version="1.81.03" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="OK, ready to start the main experiment?&#10;&#10;Remember, press;&#10; - 'S' if the SMALL letters are S&#10; - 'H' if the SMALL letters are H&#10;&#10;Try to respond as quickly and as accurately as possible.&#10;&#10;When you are ready to proceed press any key." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial">\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'t', 'y', 'g', 'h'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$ShapeStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[101, 101]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="StimSetup">\u000a      <CodeComponent name="code">\u000a        <Param name="Begin Experiment" val="colors = ['yellow', 'white', 'orange', 'magenta', 'green', 'gray', 'cyan', 'blue']&#10;shapes = ['triangle', 'square', 'line', 'invertedtriangle', 'hexagon', 'diamond', 'cross', 'circle']&#10;rewards = [0.5, 1, 2, 4] * 2&#10;conditions = ['go', 'go', 'go', 'go', 'stop', 'stop', 'stop', 'stop']&#10;trialDetailsList = []&#10;&#10;shuffle(colors)&#10;shuffle(shapes)&#10;&#10;for i, color in enumerate(colors): # cycle through each color and keep track of an index number&#10;    trialDetails = {} # a dictionary of key-value pairs&#10;    trialDetails['fileName'] = shapes[i] + color + '.gif'&#10;    trialDetails['reward'] = rewards[i]&#10;    trialDetails['condition'] = conditions[i]&#10;    trialDetailsList.append(trialDetails)&#10;&#10;shuffle(trialDetailsList) # do this now to ensure that order of presentation of rewards and conditions is also shuffled&#10;&#10;ConditionOne = trialDetailsList[0]&#10;ConditionTwo = trialDetailsList[1]&#10;ConditionThree = trialDetailsList[2]&#10;ConditionFour = trialDetailsList[3]&#10;ConditionFive = trialDetailsList[4]&#10;ConditionSix = trialDetailsList[5]&#10;ConditionSeven = trialDetailsList[6]&#10;ConditionEight = trialDetailsList[7]" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.07" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;msg=['Reward']" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="if resp.corr:#stored on last run routine&#10;  msg=&quot;Correct! RT=%.3f&quot; %(resp.rt)&#10;else:&#10;  msg=&quot;Oops! That was wrong&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="StimSetup"/>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practiceTrials">\u000a      <Param name="conditionsFile" val="Trialtypes4New.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practiceTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'Reward': 0.5, u'corrAns': u'y', u'ShapeStimulus': u'crosscyan.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 0.5, u'corrAns': u'y', u'ShapeStimulus': u'circlewhite.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'y', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'y', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'y', u'ShapeStimulus': u'squareyellow.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'y', u'ShapeStimulus': u'lineorange.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'y', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'y', u'ShapeStimulus': u'diamondgray.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u't', u'ShapeStimulus': u'crosscyan.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u't', u'ShapeStimulus': u'circlewhite.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u't', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u't', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u't', u'ShapeStimulus': u'squareyellow.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u't', u'ShapeStimulus': u'lineorange.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u't', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u't', u'ShapeStimulus': u'diamondgray.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 0.5, u'corrAns': u'h', u'ShapeStimulus': u'crosscyan.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 0.5, u'corrAns': u'h', u'ShapeStimulus': u'circlewhite.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'h', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'h', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'h', u'ShapeStimulus': u'squareyellow.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'h', u'ShapeStimulus': u'lineorange.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'h', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'h', u'ShapeStimulus': u'diamondgray.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u'g', u'ShapeStimulus': u'crosscyan.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u'g', u'ShapeStimulus': u'circlewhite.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u'g', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u'g', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u'g', u'ShapeStimulus': u'squareyellow.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u'g', u'ShapeStimulus': u'lineorange.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u'g', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u'g', u'ShapeStimulus': u'diamondgray.gif', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="practiceTrials"/>\u000a    <Routine name="instrMain"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="Trialtypes4New.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="4" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'Reward': 0.5, u'corrAns': u'y', u'ShapeStimulus': u'crosscyan.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 0.5, u'corrAns': u'y', u'ShapeStimulus': u'circlewhite.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'y', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'y', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'y', u'ShapeStimulus': u'squareyellow.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'y', u'ShapeStimulus': u'lineorange.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'y', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'y', u'ShapeStimulus': u'diamondgray.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u't', u'ShapeStimulus': u'crosscyan.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u't', u'ShapeStimulus': u'circlewhite.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u't', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u't', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u't', u'ShapeStimulus': u'squareyellow.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u't', u'ShapeStimulus': u'lineorange.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u't', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u't', u'ShapeStimulus': u'diamondgray.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 0.5, u'corrAns': u'h', u'ShapeStimulus': u'crosscyan.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 0.5, u'corrAns': u'h', u'ShapeStimulus': u'circlewhite.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'h', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'h', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'h', u'ShapeStimulus': u'squareyellow.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'h', u'ShapeStimulus': u'lineorange.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'h', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'h', u'ShapeStimulus': u'diamondgray.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u'g', u'ShapeStimulus': u'crosscyan.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u'g', u'ShapeStimulus': u'circlewhite.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u'g', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u'g', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u'g', u'ShapeStimulus': u'squareyellow.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u'g', u'ShapeStimulus': u'lineorange.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u'g', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u'g', u'ShapeStimulus': u'diamondgray.gif', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <LoopTerminator name="trials"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p39
sS'thisTrial'
p40
g1
(cpsychopy.data
TrialType
p41
c__builtin__
dict
p42
(dp43
VxPos
p44
I200
sVReward
p45
I4
sVcorrAns
p46
Vh
sVShapeStimulus
p47
V$ConditionSeven['fileName']
p48
sVyPos
p49
I-200
stRp50
sS'_exp'
p51
I226640336
sg11
S'practiceTrials'
p52
sg6
g7
sS'thisRepN'
p53
I0
sg17
I01
sg18
g19
sS'data'
p54
g1
(cpsychopy.data
DataHandler
p55
g42
(dp56
S'ran'
p57
cnumpy.ma.core
_mareconstruct
p58
(cnumpy.ma.core
MaskedArray
p59
cnumpy
ndarray
p60
(I0
tp61
S'b'
tRp62
(I1
(I32
I1
tg26
(S'f4'
I0
I1
tRp63
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbsS'order'
p64
g58
(g59
g60
g61
S'b'
tRp65
(I1
(I32
I1
tg63
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01'
NtbstRp66
(dp67
S'isNumeric'
p68
(dp69
g57
I01
sg64
I01
ssS'trials'
p70
g36
sS'dataTypes'
p71
(lp72
g57
ag64
asS'dataShape'
p73
(lp74
I32
aI1
asbsS'method'
p75
S'random'
p76
sS'sequenceIndices'
p77
cnumpy.core.multiarray
_reconstruct
p78
(g60
(I0
tS'b'
tRp79
(I1
(I32
I1
tg26
(S'i4'
I0
I1
tRp80
(I3
S'<'
NNNI-1
I-1
I0
tbI01
S'\x16\x00\x00\x00\x0f\x00\x00\x00\x19\x00\x00\x00\x03\x00\x00\x00\x0c\x00\x00\x00\x06\x00\x00\x00\x08\x00\x00\x00\x17\x00\x00\x00\x04\x00\x00\x00\x1c\x00\x00\x00\x1b\x00\x00\x00\x02\x00\x00\x00\x15\x00\x00\x00\x1f\x00\x00\x00\x0b\x00\x00\x00\x12\x00\x00\x00\x11\x00\x00\x00\x14\x00\x00\x00\x1d\x00\x00\x00\x13\x00\x00\x00\x05\x00\x00\x00\x1e\x00\x00\x00\x18\x00\x00\x00\x07\x00\x00\x00\x01\x00\x00\x00\n\x00\x00\x00\x1a\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\t\x00\x00\x00\x0e\x00\x00\x00\r\x00\x00\x00'
tbsS'finished'
p81
I00
sS'nReps'
p82
I1
sS'nRemaining'
p83
I31
sS'trialList'
p84
(lp85
g1
(g41
g42
(dp86
g44
I200
sg45
F0.5
sg46
Vy
sg47
V$ConditionOne['fileName']
p87
sg49
I200
stRp88
ag1
(g41
g42
(dp89
g44
I200
sg45
F0.5
sg46
Vy
sg47
V$ConditionTwo['fileName']
p90
sg49
I200
stRp91
ag1
(g41
g42
(dp92
g44
I200
sg45
I1
sg46
Vy
sg47
V$ConditionThree['fileName']
p93
sg49
I200
stRp94
ag1
(g41
g42
(dp95
g44
I200
sg45
I1
sg46
Vy
sg47
V$ConditionFour['fileName']
p96
sg49
I200
stRp97
ag1
(g41
g42
(dp98
g44
I200
sg45
I2
sg46
Vy
sg47
V$ConditionFive['fileName']
p99
sg49
I200
stRp100
ag1
(g41
g42
(dp101
g44
I200
sg45
I2
sg46
Vy
sg47
V$ConditionSix['fileName']
p102
sg49
I200
stRp103
ag1
(g41
g42
(dp104
g44
I200
sg45
I4
sg46
Vy
sg47
g48
sg49
I200
stRp105
ag1
(g41
g42
(dp106
g44
I200
sg45
I4
sg46
Vy
sg47
V$ConditionEight['fileName']
p107
sg49
I200
stRp108
ag1
(g41
g42
(dp109
g44
I-200
sg45
F0.5
sg46
Vt
sg47
g87
sg49
I200
stRp110
ag1
(g41
g42
(dp111
g44
I-200
sg45
F0.5
sg46
Vt
sg47
g90
sg49
I200
stRp112
ag1
(g41
g42
(dp113
g44
I-200
sg45
I1
sg46
Vt
sg47
g93
sg49
I200
stRp114
ag1
(g41
g42
(dp115
g44
I-200
sg45
I1
sg46
Vt
sg47
g96
sg49
I200
stRp116
ag1
(g41
g42
(dp117
g44
I-200
sg45
I2
sg46
Vt
sg47
g99
sg49
I200
stRp118
ag1
(g41
g42
(dp119
g44
I-200
sg45
I2
sg46
Vt
sg47
g102
sg49
I200
stRp120
ag1
(g41
g42
(dp121
g44
I-200
sg45
I4
sg46
Vt
sg47
g48
sg49
I200
stRp122
ag1
(g41
g42
(dp123
g44
I-200
sg45
I4
sg46
Vt
sg47
g107
sg49
I200
stRp124
ag1
(g41
g42
(dp125
g44
I200
sg45
F0.5
sg46
Vh
sg47
g87
sg49
I-200
stRp126
ag1
(g41
g42
(dp127
g44
I200
sg45
F0.5
sg46
Vh
sg47
g90
sg49
I-200
stRp128
ag1
(g41
g42
(dp129
g44
I200
sg45
I1
sg46
Vh
sg47
g93
sg49
I-200
stRp130
ag1
(g41
g42
(dp131
g44
I200
sg45
I1
sg46
Vh
sg47
g96
sg49
I-200
stRp132
ag1
(g41
g42
(dp133
g44
I200
sg45
I2
sg46
Vh
sg47
g99
sg49
I-200
stRp134
ag1
(g41
g42
(dp135
g44
I200
sg45
I2
sg46
Vh
sg47
g102
sg49
I-200
stRp136
ag50
ag1
(g41
g42
(dp137
g44
I200
sg45
I4
sg46
Vh
sg47
g107
sg49
I-200
stRp138
ag1
(g41
g42
(dp139
g44
I-200
sg45
F0.5
sg46
Vg
sg47
g87
sg49
I-200
stRp140
ag1
(g41
g42
(dp141
g44
I-200
sg45
F0.5
sg46
Vg
sg47
g90
sg49
I-200
stRp142
ag1
(g41
g42
(dp143
g44
I-200
sg45
I1
sg46
Vg
sg47
g93
sg49
I-200
stRp144
ag1
(g41
g42
(dp145
g44
I-200
sg45
I1
sg46
Vg
sg47
g96
sg49
I-200
stRp146
ag1
(g41
g42
(dp147
g44
I-200
sg45
I2
sg46
Vg
sg47
g99
sg49
I-200
stRp148
ag1
(g41
g42
(dp149
g44
I-200
sg45
I2
sg46
Vg
sg47
g102
sg49
I-200
stRp150
ag1
(g41
g42
(dp151
g44
I-200
sg45
I4
sg46
Vg
sg47
g48
sg49
I-200
stRp152
ag1
(g41
g42
(dp153
g44
I-200
sg45
I4
sg46
Vg
sg47
g107
sg49
I-200
stRp154
asS'seed'
p155
NsS'thisIndex'
p156
g25
(g80
S'\x16\x00\x00\x00'
tRp157
sS'thisN'
p158
I0
sS'thisTrialN'
p159
I0
sS'nTotal'
p160
I32
sS'_warnUseOfNext'
p161
I01
sbasS'saveWideText'
p162
I01
sS'thisEntry'
p163
(dp164
sS'version'
p165
S''
sS'_paramNamesSoFar'
p166
(lp167
sS'entries'
p168
(lp169
(dp170
g29
I3
sg21
V
sg16
F0.74876499176025391
sg22
g23
sg24
g28
sg20
g12
sg15
S'space'
p171
sg30
g31
sg32
V
sasS'loops'
p172
(lp173
g36
asS'savePickle'
p174
I01
sb.