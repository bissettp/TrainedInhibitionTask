ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
V/Users/patrickbissett/OneDrive/Poldrack/PsychoPy/LearningTask.psyexp
p7
sS'dataFileName'
p8
V/Users/patrickbissett/OneDrive/Poldrack/PsychoPy/data/_2014_Dec_03_1506
p9
sS'runtimeInfo'
p10
NsS'name'
p11
S'LearningTask'
p12
sS'dataNames'
p13
(lp14
S'ok1.keys'
p15
aS'ok1.rt'
p16
aS'resp.keys'
p17
aS'resp.corr'
p18
asS'autoLog'
p19
I01
sS'extraInfo'
p20
(dp21
S'expName'
p22
g12
sS'gender (m/f)'
p23
V
sS'age'
p24
V50
p25
sS'frameRate'
p26
cnumpy.core.multiarray
scalar
p27
(cnumpy
dtype
p28
(S'f8'
I0
I1
tRp29
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x1e\x00\x1e\x00\x1e\x00N@'
tRp30
sS'session'
p31
I3
sS'date'
p32
V2014_Dec_03_1506
p33
sS'participant'
p34
V
ssS'loopsUnfinished'
p35
(lp36
g1
(cpsychopy.data
TrialHandler
p37
g3
NtRp38
(dp39
S'origin'
p40
V<PsychoPy2experiment version="1.81.02" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="OK, ready to start the main experiment?&#10;&#10;Remember, press;&#10; - 'S' if the SMALL letters are S&#10; - 'H' if the SMALL letters are H&#10;&#10;Try to respond as quickly and as accurately as possible.&#10;&#10;When you are ready to proceed press any key." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial">\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'s', 'h'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <PolygonComponent name="polygon">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="fillColorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="polygon" valType="code" updates="None"/>\u000a        <Param name="fillColor" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="constant"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="lineWidth" val="10" valType="code" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="lineColor" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="lineColorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="nVertices" val="2" valType="int" updates="constant"/>\u000a        <Param name="size" val="[200, 200]" valType="code" updates="constant"/>\u000a      </PolygonComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="10" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="In this experiment you will be presented with a large letter made up of smaller letters. Your task is to&#10;&#10;Respond by pressing;&#10; - 'S' if the SMALL letters are S&#10; - 'H' if the SMALL letters are H&#10;&#10;Try to respond as quickly and as accurately as possible.&#10;&#10;There will be a number of practice trials in which you will be given feedback. &#10;&#10;Press any key when you are ready to proceed." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;msg=''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="if resp.corr:#stored on last run routine&#10;  msg=&quot;Correct! RT=%.3f&quot; %(resp.rt)&#10;else:&#10;  msg=&quot;Oops! That was wrong&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="thanks">\u000a      <TextComponent name="thanksMsg">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="thanksMsg" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="You're done! Fun, wasn't it!? ;-)" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="2.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practiceTrials">\u000a      <Param name="conditionsFile" val="trialTypes.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practiceTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{'xPos': 200.0, 'congruence': 'conflicting', 'yPos': 200.0, 'corrAns': 'h', 'stimFile': 'bigHsmallH.png', 'location': 'up_right'}, {'xPos': 200.0, 'congruence': 'consistent', 'yPos': 200.0, 'corrAns': 's', 'stimFile': 'bigHsmallS.png', 'location': 'up_right'}, {'xPos': 200.0, 'congruence': 'conflicting', 'yPos': 200.0, 'corrAns': 's', 'stimFile': 'bigSsmallS.png', 'location': 'up_right'}, {'xPos': 200.0, 'congruence': 'consistent', 'yPos': 200.0, 'corrAns': 'h', 'stimFile': 'bigSsmallH.png', 'location': 'up_right'}, {'xPos': -200.0, 'congruence': 'conflicting', 'yPos': 200.0, 'corrAns': 'h', 'stimFile': 'bigHsmallH.png', 'location': 'up_left'}, {'xPos': -200.0, 'congruence': 'consistent', 'yPos': 200.0, 'corrAns': 's', 'stimFile': 'bigHsmallS.png', 'location': 'up_left'}, {'xPos': -200.0, 'congruence': 'conflicting', 'yPos': 200.0, 'corrAns': 's', 'stimFile': 'bigSsmallS.png', 'location': 'up_left'}, {'xPos': -200.0, 'congruence': 'consistent', 'yPos': 200.0, 'corrAns': 'h', 'stimFile': 'bigSsmallH.png', 'location': 'up_left'}, {'xPos': 200.0, 'congruence': 'conflicting', 'yPos': -200.0, 'corrAns': 'h', 'stimFile': 'bigHsmallH.png', 'location': 'down_right'}, {'xPos': 200.0, 'congruence': 'consistent', 'yPos': -200.0, 'corrAns': 's', 'stimFile': 'bigHsmallS.png', 'location': 'down_right'}, {'xPos': 200.0, 'congruence': 'conflicting', 'yPos': -200.0, 'corrAns': 's', 'stimFile': 'bigSsmallS.png', 'location': 'down_right'}, {'xPos': 200.0, 'congruence': 'consistent', 'yPos': -200.0, 'corrAns': 'h', 'stimFile': 'bigSsmallH.png', 'location': 'down_right'}, {'xPos': -200.0, 'congruence': 'conflicting', 'yPos': -200.0, 'corrAns': 'h', 'stimFile': 'bigHsmallH.png', 'location': 'down_left'}, {'xPos': -200.0, 'congruence': 'consistent', 'yPos': -200.0, 'corrAns': 's', 'stimFile': 'bigHsmallS.png', 'location': 'down_left'}, {'xPos': -200.0, 'congruence': 'conflicting', 'yPos': -200.0, 'corrAns': 's', 'stimFile': 'bigSsmallS.png', 'location': 'down_left'}, {'xPos': -200.0, 'congruence': 'consistent', 'yPos': -200.0, 'corrAns': 'h', 'stimFile': 'bigSsmallH.png', 'location': 'down_left'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="practiceTrials"/>\u000a    <Routine name="instrMain"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="trialTypes.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="4" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{'xPos': 200.0, 'congruence': 'conflicting', 'yPos': 200.0, 'corrAns': 'h', 'stimFile': 'bigHsmallH.png', 'location': 'up_right'}, {'xPos': 200.0, 'congruence': 'consistent', 'yPos': 200.0, 'corrAns': 's', 'stimFile': 'bigHsmallS.png', 'location': 'up_right'}, {'xPos': 200.0, 'congruence': 'conflicting', 'yPos': 200.0, 'corrAns': 's', 'stimFile': 'bigSsmallS.png', 'location': 'up_right'}, {'xPos': 200.0, 'congruence': 'consistent', 'yPos': 200.0, 'corrAns': 'h', 'stimFile': 'bigSsmallH.png', 'location': 'up_right'}, {'xPos': -200.0, 'congruence': 'conflicting', 'yPos': 200.0, 'corrAns': 'h', 'stimFile': 'bigHsmallH.png', 'location': 'up_left'}, {'xPos': -200.0, 'congruence': 'consistent', 'yPos': 200.0, 'corrAns': 's', 'stimFile': 'bigHsmallS.png', 'location': 'up_left'}, {'xPos': -200.0, 'congruence': 'conflicting', 'yPos': 200.0, 'corrAns': 's', 'stimFile': 'bigSsmallS.png', 'location': 'up_left'}, {'xPos': -200.0, 'congruence': 'consistent', 'yPos': 200.0, 'corrAns': 'h', 'stimFile': 'bigSsmallH.png', 'location': 'up_left'}, {'xPos': 200.0, 'congruence': 'conflicting', 'yPos': -200.0, 'corrAns': 'h', 'stimFile': 'bigHsmallH.png', 'location': 'down_right'}, {'xPos': 200.0, 'congruence': 'consistent', 'yPos': -200.0, 'corrAns': 's', 'stimFile': 'bigHsmallS.png', 'location': 'down_right'}, {'xPos': 200.0, 'congruence': 'conflicting', 'yPos': -200.0, 'corrAns': 's', 'stimFile': 'bigSsmallS.png', 'location': 'down_right'}, {'xPos': 200.0, 'congruence': 'consistent', 'yPos': -200.0, 'corrAns': 'h', 'stimFile': 'bigSsmallH.png', 'location': 'down_right'}, {'xPos': -200.0, 'congruence': 'conflicting', 'yPos': -200.0, 'corrAns': 'h', 'stimFile': 'bigHsmallH.png', 'location': 'down_left'}, {'xPos': -200.0, 'congruence': 'consistent', 'yPos': -200.0, 'corrAns': 's', 'stimFile': 'bigHsmallS.png', 'location': 'down_left'}, {'xPos': -200.0, 'congruence': 'conflicting', 'yPos': -200.0, 'corrAns': 's', 'stimFile': 'bigSsmallS.png', 'location': 'down_left'}, {'xPos': -200.0, 'congruence': 'consistent', 'yPos': -200.0, 'corrAns': 'h', 'stimFile': 'bigSsmallH.png', 'location': 'down_left'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <LoopTerminator name="trials"/>\u000a    <Routine name="thanks"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p41
sS'thisTrial'
p42
g1
(cpsychopy.data
TrialType
p43
c__builtin__
dict
p44
(dp45
VxPos
p46
I-200
sVcorrAns
p47
Vg
sVlocation
p48
Vdown_left
p49
sVShape
p50
VSquare
p51
sVnumVertices
p52
I4
sVyPos
p53
I-200
stRp54
sS'_exp'
p55
I209408976
sg11
S'practiceTrials'
p56
sg6
g7
sS'thisRepN'
p57
I0
sg19
I01
sg20
g21
sS'data'
p58
g1
(cpsychopy.data
DataHandler
p59
g44
(dp60
S'ran'
p61
cnumpy.ma.core
_mareconstruct
p62
(cnumpy.ma.core
MaskedArray
p63
cnumpy
ndarray
p64
(I0
tp65
S'b'
tRp66
(I1
(I16
I1
tg28
(S'f4'
I0
I1
tRp67
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg17
cnumpy.core.multiarray
_reconstruct
p68
(g64
(I0
tS'b'
tRp69
(I1
(I16
I1
tg28
(S'O4'
I0
I1
tRp70
(I3
S'|'
NNNI-1
I-1
I63
tbI00
(lp71
S'--'
p72
aS'--'
p73
aS'--'
p74
aS'--'
p75
aS'--'
p76
aS'--'
p77
aS'--'
p78
aS'--'
p79
aS'--'
p80
aS'--'
p81
aS'--'
p82
aNaS'--'
p83
aNaNaS'--'
p84
atbsS'order'
p85
g62
(g63
g64
g65
S'b'
tRp86
(I1
(I16
I1
tg67
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00@\x00\x00\x00\x00'
S'\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x00\x00\x01'
Ntbsg18
g62
(g63
g64
g65
S'b'
tRp87
(I1
(I16
I1
tg67
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x00\x00\x01'
NtbstRp88
(dp89
S'isNumeric'
p90
(dp91
g61
I01
sg17
I00
sg85
I01
sg18
I01
ssS'trials'
p92
g38
sS'dataTypes'
p93
(lp94
g61
ag85
ag17
ag18
asS'dataShape'
p95
(lp96
I16
aI1
asbsS'method'
p97
S'random'
p98
sS'sequenceIndices'
p99
g68
(g64
(I0
tS'b'
tRp100
(I1
(I16
I1
tg28
(S'i4'
I0
I1
tRp101
(I3
S'<'
NNNI-1
I-1
I0
tbI01
S'\x0b\x00\x00\x00\r\x00\x00\x00\x0e\x00\x00\x00\x03\x00\x00\x00\n\x00\x00\x00\x01\x00\x00\x00\x06\x00\x00\x00\x02\x00\x00\x00\x08\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\t\x00\x00\x00\x0f\x00\x00\x00\x0c\x00\x00\x00\x07\x00\x00\x00'
tbsS'finished'
p102
I00
sS'nReps'
p103
I1
sS'nRemaining'
p104
I13
sS'trialList'
p105
(lp106
g1
(g43
g44
(dp107
g46
I200
sg47
Vy
sg48
Vup_right
p108
sg50
VLine
p109
sg52
I2
sg53
I200
stRp110
ag1
(g43
g44
(dp111
g46
I200
sg47
Vy
sg48
g108
sg50
VTriangle
p112
sg52
I3
sg53
I200
stRp113
ag1
(g43
g44
(dp114
g46
I200
sg47
Vy
sg48
g108
sg50
g51
sg52
I4
sg53
I200
stRp115
ag1
(g43
g44
(dp116
g46
I200
sg47
Vy
sg48
g108
sg50
VCircle
p117
sg52
I90
sg53
I200
stRp118
ag1
(g43
g44
(dp119
g46
I-200
sg47
Vt
sg48
Vup_left
p120
sg50
g109
sg52
I2
sg53
I200
stRp121
ag1
(g43
g44
(dp122
g46
I-200
sg47
Vt
sg48
g120
sg50
g112
sg52
I3
sg53
I200
stRp123
ag1
(g43
g44
(dp124
g46
I-200
sg47
Vt
sg48
g120
sg50
g51
sg52
I4
sg53
I200
stRp125
ag1
(g43
g44
(dp126
g46
I-200
sg47
Vt
sg48
g120
sg50
g117
sg52
I90
sg53
I200
stRp127
ag1
(g43
g44
(dp128
g46
I200
sg47
Vh
sg48
Vdown_right
p129
sg50
g109
sg52
I2
sg53
I-200
stRp130
ag1
(g43
g44
(dp131
g46
I200
sg47
Vh
sg48
g129
sg50
g112
sg52
I3
sg53
I-200
stRp132
ag1
(g43
g44
(dp133
g46
I200
sg47
Vh
sg48
g129
sg50
g51
sg52
I4
sg53
I-200
stRp134
ag1
(g43
g44
(dp135
g46
I200
sg47
Vh
sg48
g129
sg50
g117
sg52
I90
sg53
I-200
stRp136
ag1
(g43
g44
(dp137
g46
I-200
sg47
Vg
sg48
g49
sg50
g109
sg52
I2
sg53
I-200
stRp138
ag1
(g43
g44
(dp139
g46
I-200
sg47
Vg
sg48
g49
sg50
g112
sg52
I3
sg53
I-200
stRp140
ag54
ag1
(g43
g44
(dp141
g46
I-200
sg47
Vg
sg48
g49
sg50
g117
sg52
I90
sg53
I-200
stRp142
asS'seed'
p143
NsS'thisIndex'
p144
g27
(g101
S'\x0e\x00\x00\x00'
tRp145
sS'thisN'
p146
I2
sS'thisTrialN'
p147
I2
sS'nTotal'
p148
I16
sS'_warnUseOfNext'
p149
I01
sbasS'saveWideText'
p150
I01
sS'thisEntry'
p151
(dp152
g17
Nsg18
I0
ssS'version'
p153
S''
sS'_paramNamesSoFar'
p154
(lp155
g46
ag48
ag50
ag53
ag52
ag47
asS'entries'
p156
(lp157
(dp158
g31
I3
sg23
V
sg16
F2.0517408847808838
sg24
g25
sg26
g30
sg22
g12
sg15
S'n'
sg32
g33
sg34
V
sa(dp159
g31
I3
sg17
Nsg46
I200
sg47
Vh
sg18
I0
sg26
g30
sg24
g25
sg34
V
sS'practiceTrials.thisN'
p160
I0
sg53
I-200
sg32
g33
sg50
g117
sg22
g12
sS'practiceTrials.thisTrialN'
p161
I0
sS'practiceTrials.thisIndex'
p162
g27
(g101
S'\x0b\x00\x00\x00'
tRp163
sS'practiceTrials.thisRepN'
p164
I0
sg23
V
sg52
I90
sg48
g129
sa(dp165
g31
I3
sg17
Nsg46
I-200
sg47
Vg
sg18
I0
sg26
g30
sg24
g25
sg34
V
sS'practiceTrials.thisN'
p166
I1
sg53
I-200
sg32
g33
sg50
g112
sg22
g12
sS'practiceTrials.thisTrialN'
p167
I1
sS'practiceTrials.thisIndex'
p168
g27
(g101
S'\r\x00\x00\x00'
tRp169
sS'practiceTrials.thisRepN'
p170
I0
sg23
V
sg52
I3
sg48
g49
sasS'loops'
p171
(lp172
g38
asS'savePickle'
p173
I01
sb.