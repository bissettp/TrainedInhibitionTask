ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
V/Users/patrickbissett/OneDrive/Poldrack/TrainedInhibition/PsychoPy/ShapeLearningTaskCounterbalanceRemovePrac11.psyexp
p7
sS'dataFileName'
p8
V/Users/patrickbissett/OneDrive/Poldrack/TrainedInhibition/PsychoPy/data/3070_2015_Mar_31_1350
p9
sS'runtimeInfo'
p10
NsS'name'
p11
S'LearningTask'
p12
sS'dataNames'
p13
(lp14
S'ok1.keys'
p15
aS'ok1.rt'
p16
aS'beginningSSD'
p17
aS'trialType'
p18
aS'goStim'
p19
aS'goResp.keys'
p20
aS'goResp.corr'
p21
aS'goResp.rt'
p22
aS'EndingSSD'
p23
asS'autoLog'
p24
I01
sS'extraInfo'
p25
(dp26
S'expName'
p27
g12
sS'gender (m/f)'
p28
V
sS'age'
p29
V
sS'frameRate'
p30
cnumpy.core.multiarray
scalar
p31
(cnumpy
dtype
p32
(S'f8'
I0
I1
tRp33
(I3
S'<'
NNNI-1
I-1
I0
tbS'\xeaz:y\xc0\xf4M@'
tRp34
sS'session'
p35
I3
sS'date'
p36
V2015_Mar_31_1350
p37
sS'participant'
p38
V3070
p39
ssS'loopsUnfinished'
p40
(lp41
g1
(cpsychopy.data
TrialHandler
p42
g3
NtRp43
(dp44
S'origin'
p45
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="stopBlockSetup">\u000a      <CodeComponent name="code_9">\u000a        <Param name="Begin Experiment" val="goCumRT = 0&#10;goRTCount = 0&#10;omissionCount = 0&#10;commissionCount = 0&#10;stopTrialCount = 0&#10;stopSuccessCount = 0&#10;goTrialCount = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_9" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="blankStop">\u000a      <TextComponent name="text_4">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_4" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="End">\u000a      <TextComponent name="text_6">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_6" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="This is the end, beautiful friend" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instrStopPrac">\u000a      <TextComponent name="instrStopText">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instrStopText" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on the left or right side of the screen&#10;&#10;If it appears on the left, press Z&#10;&#10;If it appears on the right, press M&#10;&#10;If you hear a tone, do not press anything on that trial" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="code_8">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_8" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="InitSSD = .25&#10;SSDLeft = InitSSD&#10;SSDRight = InitSSD" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="ExitMain">\u000a      <CodeComponent name="code_6">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_6" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="if resp.corr:&#10;    ReDoLoopMain.finished = True" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="ResetAtBlock">\u000a      <CodeComponent name="code_3">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_3" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="Redo = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS I&#10;&#10;If it appears in the lower right quadrant, PRESS K&#10;&#10;If it appears in the lower left quadrant, PRESS J&#10;&#10;If it appears in the upper left quadrant, PRESS U&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.07" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="NewStim">\u000a      <CodeComponent name="code_4">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_4" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="currentLearningTrial = learningTrialList.pop(0)&#10;currentStimulus = currentLearningTrial['fileName']&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="SSDChange">\u000a      <CodeComponent name="code_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="if goResp.keys is None:&#10;    if xPosGoStim == -200:&#10;        SSDLeft = SSDLeft  + .05&#10;    if xPosGoStim == 200:&#10;        SSDRight = SSDRight + .05&#10;else:&#10;    if xPosGoStim == -200:&#10;        SSDLeft = SSDLeft - .05&#10;    if xPosGoStim == 200:&#10;        SSDRight = SSDRight - .05&#10;&#10;if currentStopTrial['stopOrGo'] == 'go':&#10;    goTrialCount = goTrialCount + 1&#10;&#10;if goResp.corr and currentStopTrial['stopOrGo'] == 'go':&#10;    goCumRT = goCumRT + goResp.rt&#10;    goRTCount = goRTCount + 1&#10;&#10;if currentStopTrial['stopOrGo'] == 'stop':&#10;    stopTrialCount = stopTrialCount + 1&#10;&#10;if currentStopTrial['stopOrGo'] == 'stop' and goResp.keys is None:&#10;    stopSuccessCount = stopSuccessCount + 1&#10;&#10;if goResp.keys is None and currentStopTrial['stopOrGo'] == 'go':&#10;    omissionCount = omissionCount + 1&#10;&#10;if goResp != corrGoResp:&#10;    commissionCount = commissionCount + 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="endOfStopBlockFeedback">\u000a      <CodeComponent name="code_10">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_10" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="&#10;if goRTCount &gt; 0:&#10;    goRTFeedback = str(goCumRT/goRTCount)&#10;else:&#10;    goRTFeedback = 'Null'&#10;&#10;if goTrialCount &gt; 0:&#10;    commissionRate = str(commissionCount/goTrialCount)&#10;    omissionRate = str(omissionCount/goTrialCount)&#10;else: &#10;    commissionRate = 'Null'&#10;    omissionRate = 'Null'&#10;&#10;if stopTrialCount &gt; 0: &#10;    probabilityOfStop = str(stopSuccessCount/stopTrialCount)&#10;else:&#10;    probabilityOfStop = 'Null'&#10;&#10;SSDFeedback = str((SSDLeft+SSDRight)/2)&#10;&#10;stopMessage = &quot;RT = &quot; + str(goRTFeedback) + &quot;Omission % = &quot; + str(omissionRate) + &quot;Commission % = &quot; + str(commissionRate) + &quot;    &quot; + str(probabilityOfStop) + &quot;    &quot; + str(SSDFeedback)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="text_5">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_5" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stopMessage&#10;" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_3">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_3" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'y','n','left','right','space'" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="ExitPrac">\u000a      <CodeComponent name="code_5">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_5" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="if resp.corr:&#10;    ReDoLoop.finished = True " valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="trial">\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'u', 'i', 'j', 'k'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$currentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[151, 151]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="newStopStim">\u000a      <CodeComponent name="code_7">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_7" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="currentStopTrial = stopTrialList.pop(0)&#10;currentGoStim = currentStopTrial['fileName']&#10;currentStopOrGo = currentStopTrial['stopOrGo']&#10;&#10;&#10;&#10;#if xPosGoStim == -200:&#10;#    SSD = SSDLeft + 500&#10;#else:&#10;#    SSD = SSDRight + 500&#10;&#10;if currentStopOrGo == 'stop':&#10;    if xPosGoStim == -200:&#10;        SSD = SSDLeft + .5&#10;    else:&#10;        SSD = SSDRight + .5&#10;else:&#10;    SSD = -1" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="Blank">\u000a      <TextComponent name="text_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val=".5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="StimSetup">\u000a      <CodeComponent name="code">\u000a        <Param name="Begin Experiment" val="from copy import deepcopy&#10;colors = ['yellow', 'white', 'orange', 'magenta', 'green', 'gray', 'cyan', 'blue']&#10;shapes = ['triangle', 'square', 'line', 'invertedtriangle', 'hexagon', 'diamond', 'cross', 'circle']&#10;rewards = [0.50, 1.00, 2.00, 4.00] * 2&#10;conditions = ['go', 'go', 'go', 'go', 'stop', 'stop', 'stop', 'stop']&#10;trialDetailsList = []&#10;learningTrialList = []&#10;&#10;shuffle(colors)&#10;shuffle(shapes)&#10;&#10;for i, color in enumerate(colors): # cycle through each color and keep track of an index number&#10;    trialDetails = {} # a dictionary of key-value pairs&#10;    trialDetails['fileName'] = shapes[i] + color + '.gif'&#10;    trialDetails['reward'] = rewards[i]&#10;    trialDetails['condition'] = conditions[i]&#10;    trialDetailsList.append(trialDetails)&#10;&#10;shuffle(trialDetailsList) # do this now to ensure that order of presentation of rewards and conditions is also shuffled&#10;&#10;conditionOne = trialDetailsList[0]&#10;conditionTwo = trialDetailsList[1]&#10;conditionThree = trialDetailsList[2]&#10;conditionFour = trialDetailsList[3]&#10;conditionFive = trialDetailsList[4]&#10;conditionSix = trialDetailsList[5]&#10;conditionSeven = trialDetailsList[6]&#10;conditionEight = trialDetailsList[7]&#10;&#10;numLearningTrials = 400&#10;numLearningRepetitions = 50&#10;for k in range(1, numLearningRepetitions + 1):&#10;    learningTrialList.append(conditionOne)&#10;    learningTrialList.append(conditionTwo)&#10;    learningTrialList.append(conditionThree)&#10;    learningTrialList.append(conditionFour)&#10;    learningTrialList.append(conditionFive)&#10;    learningTrialList.append(conditionSix)&#10;    learningTrialList.append(conditionSeven)&#10;    learningTrialList.append(conditionEight)&#10;&#10;shuffle(learningTrialList)&#10;&#10;stopTaskTrials = 272&#10;stopTrialsPerStopStim = 26&#10;goTrialsPerStopStim = 8&#10;goTrialsPerGoStim = 34&#10;numStim = 8&#10;stopTrialList = []&#10;&#10;if conditionOne['condition'] == 'go':&#10;    conditionOne['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionOne)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionOne['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionOne))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionOne['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionOne))&#10;if conditionTwo['condition'] == 'go':&#10;    conditionTwo['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionTwo)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionTwo['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionTwo))&#10;    for i in range(1,  stopTrialsPerStopStim + 1):&#10;        conditionTwo['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionTwo))&#10;if conditionThree['condition'] == 'go':&#10;    conditionThree['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionThree)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionThree['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionThree))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionThree['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionThree))&#10;if conditionFour['condition'] == 'go':&#10;    conditionFour['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionFour)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionFour['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionFour))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionFour['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionFour))&#10;if conditionFive['condition'] == 'go':&#10;    conditionFive['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionFive)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionFive['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionFive))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionFive['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionFive))&#10;if conditionSix['condition'] == 'go':&#10;    conditionSix['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionSix)&#10;else:&#10;    for j in range(1, stopTrialsPerStopStim + 1):&#10;        conditionSix['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionSix))&#10;    for i in range(1, goTrialsPerStopStim + 1):&#10;        conditionSix['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionSix))&#10;if conditionSeven['condition'] == 'go':&#10;    conditionSeven['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionSeven)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionSeven['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionSeven))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionSeven['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionSeven))&#10;if conditionEight['condition'] == 'go':&#10;    conditionEight['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionEight)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionEight['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionEight))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionEight['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionEight))&#10;&#10;shuffle(stopTrialList)" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#message variable just needs some value at start&#10;message=0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="import random&#10;&#10;displayReward = random.randrange(1, 6)&#10;&#10;if resp.corr:#stored on last run routine&#10;    if displayReward == 1:&#10;            message = &quot;You won $&quot; + str(0);&#10;    else: &#10;            currentReward = currentLearningTrial['reward']&#10;            message = &quot;You won $&quot; + str(currentReward + (random.randrange(-25, 26)*.01))&#10;elif resp.keys is None: #or len(key_resp.keys)&lt;1:&#10;#elif resp.rt == 0:&#10;    message =&quot;Too Slow&quot;&#10;else:&#10;  message=&quot;Wrong&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val=".2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$currentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[151, 151]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="Bank"/>\u000a    <Routine name="StopTrial">\u000a      <SoundComponent name="sound_1">\u000a        <Param name="sound" val="900" valType="str" updates="constant"/>\u000a        <Param name="volume" val=".2" valType="code" updates="constant"/>\u000a        <Param name="name" val="sound_1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val=".2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startEstim" val=".75" valType="code" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$SSD" valType="code" updates="None"/>\u000a      </SoundComponent>\u000a      <TextComponent name="text_3">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_3" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="|" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="4" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_3">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_3" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPosGoStim, yPosGoStim]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$currentGoStim" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[151, 151]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <KeyboardComponent name="goResp">\u000a        <Param name="correctAns" val="$corrGoResp" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="goResp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'z','m'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="StimSetup"/>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="0" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="ResetAtBlock"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="TrialtypesLearning.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="25" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'h', u'yPos': 200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'n', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'b', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="NewStim"/>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoopMain">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoopMain" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="999" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <Routine name="Blank"/>\u000a    <Routine name="ExitMain"/>\u000a    <LoopTerminator name="ReDoLoopMain"/>\u000a    <LoopTerminator name="trials"/>\u000a    <LoopTerminator name="Blocks"/>\u000a    <Routine name="instrStopPrac"/>\u000a    <LoopInitiator loopType="TrialHandler" name="StopBlocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="StopBlocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="4" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="stopBlockSetup"/>\u000a    <LoopInitiator loopType="TrialHandler" name="StopTrials">\u000a      <Param name="conditionsFile" val="trialtypeStop.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="StopTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="17" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'corrGoResp': u'z', u'yPosGoStim': 0, u'xPosGoStim': -200}, {u'corrGoResp': u'm', u'yPosGoStim': 0, u'xPosGoStim': 200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="newStopStim"/>\u000a    <Routine name="StopTrial"/>\u000a    <Routine name="blankStop"/>\u000a    <Routine name="SSDChange"/>\u000a    <LoopTerminator name="StopTrials"/>\u000a    <Routine name="endOfStopBlockFeedback"/>\u000a    <LoopTerminator name="StopBlocks"/>\u000a    <Routine name="End"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p46
sS'thisTrial'
p47
NsS'_exp'
p48
I244785872
sg11
S'StopBlocks'
p49
sg6
g7
sS'thisRepN'
p50
I0
sg24
I01
sg25
g26
sS'data'
p51
g1
(cpsychopy.data
DataHandler
p52
c__builtin__
dict
p53
(dp54
S'ran'
p55
cnumpy.ma.core
_mareconstruct
p56
(cnumpy.ma.core
MaskedArray
p57
cnumpy
ndarray
p58
(I0
tp59
S'b'
tRp60
(I1
(I1
I4
tg32
(S'f4'
I0
I1
tRp61
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00'
NtbsS'order'
p62
g56
(g57
g58
g59
S'b'
tRp63
(I1
(I1
I4
tg61
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x01\x01\x01'
NtbstRp64
(dp65
S'isNumeric'
p66
(dp67
g55
I01
sg62
I01
ssS'trials'
p68
g43
sS'dataTypes'
p69
(lp70
g55
ag62
asS'dataShape'
p71
(lp72
I1
aI4
asbsS'method'
p73
S'sequential'
p74
sS'sequenceIndices'
p75
cnumpy.core.multiarray
_reconstruct
p76
(g58
(I0
tS'b'
tRp77
(I1
(I1
I4
tg32
(S'i4'
I0
I1
tRp78
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
tbsS'finished'
p79
I00
sS'nReps'
p80
I4
sS'nRemaining'
p81
I3
sS'trialList'
p82
(lp83
NasS'seed'
p84
NsS'thisIndex'
p85
g31
(g78
S'\x00\x00\x00\x00'
tRp86
sS'thisN'
p87
I0
sS'thisTrialN'
p88
I0
sS'nTotal'
p89
I4
sS'_warnUseOfNext'
p90
I01
sbasS'saveWideText'
p91
I01
sS'thisEntry'
p92
(dp93
sS'version'
p94
S''
sS'_paramNamesSoFar'
p95
(lp96
VcorrGoResp
p97
aVyPosGoStim
p98
aVxPosGoStim
p99
asS'entries'
p100
(lp101
(dp102
g35
I3
sg28
V
sg16
F0.46879696846008301
sg29
V
sg30
g34
sg27
g12
sg15
S'space'
p103
sg36
g37
sg38
g39
sa(dp104
g21
I1
sS'StopBlocks.thisIndex'
p105
g86
sg22
F0.36741399765014648
sg30
g34
sg23
F0.20000000000000001
sg17
F0.25
sS'StopTrials.thisRepN'
p106
I0
sg36
g37
sS'StopBlocks.thisTrialN'
p107
I0
sg18
S'stop'
p108
sg97
Vm
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p109
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p110
I0
sg20
S'm'
sg29
V
sg19
S'triangleyellow.gif'
p111
sS'StopTrials.thisIndex'
p112
I1
sS'StopBlocks.thisRepN'
p113
I0
sg27
g12
sS'StopBlocks.thisN'
p114
I0
sS'StopTrials.thisN'
p115
I0
sg99
I200
sa(dp116
g21
I1
sS'StopBlocks.thisIndex'
p117
g86
sg22
F0.28410577774047852
sg30
g34
sg23
I-1
sg17
I-1
sS'StopTrials.thisRepN'
p118
I0
sg36
g37
sS'StopBlocks.thisTrialN'
p119
I0
sg18
S'go'
p120
sg97
Vz
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p121
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p122
I1
sg20
S'z'
sg29
V
sg19
S'invertedtrianglegray.gif'
p123
sS'StopTrials.thisIndex'
p124
I0
sS'StopBlocks.thisRepN'
p125
I0
sg27
g12
sS'StopBlocks.thisN'
p126
I0
sS'StopTrials.thisN'
p127
I1
sg99
I-200
sa(dp128
g21
I1
sS'StopBlocks.thisIndex'
p129
g86
sg22
F0.31753706932067871
sg30
g34
sg23
I-1
sg17
I-1
sS'StopTrials.thisRepN'
p130
I1
sg36
g37
sS'StopBlocks.thisTrialN'
p131
I0
sg18
g120
sg97
Vz
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p132
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p133
I0
sg20
S'z'
sg29
V
sg19
S'hexagonmagenta.gif'
p134
sS'StopTrials.thisIndex'
p135
I0
sS'StopBlocks.thisRepN'
p136
I0
sg27
g12
sS'StopBlocks.thisN'
p137
I0
sS'StopTrials.thisN'
p138
I2
sg99
I-200
sa(dp139
g21
I1
sS'StopBlocks.thisIndex'
p140
g86
sg22
F0.28395414352416992
sg30
g34
sg23
F0.15000000000000002
sg17
F0.20000000000000001
sS'StopTrials.thisRepN'
p141
I1
sg36
g37
sS'StopBlocks.thisTrialN'
p142
I0
sg18
g108
sg97
Vm
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p143
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p144
I1
sg20
S'm'
sg29
V
sg19
S'squarecyan.gif'
p145
sS'StopTrials.thisIndex'
p146
I1
sS'StopBlocks.thisRepN'
p147
I0
sg27
g12
sS'StopBlocks.thisN'
p148
I0
sS'StopTrials.thisN'
p149
I3
sg99
I200
sa(dp150
g21
I1
sS'StopBlocks.thisIndex'
p151
g86
sg22
F0.31740379333496094
sg30
g34
sg23
I-1
sg17
I-1
sS'StopTrials.thisRepN'
p152
I2
sg36
g37
sS'StopBlocks.thisTrialN'
p153
I0
sg18
g120
sg97
Vm
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p154
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p155
I0
sg20
S'm'
sg29
V
sg19
g134
sS'StopTrials.thisIndex'
p156
I1
sS'StopBlocks.thisRepN'
p157
I0
sg27
g12
sS'StopBlocks.thisN'
p158
I0
sS'StopTrials.thisN'
p159
I4
sg99
I200
sa(dp160
g21
I1
sS'StopBlocks.thisIndex'
p161
g86
sg22
F0.30073094367980957
sg30
g34
sg23
I-1
sg17
I-1
sS'StopTrials.thisRepN'
p162
I2
sg36
g37
sS'StopBlocks.thisTrialN'
p163
I0
sg18
g120
sg97
Vz
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p164
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p165
I1
sg20
S'z'
sg29
V
sg19
g123
sS'StopTrials.thisIndex'
p166
I0
sS'StopBlocks.thisRepN'
p167
I0
sg27
g12
sS'StopBlocks.thisN'
p168
I0
sS'StopTrials.thisN'
p169
I5
sg99
I-200
sa(dp170
g21
I1
sS'StopBlocks.thisIndex'
p171
g86
sg22
F0.31743693351745605
sg30
g34
sg23
F0.10000000000000002
sg17
F0.15000000000000002
sS'StopTrials.thisRepN'
p172
I3
sg36
g37
sS'StopBlocks.thisTrialN'
p173
I0
sg18
g108
sg97
Vm
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p174
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p175
I0
sg20
S'm'
sg29
V
sg19
g145
sS'StopTrials.thisIndex'
p176
I1
sS'StopBlocks.thisRepN'
p177
I0
sg27
g12
sS'StopBlocks.thisN'
p178
I0
sS'StopTrials.thisN'
p179
I6
sg99
I200
sa(dp180
g21
I1
sS'StopBlocks.thisIndex'
p181
g86
sg22
F0.33406305313110352
sg30
g34
sg23
I-1
sg17
I-1
sS'StopTrials.thisRepN'
p182
I3
sg36
g37
sS'StopBlocks.thisTrialN'
p183
I0
sg18
g120
sg97
Vm
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p184
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p185
I1
sg20
S'm'
sg29
V
sg19
S'diamondwhite.gif'
p186
sS'StopTrials.thisIndex'
p187
I1
sS'StopBlocks.thisRepN'
p188
I0
sg27
g12
sS'StopBlocks.thisN'
p189
I0
sS'StopTrials.thisN'
p190
I7
sg99
I200
sa(dp191
g21
I1
sS'StopBlocks.thisIndex'
p192
g86
sg22
F0.35067415237426758
sg30
g34
sg23
I-1
sg17
I-1
sS'StopTrials.thisRepN'
p193
I4
sg36
g37
sS'StopBlocks.thisTrialN'
p194
I0
sg18
g120
sg97
Vz
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p195
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p196
I0
sg20
S'z'
sg29
V
sg19
g134
sS'StopTrials.thisIndex'
p197
I0
sS'StopBlocks.thisRepN'
p198
I0
sg27
g12
sS'StopBlocks.thisN'
p199
I0
sS'StopTrials.thisN'
p200
I8
sg99
I-200
sa(dp201
g21
I1
sS'StopBlocks.thisIndex'
p202
g86
sg22
F0.35069704055786133
sg30
g34
sg23
I-1
sg17
I-1
sS'StopTrials.thisRepN'
p203
I4
sg36
g37
sS'StopBlocks.thisTrialN'
p204
I0
sg18
g120
sg97
Vm
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p205
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p206
I1
sg20
S'm'
sg29
V
sg19
g123
sS'StopTrials.thisIndex'
p207
I1
sS'StopBlocks.thisRepN'
p208
I0
sg27
g12
sS'StopBlocks.thisN'
p209
I0
sS'StopTrials.thisN'
p210
I9
sg99
I200
sa(dp211
g21
I1
sS'StopBlocks.thisIndex'
p212
g86
sg22
F0.33430600166320801
sg30
g34
sg23
I-1
sg17
I-1
sS'StopTrials.thisRepN'
p213
I5
sg36
g37
sS'StopBlocks.thisTrialN'
p214
I0
sg18
g120
sg97
Vz
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p215
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p216
I0
sg20
S'z'
sg29
V
sg19
g134
sS'StopTrials.thisIndex'
p217
I0
sS'StopBlocks.thisRepN'
p218
I0
sg27
g12
sS'StopBlocks.thisN'
p219
I0
sS'StopTrials.thisN'
p220
I10
sg99
I-200
sa(dp221
g21
I1
sS'StopBlocks.thisIndex'
p222
g86
sg22
F0.36766886711120605
sg30
g34
sg23
I-1
sg17
I-1
sS'StopTrials.thisRepN'
p223
I5
sg36
g37
sS'StopBlocks.thisTrialN'
p224
I0
sg18
g120
sg97
Vz
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p225
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p226
I1
sg20
S'z'
sg29
V
sg19
S'crossblue.gif'
p227
sS'StopTrials.thisIndex'
p228
I0
sS'StopBlocks.thisRepN'
p229
I0
sg27
g12
sS'StopBlocks.thisN'
p230
I0
sS'StopTrials.thisN'
p231
I11
sg99
I-200
sa(dp232
g21
I1
sS'StopBlocks.thisIndex'
p233
g86
sg22
F0.38388490676879883
sg30
g34
sg23
F0.20000000000000001
sg17
F0.25
sS'StopTrials.thisRepN'
p234
I6
sg36
g37
sS'StopBlocks.thisTrialN'
p235
I0
sg18
g108
sg97
Vz
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p236
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p237
I0
sg20
S'z'
sg29
V
sg19
g145
sS'StopTrials.thisIndex'
p238
I0
sS'StopBlocks.thisRepN'
p239
I0
sg27
g12
sS'StopBlocks.thisN'
p240
I0
sS'StopTrials.thisN'
p241
I12
sg99
I-200
sa(dp242
g21
I0
sS'StopBlocks.thisIndex'
p243
g86
sg30
g34
sg23
F0.15000000000000002
sg17
F0.10000000000000002
sS'StopTrials.thisRepN'
p244
I6
sg36
g37
sS'StopBlocks.thisTrialN'
p245
I0
sg18
g108
sg97
Vm
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p246
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p247
I1
sg20
Nsg29
V
sg19
g145
sS'StopTrials.thisIndex'
p248
I1
sS'StopBlocks.thisRepN'
p249
I0
sg27
g12
sS'StopBlocks.thisN'
p250
I0
sS'StopTrials.thisN'
p251
I13
sg99
I200
sa(dp252
g21
I0
sS'StopBlocks.thisIndex'
p253
g86
sg30
g34
sg23
F0.25
sg17
F0.20000000000000001
sS'StopTrials.thisRepN'
p254
I7
sg36
g37
sS'StopBlocks.thisTrialN'
p255
I0
sg18
g108
sg97
Vz
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p256
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p257
I0
sg20
Nsg29
V
sg19
g145
sS'StopTrials.thisIndex'
p258
I0
sS'StopBlocks.thisRepN'
p259
I0
sg27
g12
sS'StopBlocks.thisN'
p260
I0
sS'StopTrials.thisN'
p261
I14
sg99
I-200
sa(dp262
g21
I0
sS'StopBlocks.thisIndex'
p263
g86
sg30
g34
sg23
F0.20000000000000001
sg17
F0.15000000000000002
sS'StopTrials.thisRepN'
p264
I7
sg36
g37
sS'StopBlocks.thisTrialN'
p265
I0
sg18
g108
sg97
Vm
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p266
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p267
I1
sg20
Nsg29
V
sg19
S'circleorange.gif'
p268
sS'StopTrials.thisIndex'
p269
I1
sS'StopBlocks.thisRepN'
p270
I0
sg27
g12
sS'StopBlocks.thisN'
p271
I0
sS'StopTrials.thisN'
p272
I15
sg99
I200
sa(dp273
g21
I0
sS'StopBlocks.thisIndex'
p274
g86
sg30
g34
sg23
F0.25
sg17
F0.20000000000000001
sS'StopTrials.thisRepN'
p275
I8
sg36
g37
sS'StopBlocks.thisTrialN'
p276
I0
sg18
g108
sg97
Vm
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p277
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p278
I0
sg20
Nsg29
V
sg19
g268
sS'StopTrials.thisIndex'
p279
I1
sS'StopBlocks.thisRepN'
p280
I0
sg27
g12
sS'StopBlocks.thisN'
p281
I0
sS'StopTrials.thisN'
p282
I16
sg99
I200
sa(dp283
g21
I0
sS'StopBlocks.thisIndex'
p284
g86
sg30
g34
sg23
I-1
sg17
I-1
sS'StopTrials.thisRepN'
p285
I8
sg36
g37
sS'StopBlocks.thisTrialN'
p286
I0
sg18
g120
sg97
Vz
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p287
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p288
I1
sg20
Nsg29
V
sg19
S'linegreen.gif'
p289
sS'StopTrials.thisIndex'
p290
I0
sS'StopBlocks.thisRepN'
p291
I0
sg27
g12
sS'StopBlocks.thisN'
p292
I0
sS'StopTrials.thisN'
p293
I17
sg99
I-200
sa(dp294
g21
I0
sS'StopBlocks.thisIndex'
p295
g86
sg30
g34
sg23
I-1
sg17
I-1
sS'StopTrials.thisRepN'
p296
I9
sg36
g37
sS'StopBlocks.thisTrialN'
p297
I0
sg18
g120
sg97
Vz
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p298
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p299
I0
sg20
Nsg29
V
sg19
g289
sS'StopTrials.thisIndex'
p300
I0
sS'StopBlocks.thisRepN'
p301
I0
sg27
g12
sS'StopBlocks.thisN'
p302
I0
sS'StopTrials.thisN'
p303
I18
sg99
I-200
sa(dp304
g21
I0
sS'StopBlocks.thisIndex'
p305
g86
sg30
g34
sg23
F0.29999999999999999
sg17
F0.25
sS'StopTrials.thisRepN'
p306
I9
sg36
g37
sS'StopBlocks.thisTrialN'
p307
I0
sg18
g108
sg97
Vm
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p308
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p309
I1
sg20
Nsg29
V
sg19
g186
sS'StopTrials.thisIndex'
p310
I1
sS'StopBlocks.thisRepN'
p311
I0
sg27
g12
sS'StopBlocks.thisN'
p312
I0
sS'StopTrials.thisN'
p313
I19
sg99
I200
sa(dp314
g21
I0
sS'StopBlocks.thisIndex'
p315
g86
sg30
g34
sg23
F0.29999999999999999
sg17
F0.25
sS'StopTrials.thisRepN'
p316
I10
sg36
g37
sS'StopBlocks.thisTrialN'
p317
I0
sg18
g108
sg97
Vz
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p318
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p319
I0
sg20
Nsg29
V
sg19
g111
sS'StopTrials.thisIndex'
p320
I0
sS'StopBlocks.thisRepN'
p321
I0
sg27
g12
sS'StopBlocks.thisN'
p322
I0
sS'StopTrials.thisN'
p323
I20
sg99
I-200
sa(dp324
g21
I0
sS'StopBlocks.thisIndex'
p325
g86
sg30
g34
sg23
I-1
sg17
I-1
sS'StopTrials.thisRepN'
p326
I10
sg36
g37
sS'StopBlocks.thisTrialN'
p327
I0
sg18
g120
sg97
Vm
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p328
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p329
I1
sg20
Nsg29
V
sg19
g123
sS'StopTrials.thisIndex'
p330
I1
sS'StopBlocks.thisRepN'
p331
I0
sg27
g12
sS'StopBlocks.thisN'
p332
I0
sS'StopTrials.thisN'
p333
I21
sg99
I200
sa(dp334
g21
I0
sS'StopBlocks.thisIndex'
p335
g86
sg30
g34
sg23
I-1
sg17
I-1
sS'StopTrials.thisRepN'
p336
I11
sg36
g37
sS'StopBlocks.thisTrialN'
p337
I0
sg18
g120
sg97
Vz
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p338
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p339
I0
sg20
Nsg29
V
sg19
g227
sS'StopTrials.thisIndex'
p340
I0
sS'StopBlocks.thisRepN'
p341
I0
sg27
g12
sS'StopBlocks.thisN'
p342
I0
sS'StopTrials.thisN'
p343
I22
sg99
I-200
sa(dp344
g21
I0
sS'StopBlocks.thisIndex'
p345
g86
sg30
g34
sg23
F0.34999999999999998
sg17
F0.29999999999999999
sS'StopTrials.thisRepN'
p346
I11
sg36
g37
sS'StopBlocks.thisTrialN'
p347
I0
sg18
g108
sg97
Vz
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p348
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p349
I1
sg20
Nsg29
V
sg19
g268
sS'StopTrials.thisIndex'
p350
I0
sS'StopBlocks.thisRepN'
p351
I0
sg27
g12
sS'StopBlocks.thisN'
p352
I0
sS'StopTrials.thisN'
p353
I23
sg99
I-200
sa(dp354
g21
I0
sS'StopBlocks.thisIndex'
p355
g86
sg30
g34
sg23
F0.39999999999999997
sg17
F0.34999999999999998
sS'StopTrials.thisRepN'
p356
I12
sg36
g37
sS'StopBlocks.thisTrialN'
p357
I0
sg18
g108
sg97
Vz
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p358
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p359
I0
sg20
Nsg29
V
sg19
g111
sS'StopTrials.thisIndex'
p360
I0
sS'StopBlocks.thisRepN'
p361
I0
sg27
g12
sS'StopBlocks.thisN'
p362
I0
sS'StopTrials.thisN'
p363
I24
sg99
I-200
sa(dp364
g21
I0
sS'StopBlocks.thisIndex'
p365
g86
sg30
g34
sg23
F0.34999999999999998
sg17
F0.29999999999999999
sS'StopTrials.thisRepN'
p366
I12
sg36
g37
sS'StopBlocks.thisTrialN'
p367
I0
sg18
g108
sg97
Vm
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p368
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p369
I1
sg20
Nsg29
V
sg19
g268
sS'StopTrials.thisIndex'
p370
I1
sS'StopBlocks.thisRepN'
p371
I0
sg27
g12
sS'StopBlocks.thisN'
p372
I0
sS'StopTrials.thisN'
p373
I25
sg99
I200
sa(dp374
g21
I0
sS'StopBlocks.thisIndex'
p375
g86
sg30
g34
sg23
F0.39999999999999997
sg17
F0.34999999999999998
sS'StopTrials.thisRepN'
p376
I13
sg36
g37
sS'StopBlocks.thisTrialN'
p377
I0
sg18
g108
sg97
Vm
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p378
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p379
I0
sg20
Nsg29
V
sg19
g145
sS'StopTrials.thisIndex'
p380
I1
sS'StopBlocks.thisRepN'
p381
I0
sg27
g12
sS'StopBlocks.thisN'
p382
I0
sS'StopTrials.thisN'
p383
I26
sg99
I200
sa(dp384
g21
I0
sS'StopBlocks.thisIndex'
p385
g86
sg30
g34
sg23
F0.44999999999999996
sg17
F0.39999999999999997
sS'StopTrials.thisRepN'
p386
I13
sg36
g37
sS'StopBlocks.thisTrialN'
p387
I0
sg18
g108
sg97
Vm
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p388
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p389
I1
sg20
Nsg29
V
sg19
g145
sS'StopTrials.thisIndex'
p390
I1
sS'StopBlocks.thisRepN'
p391
I0
sg27
g12
sS'StopBlocks.thisN'
p392
I0
sS'StopTrials.thisN'
p393
I27
sg99
I200
sa(dp394
g21
I0
sS'StopBlocks.thisIndex'
p395
g86
sg30
g34
sg23
I-1
sg17
I-1
sS'StopTrials.thisRepN'
p396
I14
sg36
g37
sS'StopBlocks.thisTrialN'
p397
I0
sg18
g120
sg97
Vm
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p398
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p399
I0
sg20
Nsg29
V
sg19
g134
sS'StopTrials.thisIndex'
p400
I1
sS'StopBlocks.thisRepN'
p401
I0
sg27
g12
sS'StopBlocks.thisN'
p402
I0
sS'StopTrials.thisN'
p403
I28
sg99
I200
sa(dp404
g21
I0
sS'StopBlocks.thisIndex'
p405
g86
sg30
g34
sg23
F0.49999999999999994
sg17
F0.44999999999999996
sS'StopTrials.thisRepN'
p406
I14
sg36
g37
sS'StopBlocks.thisTrialN'
p407
I0
sg18
g108
sg97
Vm
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p408
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p409
I1
sg20
Nsg29
V
sg19
g186
sS'StopTrials.thisIndex'
p410
I1
sS'StopBlocks.thisRepN'
p411
I0
sg27
g12
sS'StopBlocks.thisN'
p412
I0
sS'StopTrials.thisN'
p413
I29
sg99
I200
sa(dp414
g21
I0
sS'StopBlocks.thisIndex'
p415
g86
sg30
g34
sg23
F0.44999999999999996
sg17
F0.39999999999999997
sS'StopTrials.thisRepN'
p416
I15
sg36
g37
sS'StopBlocks.thisTrialN'
p417
I0
sg18
g108
sg97
Vz
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p418
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p419
I0
sg20
Nsg29
V
sg19
g111
sS'StopTrials.thisIndex'
p420
I0
sS'StopBlocks.thisRepN'
p421
I0
sg27
g12
sS'StopBlocks.thisN'
p422
I0
sS'StopTrials.thisN'
p423
I30
sg99
I-200
sa(dp424
g21
I0
sS'StopBlocks.thisIndex'
p425
g86
sg30
g34
sg23
I-1
sg17
I-1
sS'StopTrials.thisRepN'
p426
I15
sg36
g37
sS'StopBlocks.thisTrialN'
p427
I0
sg18
g120
sg97
Vz
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p428
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p429
I1
sg20
Nsg29
V
sg19
g227
sS'StopTrials.thisIndex'
p430
I0
sS'StopBlocks.thisRepN'
p431
I0
sg27
g12
sS'StopBlocks.thisN'
p432
I0
sS'StopTrials.thisN'
p433
I31
sg99
I-200
sa(dp434
g21
I0
sS'StopBlocks.thisIndex'
p435
g86
sg30
g34
sg23
F0.49999999999999994
sg17
F0.44999999999999996
sS'StopTrials.thisRepN'
p436
I16
sg36
g37
sS'StopBlocks.thisTrialN'
p437
I0
sg18
g108
sg97
Vz
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p438
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p439
I0
sg20
Nsg29
V
sg19
g186
sS'StopTrials.thisIndex'
p440
I0
sS'StopBlocks.thisRepN'
p441
I0
sg27
g12
sS'StopBlocks.thisN'
p442
I0
sS'StopTrials.thisN'
p443
I32
sg99
I-200
sa(dp444
g21
I0
sS'StopBlocks.thisIndex'
p445
g86
sg30
g34
sg23
F0.54999999999999993
sg17
F0.49999999999999994
sS'StopTrials.thisRepN'
p446
I16
sg36
g37
sS'StopBlocks.thisTrialN'
p447
I0
sg18
g108
sg97
Vm
sg28
V
sg98
I0
sS'StopBlocks.thisTrial'
p448
Nsg35
I3
sg38
g39
sS'StopTrials.thisTrialN'
p449
I1
sg20
Nsg29
V
sg19
g111
sS'StopTrials.thisIndex'
p450
I1
sS'StopBlocks.thisRepN'
p451
I0
sg27
g12
sS'StopBlocks.thisN'
p452
I0
sS'StopTrials.thisN'
p453
I33
sg99
I200
sasS'loops'
p454
(lp455
g1
(g42
g3
NtRp456
(dp457
g45
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="stopBlockSetup">\u000a      <CodeComponent name="code_9">\u000a        <Param name="Begin Experiment" val="goCumRT = 0&#10;goRTCount = 0&#10;omissionCount = 0&#10;commissionCount = 0&#10;stopTrialCount = 0&#10;stopSuccessCount = 0&#10;goTrialCount = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_9" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="blankStop">\u000a      <TextComponent name="text_4">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_4" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="End">\u000a      <TextComponent name="text_6">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_6" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="This is the end, beautiful friend" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instrStopPrac">\u000a      <TextComponent name="instrStopText">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instrStopText" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on the left or right side of the screen&#10;&#10;If it appears on the left, press Z&#10;&#10;If it appears on the right, press M&#10;&#10;If you hear a tone, do not press anything on that trial" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="code_8">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_8" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="InitSSD = .25&#10;SSDLeft = InitSSD&#10;SSDRight = InitSSD" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="ExitMain">\u000a      <CodeComponent name="code_6">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_6" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="if resp.corr:&#10;    ReDoLoopMain.finished = True" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="ResetAtBlock">\u000a      <CodeComponent name="code_3">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_3" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="Redo = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS I&#10;&#10;If it appears in the lower right quadrant, PRESS K&#10;&#10;If it appears in the lower left quadrant, PRESS J&#10;&#10;If it appears in the upper left quadrant, PRESS U&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.07" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="NewStim">\u000a      <CodeComponent name="code_4">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_4" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="currentLearningTrial = learningTrialList.pop(0)&#10;currentStimulus = currentLearningTrial['fileName']&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="SSDChange">\u000a      <CodeComponent name="code_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="if goResp.keys is None:&#10;    if xPosGoStim == -200:&#10;        SSDLeft = SSDLeft  + .05&#10;    if xPosGoStim == 200:&#10;        SSDRight = SSDRight + .05&#10;else:&#10;    if xPosGoStim == -200:&#10;        SSDLeft = SSDLeft - .05&#10;    if xPosGoStim == 200:&#10;        SSDRight = SSDRight - .05&#10;&#10;if currentStopTrial['stopOrGo'] == 'go':&#10;    goTrialCount = goTrialCount + 1&#10;&#10;if goResp.corr and currentStopTrial['stopOrGo'] == 'go':&#10;    goCumRT = goCumRT + goResp.rt&#10;    goRTCount = goRTCount + 1&#10;&#10;if currentStopTrial['stopOrGo'] == 'stop':&#10;    stopTrialCount = stopTrialCount + 1&#10;&#10;if currentStopTrial['stopOrGo'] == 'stop' and goResp.keys is None:&#10;    stopSuccessCount = stopSuccessCount + 1&#10;&#10;if goResp.keys is None and currentStopTrial['stopOrGo'] == 'go':&#10;    omissionCount = omissionCount + 1&#10;&#10;if goResp != corrGoResp:&#10;    commissionCount = commissionCount + 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="endOfStopBlockFeedback">\u000a      <CodeComponent name="code_10">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_10" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="&#10;if goRTCount &gt; 0:&#10;    goRTFeedback = str(goCumRT/goRTCount)&#10;else:&#10;    goRTFeedback = 'Null'&#10;&#10;if goTrialCount &gt; 0:&#10;    commissionRate = str(commissionCount/goTrialCount)&#10;    omissionRate = str(omissionCount/goTrialCount)&#10;else: &#10;    commissionRate = 'Null'&#10;    omissionRate = 'Null'&#10;&#10;if stopTrialCount &gt; 0: &#10;    probabilityOfStop = str(stopSuccessCount/stopTrialCount)&#10;else:&#10;    probabilityOfStop = 'Null'&#10;&#10;SSDFeedback = str((SSDLeft+SSDRight)/2)&#10;&#10;stopMessage = &quot;RT = &quot; + str(goRTFeedback) + &quot;Omission % = &quot; + str(omissionRate) + &quot;Commission % = &quot; + str(commissionRate) + &quot;    &quot; + str(probabilityOfStop) + &quot;    &quot; + str(SSDFeedback)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="text_5">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_5" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stopMessage&#10;" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_3">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_3" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'y','n','left','right','space'" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="ExitPrac">\u000a      <CodeComponent name="code_5">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_5" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="if resp.corr:&#10;    ReDoLoop.finished = True " valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="trial">\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'u', 'i', 'j', 'k'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$currentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[151, 151]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="newStopStim">\u000a      <CodeComponent name="code_7">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_7" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="currentStopTrial = stopTrialList.pop(0)&#10;currentGoStim = currentStopTrial['fileName']&#10;currentStopOrGo = currentStopTrial['stopOrGo']&#10;&#10;&#10;&#10;#if xPosGoStim == -200:&#10;#    SSD = SSDLeft + 500&#10;#else:&#10;#    SSD = SSDRight + 500&#10;&#10;if currentStopOrGo == 'stop':&#10;    if xPosGoStim == -200:&#10;        SSD = SSDLeft + .5&#10;    else:&#10;        SSD = SSDRight + .5&#10;else:&#10;    SSD = -1" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="Blank">\u000a      <TextComponent name="text_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val=".5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="StimSetup">\u000a      <CodeComponent name="code">\u000a        <Param name="Begin Experiment" val="from copy import deepcopy&#10;colors = ['yellow', 'white', 'orange', 'magenta', 'green', 'gray', 'cyan', 'blue']&#10;shapes = ['triangle', 'square', 'line', 'invertedtriangle', 'hexagon', 'diamond', 'cross', 'circle']&#10;rewards = [0.50, 1.00, 2.00, 4.00] * 2&#10;conditions = ['go', 'go', 'go', 'go', 'stop', 'stop', 'stop', 'stop']&#10;trialDetailsList = []&#10;learningTrialList = []&#10;&#10;shuffle(colors)&#10;shuffle(shapes)&#10;&#10;for i, color in enumerate(colors): # cycle through each color and keep track of an index number&#10;    trialDetails = {} # a dictionary of key-value pairs&#10;    trialDetails['fileName'] = shapes[i] + color + '.gif'&#10;    trialDetails['reward'] = rewards[i]&#10;    trialDetails['condition'] = conditions[i]&#10;    trialDetailsList.append(trialDetails)&#10;&#10;shuffle(trialDetailsList) # do this now to ensure that order of presentation of rewards and conditions is also shuffled&#10;&#10;conditionOne = trialDetailsList[0]&#10;conditionTwo = trialDetailsList[1]&#10;conditionThree = trialDetailsList[2]&#10;conditionFour = trialDetailsList[3]&#10;conditionFive = trialDetailsList[4]&#10;conditionSix = trialDetailsList[5]&#10;conditionSeven = trialDetailsList[6]&#10;conditionEight = trialDetailsList[7]&#10;&#10;numLearningTrials = 400&#10;numLearningRepetitions = 50&#10;for k in range(1, numLearningRepetitions + 1):&#10;    learningTrialList.append(conditionOne)&#10;    learningTrialList.append(conditionTwo)&#10;    learningTrialList.append(conditionThree)&#10;    learningTrialList.append(conditionFour)&#10;    learningTrialList.append(conditionFive)&#10;    learningTrialList.append(conditionSix)&#10;    learningTrialList.append(conditionSeven)&#10;    learningTrialList.append(conditionEight)&#10;&#10;shuffle(learningTrialList)&#10;&#10;stopTaskTrials = 272&#10;stopTrialsPerStopStim = 26&#10;goTrialsPerStopStim = 8&#10;goTrialsPerGoStim = 34&#10;numStim = 8&#10;stopTrialList = []&#10;&#10;if conditionOne['condition'] == 'go':&#10;    conditionOne['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionOne)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionOne['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionOne))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionOne['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionOne))&#10;if conditionTwo['condition'] == 'go':&#10;    conditionTwo['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionTwo)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionTwo['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionTwo))&#10;    for i in range(1,  stopTrialsPerStopStim + 1):&#10;        conditionTwo['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionTwo))&#10;if conditionThree['condition'] == 'go':&#10;    conditionThree['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionThree)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionThree['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionThree))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionThree['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionThree))&#10;if conditionFour['condition'] == 'go':&#10;    conditionFour['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionFour)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionFour['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionFour))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionFour['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionFour))&#10;if conditionFive['condition'] == 'go':&#10;    conditionFive['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionFive)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionFive['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionFive))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionFive['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionFive))&#10;if conditionSix['condition'] == 'go':&#10;    conditionSix['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionSix)&#10;else:&#10;    for j in range(1, stopTrialsPerStopStim + 1):&#10;        conditionSix['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionSix))&#10;    for i in range(1, goTrialsPerStopStim + 1):&#10;        conditionSix['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionSix))&#10;if conditionSeven['condition'] == 'go':&#10;    conditionSeven['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionSeven)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionSeven['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionSeven))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionSeven['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionSeven))&#10;if conditionEight['condition'] == 'go':&#10;    conditionEight['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionEight)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionEight['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionEight))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionEight['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionEight))&#10;&#10;shuffle(stopTrialList)" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#message variable just needs some value at start&#10;message=0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="import random&#10;&#10;displayReward = random.randrange(1, 6)&#10;&#10;if resp.corr:#stored on last run routine&#10;    if displayReward == 1:&#10;            message = &quot;You won $&quot; + str(0);&#10;    else: &#10;            currentReward = currentLearningTrial['reward']&#10;            message = &quot;You won $&quot; + str(currentReward + (random.randrange(-25, 26)*.01))&#10;elif resp.keys is None: #or len(key_resp.keys)&lt;1:&#10;#elif resp.rt == 0:&#10;    message =&quot;Too Slow&quot;&#10;else:&#10;  message=&quot;Wrong&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val=".2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$currentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[151, 151]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="Bank"/>\u000a    <Routine name="StopTrial">\u000a      <SoundComponent name="sound_1">\u000a        <Param name="sound" val="900" valType="str" updates="constant"/>\u000a        <Param name="volume" val=".2" valType="code" updates="constant"/>\u000a        <Param name="name" val="sound_1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val=".2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startEstim" val=".75" valType="code" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$SSD" valType="code" updates="None"/>\u000a      </SoundComponent>\u000a      <TextComponent name="text_3">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_3" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="|" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="4" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_3">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_3" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPosGoStim, yPosGoStim]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$currentGoStim" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[151, 151]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <KeyboardComponent name="goResp">\u000a        <Param name="correctAns" val="$corrGoResp" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="goResp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'z','m'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="StimSetup"/>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="0" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="ResetAtBlock"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="TrialtypesLearning.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="25" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'h', u'yPos': 200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'n', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'b', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="NewStim"/>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoopMain">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoopMain" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="999" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <Routine name="Blank"/>\u000a    <Routine name="ExitMain"/>\u000a    <LoopTerminator name="ReDoLoopMain"/>\u000a    <LoopTerminator name="trials"/>\u000a    <LoopTerminator name="Blocks"/>\u000a    <Routine name="instrStopPrac"/>\u000a    <LoopInitiator loopType="TrialHandler" name="StopBlocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="StopBlocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="4" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="stopBlockSetup"/>\u000a    <LoopInitiator loopType="TrialHandler" name="StopTrials">\u000a      <Param name="conditionsFile" val="trialtypeStop.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="StopTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="17" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'corrGoResp': u'z', u'yPosGoStim': 0, u'xPosGoStim': -200}, {u'corrGoResp': u'm', u'yPosGoStim': 0, u'xPosGoStim': 200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="newStopStim"/>\u000a    <Routine name="StopTrial"/>\u000a    <Routine name="blankStop"/>\u000a    <Routine name="SSDChange"/>\u000a    <LoopTerminator name="StopTrials"/>\u000a    <Routine name="endOfStopBlockFeedback"/>\u000a    <LoopTerminator name="StopBlocks"/>\u000a    <Routine name="End"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p458
sg47
(lp459
sg48
I244785872
sg11
S'Blocks'
p460
sg6
g7
sg50
I0
sg24
I01
sg25
g26
sg51
g1
(g52
g53
(dp461
g55
g56
(g57
g58
g59
S'b'
tRp462
(I1
(I1
I0
tg61
I00
S''
S''
Ntbsg62
g56
(g57
g58
g59
S'b'
tRp463
(I1
(I1
I0
tg61
I00
S''
S''
NtbstRp464
(dp465
g66
(dp466
g55
I01
sg62
I01
ssg68
g456
sg69
(lp467
g55
ag62
asg71
(lp468
I1
aI0
asbsg73
g74
sg75
g76
(g58
(I0
tS'b'
tRp469
(I1
(I1
I0
tg78
I00
S''
tbsg79
I01
sg80
I0
sg81
I-1
sg82
(lp470
Nasg84
Nsg85
I0
sg87
I0
sg88
I0
sg89
I0
sg90
I01
sbag43
ag1
(g42
g3
NtRp471
(dp472
g45
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="stopBlockSetup">\u000a      <CodeComponent name="code_9">\u000a        <Param name="Begin Experiment" val="goCumRT = 0&#10;goRTCount = 0&#10;omissionCount = 0&#10;commissionCount = 0&#10;stopTrialCount = 0&#10;stopSuccessCount = 0&#10;goTrialCount = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_9" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="blankStop">\u000a      <TextComponent name="text_4">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_4" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="End">\u000a      <TextComponent name="text_6">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_6" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="This is the end, beautiful friend" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instrStopPrac">\u000a      <TextComponent name="instrStopText">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instrStopText" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on the left or right side of the screen&#10;&#10;If it appears on the left, press Z&#10;&#10;If it appears on the right, press M&#10;&#10;If you hear a tone, do not press anything on that trial" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="code_8">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_8" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="InitSSD = .25&#10;SSDLeft = InitSSD&#10;SSDRight = InitSSD" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="ExitMain">\u000a      <CodeComponent name="code_6">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_6" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="if resp.corr:&#10;    ReDoLoopMain.finished = True" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="ResetAtBlock">\u000a      <CodeComponent name="code_3">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_3" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="Redo = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS I&#10;&#10;If it appears in the lower right quadrant, PRESS K&#10;&#10;If it appears in the lower left quadrant, PRESS J&#10;&#10;If it appears in the upper left quadrant, PRESS U&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.07" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="NewStim">\u000a      <CodeComponent name="code_4">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_4" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="currentLearningTrial = learningTrialList.pop(0)&#10;currentStimulus = currentLearningTrial['fileName']&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="SSDChange">\u000a      <CodeComponent name="code_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="if goResp.keys is None:&#10;    if xPosGoStim == -200:&#10;        SSDLeft = SSDLeft  + .05&#10;    if xPosGoStim == 200:&#10;        SSDRight = SSDRight + .05&#10;else:&#10;    if xPosGoStim == -200:&#10;        SSDLeft = SSDLeft - .05&#10;    if xPosGoStim == 200:&#10;        SSDRight = SSDRight - .05&#10;&#10;if currentStopTrial['stopOrGo'] == 'go':&#10;    goTrialCount = goTrialCount + 1&#10;&#10;if goResp.corr and currentStopTrial['stopOrGo'] == 'go':&#10;    goCumRT = goCumRT + goResp.rt&#10;    goRTCount = goRTCount + 1&#10;&#10;if currentStopTrial['stopOrGo'] == 'stop':&#10;    stopTrialCount = stopTrialCount + 1&#10;&#10;if currentStopTrial['stopOrGo'] == 'stop' and goResp.keys is None:&#10;    stopSuccessCount = stopSuccessCount + 1&#10;&#10;if goResp.keys is None and currentStopTrial['stopOrGo'] == 'go':&#10;    omissionCount = omissionCount + 1&#10;&#10;if goResp != corrGoResp:&#10;    commissionCount = commissionCount + 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="endOfStopBlockFeedback">\u000a      <CodeComponent name="code_10">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_10" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="&#10;if goRTCount &gt; 0:&#10;    goRTFeedback = str(goCumRT/goRTCount)&#10;else:&#10;    goRTFeedback = 'Null'&#10;&#10;if goTrialCount &gt; 0:&#10;    commissionRate = str(commissionCount/goTrialCount)&#10;    omissionRate = str(omissionCount/goTrialCount)&#10;else: &#10;    commissionRate = 'Null'&#10;    omissionRate = 'Null'&#10;&#10;if stopTrialCount &gt; 0: &#10;    probabilityOfStop = str(stopSuccessCount/stopTrialCount)&#10;else:&#10;    probabilityOfStop = 'Null'&#10;&#10;SSDFeedback = str((SSDLeft+SSDRight)/2)&#10;&#10;stopMessage = &quot;RT = &quot; + str(goRTFeedback) + &quot;Omission % = &quot; + str(omissionRate) + &quot;Commission % = &quot; + str(commissionRate) + &quot;    &quot; + str(probabilityOfStop) + &quot;    &quot; + str(SSDFeedback)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="text_5">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_5" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stopMessage&#10;" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_3">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_3" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'y','n','left','right','space'" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="ExitPrac">\u000a      <CodeComponent name="code_5">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_5" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="if resp.corr:&#10;    ReDoLoop.finished = True " valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="trial">\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'u', 'i', 'j', 'k'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$currentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[151, 151]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="newStopStim">\u000a      <CodeComponent name="code_7">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_7" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="currentStopTrial = stopTrialList.pop(0)&#10;currentGoStim = currentStopTrial['fileName']&#10;currentStopOrGo = currentStopTrial['stopOrGo']&#10;&#10;&#10;&#10;#if xPosGoStim == -200:&#10;#    SSD = SSDLeft + 500&#10;#else:&#10;#    SSD = SSDRight + 500&#10;&#10;if currentStopOrGo == 'stop':&#10;    if xPosGoStim == -200:&#10;        SSD = SSDLeft + .5&#10;    else:&#10;        SSD = SSDRight + .5&#10;else:&#10;    SSD = -1" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="Blank">\u000a      <TextComponent name="text_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val=".5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="StimSetup">\u000a      <CodeComponent name="code">\u000a        <Param name="Begin Experiment" val="from copy import deepcopy&#10;colors = ['yellow', 'white', 'orange', 'magenta', 'green', 'gray', 'cyan', 'blue']&#10;shapes = ['triangle', 'square', 'line', 'invertedtriangle', 'hexagon', 'diamond', 'cross', 'circle']&#10;rewards = [0.50, 1.00, 2.00, 4.00] * 2&#10;conditions = ['go', 'go', 'go', 'go', 'stop', 'stop', 'stop', 'stop']&#10;trialDetailsList = []&#10;learningTrialList = []&#10;&#10;shuffle(colors)&#10;shuffle(shapes)&#10;&#10;for i, color in enumerate(colors): # cycle through each color and keep track of an index number&#10;    trialDetails = {} # a dictionary of key-value pairs&#10;    trialDetails['fileName'] = shapes[i] + color + '.gif'&#10;    trialDetails['reward'] = rewards[i]&#10;    trialDetails['condition'] = conditions[i]&#10;    trialDetailsList.append(trialDetails)&#10;&#10;shuffle(trialDetailsList) # do this now to ensure that order of presentation of rewards and conditions is also shuffled&#10;&#10;conditionOne = trialDetailsList[0]&#10;conditionTwo = trialDetailsList[1]&#10;conditionThree = trialDetailsList[2]&#10;conditionFour = trialDetailsList[3]&#10;conditionFive = trialDetailsList[4]&#10;conditionSix = trialDetailsList[5]&#10;conditionSeven = trialDetailsList[6]&#10;conditionEight = trialDetailsList[7]&#10;&#10;numLearningTrials = 400&#10;numLearningRepetitions = 50&#10;for k in range(1, numLearningRepetitions + 1):&#10;    learningTrialList.append(conditionOne)&#10;    learningTrialList.append(conditionTwo)&#10;    learningTrialList.append(conditionThree)&#10;    learningTrialList.append(conditionFour)&#10;    learningTrialList.append(conditionFive)&#10;    learningTrialList.append(conditionSix)&#10;    learningTrialList.append(conditionSeven)&#10;    learningTrialList.append(conditionEight)&#10;&#10;shuffle(learningTrialList)&#10;&#10;stopTaskTrials = 272&#10;stopTrialsPerStopStim = 26&#10;goTrialsPerStopStim = 8&#10;goTrialsPerGoStim = 34&#10;numStim = 8&#10;stopTrialList = []&#10;&#10;if conditionOne['condition'] == 'go':&#10;    conditionOne['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionOne)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionOne['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionOne))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionOne['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionOne))&#10;if conditionTwo['condition'] == 'go':&#10;    conditionTwo['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionTwo)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionTwo['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionTwo))&#10;    for i in range(1,  stopTrialsPerStopStim + 1):&#10;        conditionTwo['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionTwo))&#10;if conditionThree['condition'] == 'go':&#10;    conditionThree['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionThree)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionThree['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionThree))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionThree['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionThree))&#10;if conditionFour['condition'] == 'go':&#10;    conditionFour['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionFour)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionFour['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionFour))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionFour['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionFour))&#10;if conditionFive['condition'] == 'go':&#10;    conditionFive['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionFive)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionFive['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionFive))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionFive['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionFive))&#10;if conditionSix['condition'] == 'go':&#10;    conditionSix['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionSix)&#10;else:&#10;    for j in range(1, stopTrialsPerStopStim + 1):&#10;        conditionSix['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionSix))&#10;    for i in range(1, goTrialsPerStopStim + 1):&#10;        conditionSix['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionSix))&#10;if conditionSeven['condition'] == 'go':&#10;    conditionSeven['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionSeven)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionSeven['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionSeven))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionSeven['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionSeven))&#10;if conditionEight['condition'] == 'go':&#10;    conditionEight['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionEight)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionEight['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionEight))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionEight['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionEight))&#10;&#10;shuffle(stopTrialList)" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#message variable just needs some value at start&#10;message=0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="import random&#10;&#10;displayReward = random.randrange(1, 6)&#10;&#10;if resp.corr:#stored on last run routine&#10;    if displayReward == 1:&#10;            message = &quot;You won $&quot; + str(0);&#10;    else: &#10;            currentReward = currentLearningTrial['reward']&#10;            message = &quot;You won $&quot; + str(currentReward + (random.randrange(-25, 26)*.01))&#10;elif resp.keys is None: #or len(key_resp.keys)&lt;1:&#10;#elif resp.rt == 0:&#10;    message =&quot;Too Slow&quot;&#10;else:&#10;  message=&quot;Wrong&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val=".2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$currentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[151, 151]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="Bank"/>\u000a    <Routine name="StopTrial">\u000a      <SoundComponent name="sound_1">\u000a        <Param name="sound" val="900" valType="str" updates="constant"/>\u000a        <Param name="volume" val=".2" valType="code" updates="constant"/>\u000a        <Param name="name" val="sound_1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val=".2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startEstim" val=".75" valType="code" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$SSD" valType="code" updates="None"/>\u000a      </SoundComponent>\u000a      <TextComponent name="text_3">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_3" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="|" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="4" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_3">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_3" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPosGoStim, yPosGoStim]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$currentGoStim" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[151, 151]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <KeyboardComponent name="goResp">\u000a        <Param name="correctAns" val="$corrGoResp" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="goResp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'z','m'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="StimSetup"/>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="0" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="ResetAtBlock"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="TrialtypesLearning.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="25" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'h', u'yPos': 200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'n', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'b', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="NewStim"/>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoopMain">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoopMain" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="999" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <Routine name="Blank"/>\u000a    <Routine name="ExitMain"/>\u000a    <LoopTerminator name="ReDoLoopMain"/>\u000a    <LoopTerminator name="trials"/>\u000a    <LoopTerminator name="Blocks"/>\u000a    <Routine name="instrStopPrac"/>\u000a    <LoopInitiator loopType="TrialHandler" name="StopBlocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="StopBlocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="4" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="stopBlockSetup"/>\u000a    <LoopInitiator loopType="TrialHandler" name="StopTrials">\u000a      <Param name="conditionsFile" val="trialtypeStop.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="StopTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="17" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'corrGoResp': u'z', u'yPosGoStim': 0, u'xPosGoStim': -200}, {u'corrGoResp': u'm', u'yPosGoStim': 0, u'xPosGoStim': 200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="newStopStim"/>\u000a    <Routine name="StopTrial"/>\u000a    <Routine name="blankStop"/>\u000a    <Routine name="SSDChange"/>\u000a    <LoopTerminator name="StopTrials"/>\u000a    <Routine name="endOfStopBlockFeedback"/>\u000a    <LoopTerminator name="StopBlocks"/>\u000a    <Routine name="End"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p473
sg47
(lp474
sg48
I244785872
sg11
S'StopTrials'
p475
sg6
g7
sg50
I17
sg24
I01
sg25
g26
sg51
g1
(g52
g53
(dp476
g21
g56
(g57
g58
g59
S'b'
tRp477
(I1
(I2
I17
tg61
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg22
g56
(g57
g58
g59
S'b'
tRp478
(I1
(I2
I17
tg61
I00
S'Pv\x91>8\x94\xa2>h\xf9\x99>\x90\x8b\xb3>(*\xab>\x18?\xbc>\x90\x8c\xc4>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb0\x1d\xbc>pb\x91>\xc0\x82\xa2>\x18\x87\xa2>P\n\xab>\x90\x8e\xb3>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01'
Ntbsg55
g56
(g57
g58
g59
S'b'
tRp479
(I1
(I2
I17
tg61
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg20
g76
(g58
(I0
tS'b'
tRp480
(I1
(I2
I17
tg32
(S'O4'
I0
I1
tRp481
(I3
S'|'
NNNI-1
I-1
I63
tbI00
(lp482
S'z'
aS'z'
aS'z'
aS'z'
aS'z'
aS'z'
aS'z'
aNaNaNaNaNaNaNaNaNaNaS'm'
aS'm'
aS'm'
aS'm'
aS'm'
aS'm'
aNaNaNaNaNaNaNaNaNaNaNatbsg19
g76
(g58
(I0
tS'b'
tRp483
(I1
(I2
I17
tg481
I00
(lp484
g123
ag134
ag123
ag134
ag134
ag227
ag145
ag145
ag289
ag289
ag111
ag227
ag268
ag111
ag111
ag227
ag186
ag111
ag145
ag134
ag145
ag186
ag123
ag145
ag268
ag268
ag186
ag123
ag268
ag145
ag145
ag134
ag186
ag111
atbsg23
g56
(g57
g58
g59
S'b'
tRp485
(I1
(I2
I17
tg61
I00
S'\x00\x00\x80\xbf\x00\x00\x80\xbf\x00\x00\x80\xbf\x00\x00\x80\xbf\x00\x00\x80\xbf\x00\x00\x80\xbf\xcd\xccL>\x00\x00\x80>\x00\x00\x80\xbf\x00\x00\x80\xbf\x9a\x99\x99>\x00\x00\x80\xbf33\xb3>\xcd\xcc\xcc>ff\xe6>\x00\x00\x80\xbf\x00\x00\x00?\xcd\xccL>\x9a\x99\x19>\x00\x00\x80\xbf\xcd\xcc\xcc=\x00\x00\x80\xbf\x00\x00\x80\xbf\x9a\x99\x19>\xcd\xccL>\x00\x00\x80>\x9a\x99\x99>\x00\x00\x80\xbf33\xb3>\xcd\xcc\xcc>ff\xe6>\x00\x00\x80\xbf\x00\x00\x00?\xcd\xcc\x0c?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg17
g56
(g57
g58
g59
S'b'
tRp486
(I1
(I2
I17
tg61
I00
S'\x00\x00\x80\xbf\x00\x00\x80\xbf\x00\x00\x80\xbf\x00\x00\x80\xbf\x00\x00\x80\xbf\x00\x00\x80\xbf\x00\x00\x80>\xcd\xccL>\x00\x00\x80\xbf\x00\x00\x80\xbf\x00\x00\x80>\x00\x00\x80\xbf\x9a\x99\x99>33\xb3>\xcd\xcc\xcc>\x00\x00\x80\xbfff\xe6>\x00\x00\x80>\xcd\xccL>\x00\x00\x80\xbf\x9a\x99\x19>\x00\x00\x80\xbf\x00\x00\x80\xbf\xcd\xcc\xcc=\x9a\x99\x19>\xcd\xccL>\x00\x00\x80>\x00\x00\x80\xbf\x9a\x99\x99>33\xb3>\xcd\xcc\xcc>\x00\x00\x80\xbfff\xe6>\x00\x00\x00?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg18
g76
(g58
(I0
tS'b'
tRp487
(I1
(I2
I17
tg481
I00
(lp488
g120
ag120
ag120
ag120
ag120
ag120
ag108
ag108
ag120
ag120
ag108
ag120
ag108
ag108
ag108
ag120
ag108
ag108
ag108
ag120
ag108
ag120
ag120
ag108
ag108
ag108
ag108
ag120
ag108
ag108
ag108
ag120
ag108
ag108
atbsg62
g56
(g57
g58
g59
S'b'
tRp489
(I1
(I2
I17
tg61
I00
S'\x00\x00\x80?\x00\x00\x00@\x00\x00\xa0@\x00\x00\x00A\x00\x00 A\x00\x000A\x00\x00@A\x00\x00`A\x00\x00\x88A\x00\x00\x90A\x00\x00\xa0A\x00\x00\xb0A\x00\x00\xb8A\x00\x00\xc0A\x00\x00\xf0A\x00\x00\xf8A\x00\x00\x00B\x00\x00\x00\x00\x00\x00@@\x00\x00\x80@\x00\x00\xc0@\x00\x00\xe0@\x00\x00\x10A\x00\x00PA\x00\x00pA\x00\x00\x80A\x00\x00\x98A\x00\x00\xa8A\x00\x00\xc8A\x00\x00\xd0A\x00\x00\xd8A\x00\x00\xe0A\x00\x00\xe8A\x00\x00\x04B'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp490
(dp491
g66
(dp492
g21
I01
sg22
I01
sg55
I01
sg20
I00
sg19
I00
sg23
I01
sg17
I01
sg18
I00
sg62
I01
ssg68
g471
sg69
(lp493
g55
ag62
ag17
ag18
ag19
ag20
ag21
ag22
ag23
asg71
(lp494
I2
aI17
asbsg73
S'fullRandom'
p495
sg75
g76
(g58
(I0
tS'b'
tRp496
(I1
(I2
I17
tg481
I00
(lp497
I1
aI0
aI1
aI1
aI0
aI0
aI0
aI0
aI1
aI0
aI0
aI0
aI0
aI1
aI1
aI0
aI0
aI0
aI1
aI0
aI1
aI1
aI0
aI1
aI1
aI0
aI1
aI1
aI0
aI1
aI1
aI1
aI0
aI1
atbsg79
I01
sg80
I17
sg81
I-1
sg82
(lp498
g1
(cpsychopy.data
TrialType
p499
g53
(dp500
g97
Vz
sg98
I0
sg99
I-200
stRp501
ag1
(g499
g53
(dp502
g97
Vm
sg98
I0
sg99
I200
stRp503
asg84
Nsg85
I1
sg87
I34
sg88
I0
sg89
I34
sg90
I01
sbasS'savePickle'
p504
I00
sb.