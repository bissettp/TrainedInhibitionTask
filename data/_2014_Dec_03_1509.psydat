ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
V/Users/patrickbissett/OneDrive/Poldrack/PsychoPy/LearningTask.psyexp
p7
sS'dataFileName'
p8
V/Users/patrickbissett/OneDrive/Poldrack/PsychoPy/data/_2014_Dec_03_1509
p9
sS'runtimeInfo'
p10
NsS'name'
p11
S'LearningTask'
p12
sS'dataNames'
p13
(lp14
S'ok1.keys'
p15
aS'ok1.rt'
p16
aS'resp.keys'
p17
aS'resp.corr'
p18
aS'resp.rt'
p19
asS'autoLog'
p20
I01
sS'extraInfo'
p21
(dp22
S'expName'
p23
g12
sS'gender (m/f)'
p24
V
sS'age'
p25
V40
p26
sS'frameRate'
p27
cnumpy.core.multiarray
scalar
p28
(cnumpy
dtype
p29
(S'f8'
I0
I1
tRp30
(I3
S'<'
NNNI-1
I-1
I0
tbS'z\x96\xa4\xfd\xb3\xfbM@'
tRp31
sS'session'
p32
I3
sS'date'
p33
V2014_Dec_03_1509
p34
sS'participant'
p35
V
ssS'loopsUnfinished'
p36
(lp37
g1
(cpsychopy.data
TrialHandler
p38
g3
NtRp39
(dp40
S'origin'
p41
V<PsychoPy2experiment version="1.81.02" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="OK, ready to start the main experiment?&#10;&#10;Remember, press;&#10; - 'S' if the SMALL letters are S&#10; - 'H' if the SMALL letters are H&#10;&#10;Try to respond as quickly and as accurately as possible.&#10;&#10;When you are ready to proceed press any key." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial">\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'s', 'h'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <PolygonComponent name="polygon">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="fillColorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="polygon" valType="code" updates="None"/>\u000a        <Param name="fillColor" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="constant"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="lineWidth" val="10" valType="code" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="lineColor" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="lineColorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="nVertices" val="2" valType="int" updates="constant"/>\u000a        <Param name="size" val="[200, 200]" valType="code" updates="constant"/>\u000a      </PolygonComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="10" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="In this experiment you will be presented with a large letter made up of smaller letters. Your task is to&#10;&#10;Respond by pressing;&#10; - 'S' if the SMALL letters are S&#10; - 'H' if the SMALL letters are H&#10;&#10;Try to respond as quickly and as accurately as possible.&#10;&#10;There will be a number of practice trials in which you will be given feedback. &#10;&#10;Press any key when you are ready to proceed." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;msg=''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="if resp.corr:#stored on last run routine&#10;  msg=&quot;Correct! RT=%.3f&quot; %(resp.rt)&#10;else:&#10;  msg=&quot;Oops! That was wrong&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="thanks">\u000a      <TextComponent name="thanksMsg">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="thanksMsg" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="You're done! Fun, wasn't it!? ;-)" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="2.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practiceTrials">\u000a      <Param name="conditionsFile" val="trialTypes.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practiceTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{'xPos': 200.0, 'congruence': 'conflicting', 'yPos': 200.0, 'corrAns': 'h', 'stimFile': 'bigHsmallH.png', 'location': 'up_right'}, {'xPos': 200.0, 'congruence': 'consistent', 'yPos': 200.0, 'corrAns': 's', 'stimFile': 'bigHsmallS.png', 'location': 'up_right'}, {'xPos': 200.0, 'congruence': 'conflicting', 'yPos': 200.0, 'corrAns': 's', 'stimFile': 'bigSsmallS.png', 'location': 'up_right'}, {'xPos': 200.0, 'congruence': 'consistent', 'yPos': 200.0, 'corrAns': 'h', 'stimFile': 'bigSsmallH.png', 'location': 'up_right'}, {'xPos': -200.0, 'congruence': 'conflicting', 'yPos': 200.0, 'corrAns': 'h', 'stimFile': 'bigHsmallH.png', 'location': 'up_left'}, {'xPos': -200.0, 'congruence': 'consistent', 'yPos': 200.0, 'corrAns': 's', 'stimFile': 'bigHsmallS.png', 'location': 'up_left'}, {'xPos': -200.0, 'congruence': 'conflicting', 'yPos': 200.0, 'corrAns': 's', 'stimFile': 'bigSsmallS.png', 'location': 'up_left'}, {'xPos': -200.0, 'congruence': 'consistent', 'yPos': 200.0, 'corrAns': 'h', 'stimFile': 'bigSsmallH.png', 'location': 'up_left'}, {'xPos': 200.0, 'congruence': 'conflicting', 'yPos': -200.0, 'corrAns': 'h', 'stimFile': 'bigHsmallH.png', 'location': 'down_right'}, {'xPos': 200.0, 'congruence': 'consistent', 'yPos': -200.0, 'corrAns': 's', 'stimFile': 'bigHsmallS.png', 'location': 'down_right'}, {'xPos': 200.0, 'congruence': 'conflicting', 'yPos': -200.0, 'corrAns': 's', 'stimFile': 'bigSsmallS.png', 'location': 'down_right'}, {'xPos': 200.0, 'congruence': 'consistent', 'yPos': -200.0, 'corrAns': 'h', 'stimFile': 'bigSsmallH.png', 'location': 'down_right'}, {'xPos': -200.0, 'congruence': 'conflicting', 'yPos': -200.0, 'corrAns': 'h', 'stimFile': 'bigHsmallH.png', 'location': 'down_left'}, {'xPos': -200.0, 'congruence': 'consistent', 'yPos': -200.0, 'corrAns': 's', 'stimFile': 'bigHsmallS.png', 'location': 'down_left'}, {'xPos': -200.0, 'congruence': 'conflicting', 'yPos': -200.0, 'corrAns': 's', 'stimFile': 'bigSsmallS.png', 'location': 'down_left'}, {'xPos': -200.0, 'congruence': 'consistent', 'yPos': -200.0, 'corrAns': 'h', 'stimFile': 'bigSsmallH.png', 'location': 'down_left'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="practiceTrials"/>\u000a    <Routine name="instrMain"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="trialTypes.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="4" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{'xPos': 200.0, 'congruence': 'conflicting', 'yPos': 200.0, 'corrAns': 'h', 'stimFile': 'bigHsmallH.png', 'location': 'up_right'}, {'xPos': 200.0, 'congruence': 'consistent', 'yPos': 200.0, 'corrAns': 's', 'stimFile': 'bigHsmallS.png', 'location': 'up_right'}, {'xPos': 200.0, 'congruence': 'conflicting', 'yPos': 200.0, 'corrAns': 's', 'stimFile': 'bigSsmallS.png', 'location': 'up_right'}, {'xPos': 200.0, 'congruence': 'consistent', 'yPos': 200.0, 'corrAns': 'h', 'stimFile': 'bigSsmallH.png', 'location': 'up_right'}, {'xPos': -200.0, 'congruence': 'conflicting', 'yPos': 200.0, 'corrAns': 'h', 'stimFile': 'bigHsmallH.png', 'location': 'up_left'}, {'xPos': -200.0, 'congruence': 'consistent', 'yPos': 200.0, 'corrAns': 's', 'stimFile': 'bigHsmallS.png', 'location': 'up_left'}, {'xPos': -200.0, 'congruence': 'conflicting', 'yPos': 200.0, 'corrAns': 's', 'stimFile': 'bigSsmallS.png', 'location': 'up_left'}, {'xPos': -200.0, 'congruence': 'consistent', 'yPos': 200.0, 'corrAns': 'h', 'stimFile': 'bigSsmallH.png', 'location': 'up_left'}, {'xPos': 200.0, 'congruence': 'conflicting', 'yPos': -200.0, 'corrAns': 'h', 'stimFile': 'bigHsmallH.png', 'location': 'down_right'}, {'xPos': 200.0, 'congruence': 'consistent', 'yPos': -200.0, 'corrAns': 's', 'stimFile': 'bigHsmallS.png', 'location': 'down_right'}, {'xPos': 200.0, 'congruence': 'conflicting', 'yPos': -200.0, 'corrAns': 's', 'stimFile': 'bigSsmallS.png', 'location': 'down_right'}, {'xPos': 200.0, 'congruence': 'consistent', 'yPos': -200.0, 'corrAns': 'h', 'stimFile': 'bigSsmallH.png', 'location': 'down_right'}, {'xPos': -200.0, 'congruence': 'conflicting', 'yPos': -200.0, 'corrAns': 'h', 'stimFile': 'bigHsmallH.png', 'location': 'down_left'}, {'xPos': -200.0, 'congruence': 'consistent', 'yPos': -200.0, 'corrAns': 's', 'stimFile': 'bigHsmallS.png', 'location': 'down_left'}, {'xPos': -200.0, 'congruence': 'conflicting', 'yPos': -200.0, 'corrAns': 's', 'stimFile': 'bigSsmallS.png', 'location': 'down_left'}, {'xPos': -200.0, 'congruence': 'consistent', 'yPos': -200.0, 'corrAns': 'h', 'stimFile': 'bigSsmallH.png', 'location': 'down_left'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <LoopTerminator name="trials"/>\u000a    <Routine name="thanks"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p42
sS'thisTrial'
p43
g1
(cpsychopy.data
TrialType
p44
c__builtin__
dict
p45
(dp46
VxPos
p47
I-200
sVcorrAns
p48
Vg
sVlocation
p49
Vdown_left
p50
sVShape
p51
VCircle
p52
sVnumVertices
p53
I90
sVyPos
p54
I-200
stRp55
sS'_exp'
p56
I228860752
sg11
S'practiceTrials'
p57
sg6
g7
sS'thisRepN'
p58
I0
sg20
I01
sg21
g22
sS'data'
p59
g1
(cpsychopy.data
DataHandler
p60
g45
(dp61
S'ran'
p62
cnumpy.ma.core
_mareconstruct
p63
(cnumpy.ma.core
MaskedArray
p64
cnumpy
ndarray
p65
(I0
tp66
S'b'
tRp67
(I1
(I16
I1
tg29
(S'f4'
I0
I1
tRp68
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg17
cnumpy.core.multiarray
_reconstruct
p69
(g65
(I0
tS'b'
tRp70
(I1
(I16
I1
tg29
(S'O4'
I0
I1
tRp71
(I3
S'|'
NNNI-1
I-1
I63
tbI00
(lp72
S'y'
aS'--'
p73
aS'y'
aS'--'
p74
aS't'
aS't'
aS't'
aS'--'
p75
aS'h'
aS'--'
p76
aS'--'
p77
aS'--'
p78
aS'--'
p79
aS'g'
aS'g'
aS'--'
p80
atbsg18
g63
(g64
g65
g66
S'b'
tRp81
(I1
(I16
I1
tg68
I00
S'\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00'
S'\x00\x01\x00\x01\x00\x00\x00\x01\x00\x01\x01\x01\x01\x00\x00\x01'
NtbsS'order'
p82
g63
(g64
g65
g66
S'b'
tRp83
(I1
(I16
I1
tg68
I00
S'\x00\x00\x80@\x00\x00\x00\x00\x00\x00\xc0@\x00\x00\x00\x00\x00\x00@@\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x00\x00\x00\x00\xa0@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\xe0@\x00\x00\x00A'
S'\x00\x01\x00\x01\x00\x00\x00\x01\x00\x01\x01\x01\x01\x00\x00\x00'
Ntbsg19
g63
(g64
g65
g66
S'b'
tRp84
(I1
(I16
I1
tg68
I00
S'\x98\xc0\xd5>\x00\x00\x00\x00\x80[\xef>\x00\x00\x00\x00X:\xde>D*\x11?@\xa6\xd5>\x00\x00\x00\x00\xe8\xa9\xe6>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe4\xd8*?\xb0\xea\xc4>\x00\x00\x00\x00'
S'\x00\x01\x00\x01\x00\x00\x00\x01\x00\x01\x01\x01\x01\x00\x00\x01'
NtbstRp85
(dp86
S'isNumeric'
p87
(dp88
g62
I01
sg17
I00
sg19
I01
sg82
I01
sg18
I01
ssS'trials'
p89
g39
sS'dataTypes'
p90
(lp91
g62
ag82
ag17
ag18
ag19
asS'dataShape'
p92
(lp93
I16
aI1
asbsS'method'
p94
S'random'
p95
sS'sequenceIndices'
p96
g69
(g65
(I0
tS'b'
tRp97
(I1
(I16
I1
tg29
(S'i4'
I0
I1
tRp98
(I3
S'<'
NNNI-1
I-1
I0
tbI01
S'\x05\x00\x00\x00\r\x00\x00\x00\x06\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x02\x00\x00\x00\x0e\x00\x00\x00\x0f\x00\x00\x00\x01\x00\x00\x00\x0c\x00\x00\x00\x03\x00\x00\x00\x07\x00\x00\x00\t\x00\x00\x00\n\x00\x00\x00\x0b\x00\x00\x00'
tbsS'finished'
p99
I00
sS'nReps'
p100
I1
sS'nRemaining'
p101
I7
sS'trialList'
p102
(lp103
g1
(g44
g45
(dp104
g47
I200
sg48
Vy
sg49
Vup_right
p105
sg51
VLine
p106
sg53
I2
sg54
I200
stRp107
ag1
(g44
g45
(dp108
g47
I200
sg48
Vy
sg49
g105
sg51
VTriangle
p109
sg53
I3
sg54
I200
stRp110
ag1
(g44
g45
(dp111
g47
I200
sg48
Vy
sg49
g105
sg51
VSquare
p112
sg53
I4
sg54
I200
stRp113
ag1
(g44
g45
(dp114
g47
I200
sg48
Vy
sg49
g105
sg51
g52
sg53
I90
sg54
I200
stRp115
ag1
(g44
g45
(dp116
g47
I-200
sg48
Vt
sg49
Vup_left
p117
sg51
g106
sg53
I2
sg54
I200
stRp118
ag1
(g44
g45
(dp119
g47
I-200
sg48
Vt
sg49
g117
sg51
g109
sg53
I3
sg54
I200
stRp120
ag1
(g44
g45
(dp121
g47
I-200
sg48
Vt
sg49
g117
sg51
g112
sg53
I4
sg54
I200
stRp122
ag1
(g44
g45
(dp123
g47
I-200
sg48
Vt
sg49
g117
sg51
g52
sg53
I90
sg54
I200
stRp124
ag1
(g44
g45
(dp125
g47
I200
sg48
Vh
sg49
Vdown_right
p126
sg51
g106
sg53
I2
sg54
I-200
stRp127
ag1
(g44
g45
(dp128
g47
I200
sg48
Vh
sg49
g126
sg51
g109
sg53
I3
sg54
I-200
stRp129
ag1
(g44
g45
(dp130
g47
I200
sg48
Vh
sg49
g126
sg51
g112
sg53
I4
sg54
I-200
stRp131
ag1
(g44
g45
(dp132
g47
I200
sg48
Vh
sg49
g126
sg51
g52
sg53
I90
sg54
I-200
stRp133
ag1
(g44
g45
(dp134
g47
I-200
sg48
Vg
sg49
g50
sg51
g106
sg53
I2
sg54
I-200
stRp135
ag1
(g44
g45
(dp136
g47
I-200
sg48
Vg
sg49
g50
sg51
g109
sg53
I3
sg54
I-200
stRp137
ag1
(g44
g45
(dp138
g47
I-200
sg48
Vg
sg49
g50
sg51
g112
sg53
I4
sg54
I-200
stRp139
ag55
asS'seed'
p140
NsS'thisIndex'
p141
g28
(g98
S'\x0f\x00\x00\x00'
tRp142
sS'thisN'
p143
I8
sS'thisTrialN'
p144
I8
sS'nTotal'
p145
I16
sS'_warnUseOfNext'
p146
I01
sbasS'saveWideText'
p147
I01
sS'thisEntry'
p148
(dp149
sS'version'
p150
S''
sS'_paramNamesSoFar'
p151
(lp152
g47
ag49
ag51
ag54
ag53
ag48
asS'entries'
p153
(lp154
(dp155
g32
I3
sg24
V
sg16
F0.68417096138000488
sg25
g26
sg27
g31
sg23
g12
sg15
S'space'
p156
sg33
g34
sg35
V
sa(dp157
g32
I3
sg17
S't'
sg47
I-200
sg48
Vt
sg18
I1
sg19
F0.56705117225646973
sg25
g26
sg35
V
sS'practiceTrials.thisN'
p158
I0
sg54
I200
sg27
g31
sg33
g34
sg51
g109
sg23
g12
sS'practiceTrials.thisTrialN'
p159
I0
sS'practiceTrials.thisIndex'
p160
g28
(g98
S'\x05\x00\x00\x00'
tRp161
sS'practiceTrials.thisRepN'
p162
I0
sg24
V
sg53
I3
sg49
g117
sa(dp163
g32
I3
sg17
S'g'
sg47
I-200
sg48
Vg
sg18
I1
sg19
F0.66737198829650879
sg25
g26
sg35
V
sS'practiceTrials.thisN'
p164
I1
sg54
I-200
sg27
g31
sg33
g34
sg51
g109
sg23
g12
sS'practiceTrials.thisTrialN'
p165
I1
sS'practiceTrials.thisIndex'
p166
g28
(g98
S'\r\x00\x00\x00'
tRp167
sS'practiceTrials.thisRepN'
p168
I0
sg24
V
sg53
I3
sg49
g50
sa(dp169
g32
I3
sg17
S't'
sg47
I-200
sg48
Vt
sg18
I1
sg19
F0.41728401184082031
sg25
g26
sg35
V
sS'practiceTrials.thisN'
p170
I2
sg54
I200
sg27
g31
sg33
g34
sg51
g112
sg23
g12
sS'practiceTrials.thisTrialN'
p171
I2
sS'practiceTrials.thisIndex'
p172
g28
(g98
S'\x06\x00\x00\x00'
tRp173
sS'practiceTrials.thisRepN'
p174
I0
sg24
V
sg53
I4
sg49
g117
sa(dp175
g32
I3
sg17
S't'
sg47
I-200
sg48
Vt
sg18
I1
sg19
F0.43403887748718262
sg25
g26
sg35
V
sS'practiceTrials.thisN'
p176
I3
sg54
I200
sg27
g31
sg33
g34
sg51
g106
sg23
g12
sS'practiceTrials.thisTrialN'
p177
I3
sS'practiceTrials.thisIndex'
p178
g28
(g98
S'\x04\x00\x00\x00'
tRp179
sS'practiceTrials.thisRepN'
p180
I0
sg24
V
sg53
I2
sg49
g117
sa(dp181
g32
I3
sg17
S'y'
sg47
I200
sg48
Vy
sg18
I1
sg19
F0.41748499870300293
sg25
g26
sg35
V
sS'practiceTrials.thisN'
p182
I4
sg54
I200
sg27
g31
sg33
g34
sg51
g106
sg23
g12
sS'practiceTrials.thisTrialN'
p183
I4
sS'practiceTrials.thisIndex'
p184
g28
(g98
S'\x00\x00\x00\x00'
tRp185
sS'practiceTrials.thisRepN'
p186
I0
sg24
V
sg53
I2
sg49
g105
sa(dp187
g32
I3
sg17
S'h'
sg47
I200
sg48
Vh
sg18
I1
sg19
F0.4505150318145752
sg25
g26
sg35
V
sS'practiceTrials.thisN'
p188
I5
sg54
I-200
sg27
g31
sg33
g34
sg51
g106
sg23
g12
sS'practiceTrials.thisTrialN'
p189
I5
sS'practiceTrials.thisIndex'
p190
g28
(g98
S'\x08\x00\x00\x00'
tRp191
sS'practiceTrials.thisRepN'
p192
I0
sg24
V
sg53
I2
sg49
g126
sa(dp193
g32
I3
sg17
S'y'
sg47
I200
sg48
Vy
sg18
I1
sg19
F0.46749496459960938
sg25
g26
sg35
V
sS'practiceTrials.thisN'
p194
I6
sg54
I200
sg27
g31
sg33
g34
sg51
g112
sg23
g12
sS'practiceTrials.thisTrialN'
p195
I6
sS'practiceTrials.thisIndex'
p196
g28
(g98
S'\x02\x00\x00\x00'
tRp197
sS'practiceTrials.thisRepN'
p198
I0
sg24
V
sg53
I4
sg49
g105
sa(dp199
g32
I3
sg17
S'g'
sg47
I-200
sg48
Vg
sg18
I1
sg19
F0.38460302352905273
sg25
g26
sg35
V
sS'practiceTrials.thisN'
p200
I7
sg54
I-200
sg27
g31
sg33
g34
sg51
g112
sg23
g12
sS'practiceTrials.thisTrialN'
p201
I7
sS'practiceTrials.thisIndex'
p202
g28
(g98
S'\x0e\x00\x00\x00'
tRp203
sS'practiceTrials.thisRepN'
p204
I0
sg24
V
sg53
I4
sg49
g50
sasS'loops'
p205
(lp206
g39
asS'savePickle'
p207
I01
sb.