ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
V/Users/patrickbissett/OneDrive/Poldrack/TrainedInhibition/PsychoPy/IntegratingDifferentCodeFlexibleStim.psyexp
p7
sS'dataFileName'
p8
V/Users/patrickbissett/OneDrive/Poldrack/TrainedInhibition/PsychoPy/data/66_2015_Mar_05_1406
p9
sS'runtimeInfo'
p10
NsS'name'
p11
S'LearningTask'
p12
sS'dataNames'
p13
(lp14
S'ok1.keys'
p15
aS'ok1.rt'
p16
aS'resp.keys'
p17
aS'resp.corr'
p18
aS'resp.rt'
p19
asS'autoLog'
p20
I01
sS'extraInfo'
p21
(dp22
S'expName'
p23
g12
sS'gender (m/f)'
p24
V
sS'age'
p25
V
sS'frameRate'
p26
cnumpy.core.multiarray
scalar
p27
(cnumpy
dtype
p28
(S'f8'
I0
I1
tRp29
(I3
S'<'
NNNI-1
I-1
I0
tbS'\xc9\x0bI\x01>\xfbM@'
tRp30
sS'session'
p31
I3
sS'date'
p32
V2015_Mar_05_1406
p33
sS'participant'
p34
V66
p35
ssS'loopsUnfinished'
p36
(lp37
g1
(cpsychopy.data
TrialHandler
p38
g3
NtRp39
(dp40
S'origin'
p41
V<PsychoPy2experiment version="1.81.03" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="OK, ready to start the main experiment?&#10;&#10;Remember, press;&#10; - 'S' if the SMALL letters are S&#10; - 'H' if the SMALL letters are H&#10;&#10;Try to respond as quickly and as accurately as possible.&#10;&#10;When you are ready to proceed press any key." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial">\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'t', 'y', 'g', 'h'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$ShapeStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[101, 101]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="StimSetup">\u000a      <CodeComponent name="code">\u000a        <Param name="Begin Experiment" val="colors = ['yellow', 'white', 'orange', 'magenta', 'green', 'gray', 'cyan', 'blue']&#10;shapes = ['triangle', 'square', 'line', 'invertedtriangle', 'hexagon', 'diamond', 'cross', 'circle']&#10;rewards = [0.5, 1, 2, 4] * 2&#10;conditions = ['go', 'go', 'go', 'go', 'stop', 'stop', 'stop', 'stop']&#10;trialDetailsList = []&#10;&#10;shuffle(colors)&#10;shuffle(shapes)&#10;&#10;for i, color in enumerate(colors): # cycle through each color and keep track of an index number&#10;    trialDetails = {} # a dictionary of key-value pairs&#10;    trialDetails['fileName'] = shapes[i] + color + '.gif'&#10;    trialDetails['reward'] = rewards[i]&#10;    trialDetails['condition'] = conditions[i]&#10;    trialDetailsList.append(trialDetails)&#10;&#10;shuffle(trialDetailsList) # do this now to ensure that order of presentation of rewards and conditions is also shuffled&#10;&#10;ConditionOne = trialDetailsList[0]&#10;ConditionTwo = trialDetailsList[1]&#10;ConditionThree = trialDetailsList[2]&#10;ConditionFour = trialDetailsList[3]&#10;ConditionFive = trialDetailsList[4]&#10;ConditionSix = trialDetailsList[5]&#10;ConditionSeven = trialDetailsList[6]&#10;ConditionEight = trialDetailsList[7]" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.07" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;msg=['Reward']" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="if resp.corr:#stored on last run routine&#10;  msg=&quot;Correct! RT=%.3f&quot; %(resp.rt)&#10;else:&#10;  msg=&quot;Oops! That was wrong&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="StimSetup"/>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practiceTrials">\u000a      <Param name="conditionsFile" val="Trialtypes4New.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practiceTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'Reward': 0.5, u'corrAns': u'y', u'ShapeStimulus': u'crosscyan.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 0.5, u'corrAns': u'y', u'ShapeStimulus': u'circlewhite.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'y', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'y', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'y', u'ShapeStimulus': u'squareyellow.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'y', u'ShapeStimulus': u'lineorange.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'y', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'y', u'ShapeStimulus': u'diamondgray.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u't', u'ShapeStimulus': u'crosscyan.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u't', u'ShapeStimulus': u'circlewhite.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u't', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u't', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u't', u'ShapeStimulus': u'squareyellow.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u't', u'ShapeStimulus': u'lineorange.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u't', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u't', u'ShapeStimulus': u'diamondgray.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 0.5, u'corrAns': u'h', u'ShapeStimulus': u'crosscyan.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 0.5, u'corrAns': u'h', u'ShapeStimulus': u'circlewhite.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'h', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'h', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'h', u'ShapeStimulus': u'squareyellow.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'h', u'ShapeStimulus': u'lineorange.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'h', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'h', u'ShapeStimulus': u'diamondgray.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u'g', u'ShapeStimulus': u'crosscyan.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u'g', u'ShapeStimulus': u'circlewhite.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u'g', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u'g', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u'g', u'ShapeStimulus': u'squareyellow.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u'g', u'ShapeStimulus': u'lineorange.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u'g', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u'g', u'ShapeStimulus': u'diamondgray.gif', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="practiceTrials"/>\u000a    <Routine name="instrMain"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="Trialtypes4New.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="4" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'Reward': 0.5, u'corrAns': u'y', u'ShapeStimulus': u'crosscyan.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 0.5, u'corrAns': u'y', u'ShapeStimulus': u'circlewhite.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'y', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'y', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'y', u'ShapeStimulus': u'squareyellow.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'y', u'ShapeStimulus': u'lineorange.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'y', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'y', u'ShapeStimulus': u'diamondgray.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u't', u'ShapeStimulus': u'crosscyan.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u't', u'ShapeStimulus': u'circlewhite.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u't', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u't', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u't', u'ShapeStimulus': u'squareyellow.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u't', u'ShapeStimulus': u'lineorange.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u't', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u't', u'ShapeStimulus': u'diamondgray.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 0.5, u'corrAns': u'h', u'ShapeStimulus': u'crosscyan.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 0.5, u'corrAns': u'h', u'ShapeStimulus': u'circlewhite.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'h', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'h', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'h', u'ShapeStimulus': u'squareyellow.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'h', u'ShapeStimulus': u'lineorange.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'h', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'h', u'ShapeStimulus': u'diamondgray.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u'g', u'ShapeStimulus': u'crosscyan.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u'g', u'ShapeStimulus': u'circlewhite.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u'g', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u'g', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u'g', u'ShapeStimulus': u'squareyellow.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u'g', u'ShapeStimulus': u'lineorange.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u'g', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u'g', u'ShapeStimulus': u'diamondgray.gif', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <LoopTerminator name="trials"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p42
sS'thisTrial'
p43
g1
(cpsychopy.data
TrialType
p44
c__builtin__
dict
p45
(dp46
VxPos
p47
I-200
sVcorrAns
p48
Vt
sVyPos
p49
I200
stRp50
sS'_exp'
p51
I232759856
sg11
S'trials'
p52
sg6
g7
sS'thisRepN'
p53
I1
sg20
I01
sg21
g22
sS'data'
p54
g1
(cpsychopy.data
DataHandler
p55
g45
(dp56
S'ran'
p57
cnumpy.ma.core
_mareconstruct
p58
(cnumpy.ma.core
MaskedArray
p59
cnumpy
ndarray
p60
(I0
tp61
S'b'
tRp62
(I1
(I4
I4
tg28
(S'f4'
I0
I1
tRp63
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg17
cnumpy.core.multiarray
_reconstruct
p64
(g60
(I0
tS'b'
tRp65
(I1
(I4
I4
tg28
(S'O4'
I0
I1
tRp66
(I3
S'|'
NNNI-1
I-1
I63
tbI00
(lp67
S'y'
aS'y'
aS'--'
p68
aS'--'
p69
aS't'
aS'--'
p70
aS'--'
p71
aS'--'
p72
aS'h'
aS'h'
aS'--'
p73
aS'--'
p74
aS'g'
aS't'
aS'--'
p75
aS'--'
p76
atbsg18
g58
(g59
g60
g61
S'b'
tRp77
(I1
(I4
I4
tg63
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x01\x01\x00\x01\x01\x01\x00\x00\x01\x01\x00\x00\x01\x01'
NtbsS'order'
p78
g58
(g59
g60
g61
S'b'
tRp79
(I1
(I4
I4
tg63
I00
S'\x00\x00\x80?\x00\x00\x80@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@\x00\x00\xe0@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@@\x00\x00\xc0@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa0@\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x01\x01\x00\x00\x01\x01\x00\x00\x01\x01\x00\x00\x01\x01'
Ntbsg19
g58
(g59
g60
g61
S'b'
tRp80
(I1
(I4
I4
tg63
I00
S'\xc0\xf1\xe6>\x80\xed\x99>\x00\x00\x00\x00\x00\x00\x00\x00\xd0\xe6\x88>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x98\xdc\x88>\xe8\x19\x9a>\x00\x00\x00\x00\x00\x00\x00\x00d\x96\x15?\x18\xda\x88>\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x01\x01\x00\x01\x01\x01\x00\x00\x01\x01\x00\x00\x01\x01'
NtbstRp81
(dp82
S'isNumeric'
p83
(dp84
g57
I01
sg17
I00
sg19
I01
sg78
I01
sg18
I01
ssg52
g39
sS'dataTypes'
p85
(lp86
g57
ag78
ag17
ag18
ag19
asS'dataShape'
p87
(lp88
I4
aI4
asbsS'method'
p89
S'random'
p90
sS'sequenceIndices'
p91
g64
(g60
(I0
tS'b'
tRp92
(I1
(I4
I4
tg28
(S'i4'
I0
I1
tRp93
(I3
S'<'
NNNI-1
I-1
I0
tbI01
S'\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00'
tbsS'finished'
p94
I00
sS'nReps'
p95
I4
sS'nRemaining'
p96
I8
sS'trialList'
p97
(lp98
g1
(g44
g45
(dp99
g47
I200
sg48
Vy
sg49
I200
stRp100
ag50
ag1
(g44
g45
(dp101
g47
I200
sg48
Vh
sg49
I-200
stRp102
ag1
(g44
g45
(dp103
g47
I-200
sg48
Vg
sg49
I-200
stRp104
asS'seed'
p105
NsS'thisIndex'
p106
g27
(g93
S'\x01\x00\x00\x00'
tRp107
sS'thisN'
p108
I7
sS'thisTrialN'
p109
I3
sS'nTotal'
p110
I16
sS'_warnUseOfNext'
p111
I01
sbasS'saveWideText'
p112
I01
sS'thisEntry'
p113
(dp114
sS'version'
p115
S''
sS'_paramNamesSoFar'
p116
(lp117
VxPos
p118
aVcorrAns
p119
aVyPos
p120
asS'entries'
p121
(lp122
(dp123
g31
I3
sg24
V
sg16
F0.43894600868225098
sg25
V
sg26
g30
sg23
g12
sg15
S'space'
p124
sg32
g33
sg34
g35
sa(dp125
g31
I3
sg17
S'h'
sg118
I200
sg24
V
sg18
I1
sg19
F0.41773605346679688
sg25
V
sS'practiceTrials.thisN'
p126
I0
sg120
I-200
sg26
g30
sg32
g33
sg23
g12
sS'practiceTrials.thisTrialN'
p127
I0
sS'practiceTrials.thisIndex'
p128
g27
(g93
S'\x02\x00\x00\x00'
tRp129
sS'practiceTrials.thisRepN'
p130
I0
sg34
g35
sg119
Vh
sa(dp131
g31
I3
sg17
S'g'
sg118
I-200
sg24
V
sg18
I1
sg19
F0.51786994934082031
sg25
V
sS'practiceTrials.thisN'
p132
I1
sg120
I-200
sg26
g30
sg32
g33
sg23
g12
sS'practiceTrials.thisTrialN'
p133
I1
sS'practiceTrials.thisIndex'
p134
g27
(g93
S'\x03\x00\x00\x00'
tRp135
sS'practiceTrials.thisRepN'
p136
I0
sg34
g35
sg119
Vg
sa(dp137
g31
I3
sg17
S'y'
sg118
I200
sg24
V
sg18
I1
sg19
F0.4181520938873291
sg25
V
sS'practiceTrials.thisN'
p138
I2
sg120
I200
sg26
g30
sg32
g33
sg23
g12
sS'practiceTrials.thisTrialN'
p139
I2
sS'practiceTrials.thisIndex'
p140
g27
(g93
S'\x00\x00\x00\x00'
tRp141
sS'practiceTrials.thisRepN'
p142
I0
sg34
g35
sg119
Vy
sa(dp143
g31
I3
sg17
S't'
sg118
I-200
sg24
V
sg18
I1
sg19
F0.46723604202270508
sg25
V
sS'practiceTrials.thisN'
p144
I3
sg120
I200
sg26
g30
sg32
g33
sg23
g12
sS'practiceTrials.thisTrialN'
p145
I3
sS'practiceTrials.thisIndex'
p146
g27
(g93
S'\x01\x00\x00\x00'
tRp147
sS'practiceTrials.thisRepN'
p148
I0
sg34
g35
sg119
Vt
sa(dp149
g31
I3
sg17
S'g'
sg47
I-200
sg24
V
sg18
I1
sg19
F0.58432602882385254
sg25
V
sg26
g30
sg49
I-200
sS'trials.thisN'
p150
I0
sg23
g12
sS'trials.thisTrialN'
p151
I0
sg48
Vg
sS'trials.thisRepN'
p152
I0
sg32
g33
sg34
g35
sS'trials.thisIndex'
p153
g27
(g93
S'\x03\x00\x00\x00'
tRp154
sa(dp155
g31
I3
sg17
S'y'
sg47
I200
sg24
V
sg18
I1
sg19
F0.45106315612792969
sg25
V
sg26
g30
sg49
I200
sS'trials.thisN'
p156
I1
sg23
g12
sS'trials.thisTrialN'
p157
I1
sg48
Vy
sS'trials.thisRepN'
p158
I0
sg32
g33
sg34
g35
sS'trials.thisIndex'
p159
g27
(g93
S'\x00\x00\x00\x00'
tRp160
sa(dp161
g31
I3
sg17
S't'
sg47
I-200
sg24
V
sg18
I1
sg19
F0.26738595962524414
sg25
V
sg26
g30
sg49
I200
sS'trials.thisN'
p162
I2
sg23
g12
sS'trials.thisTrialN'
p163
I2
sg48
Vt
sS'trials.thisRepN'
p164
I0
sg32
g33
sg34
g35
sS'trials.thisIndex'
p165
g27
(g93
S'\x01\x00\x00\x00'
tRp166
sa(dp167
g31
I3
sg17
S'h'
sg47
I200
sg24
V
sg18
I1
sg19
F0.26730799674987793
sg25
V
sg26
g30
sg49
I-200
sS'trials.thisN'
p168
I3
sg23
g12
sS'trials.thisTrialN'
p169
I3
sg48
Vh
sS'trials.thisRepN'
p170
I0
sg32
g33
sg34
g35
sS'trials.thisIndex'
p171
g27
(g93
S'\x02\x00\x00\x00'
tRp172
sa(dp173
g31
I3
sg17
S'y'
sg47
I200
sg24
V
sg18
I1
sg19
F0.30064010620117188
sg25
V
sg26
g30
sg49
I200
sS'trials.thisN'
p174
I4
sg23
g12
sS'trials.thisTrialN'
p175
I0
sg48
Vy
sS'trials.thisRepN'
p176
I1
sg32
g33
sg34
g35
sS'trials.thisIndex'
p177
g27
(g93
S'\x00\x00\x00\x00'
tRp178
sa(dp179
g31
I3
sg17
S't'
sg47
I-200
sg24
V
sg18
I0
sg19
F0.2672889232635498
sg25
V
sg26
g30
sg49
I-200
sS'trials.thisN'
p180
I5
sg23
g12
sS'trials.thisTrialN'
p181
I1
sg48
Vg
sS'trials.thisRepN'
p182
I1
sg32
g33
sg34
g35
sS'trials.thisIndex'
p183
g27
(g93
S'\x03\x00\x00\x00'
tRp184
sa(dp185
g31
I3
sg17
S'h'
sg47
I200
sg24
V
sg18
I1
sg19
F0.3009788990020752
sg25
V
sg26
g30
sg49
I-200
sS'trials.thisN'
p186
I6
sg23
g12
sS'trials.thisTrialN'
p187
I2
sg48
Vh
sS'trials.thisRepN'
p188
I1
sg32
g33
sg34
g35
sS'trials.thisIndex'
p189
g27
(g93
S'\x02\x00\x00\x00'
tRp190
sasS'loops'
p191
(lp192
g1
(g38
g3
NtRp193
(dp194
g41
V<PsychoPy2experiment version="1.81.03" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="OK, ready to start the main experiment?&#10;&#10;Remember, press;&#10; - 'S' if the SMALL letters are S&#10; - 'H' if the SMALL letters are H&#10;&#10;Try to respond as quickly and as accurately as possible.&#10;&#10;When you are ready to proceed press any key." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial">\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'t', 'y', 'g', 'h'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$ShapeStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[101, 101]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="StimSetup">\u000a      <CodeComponent name="code">\u000a        <Param name="Begin Experiment" val="colors = ['yellow', 'white', 'orange', 'magenta', 'green', 'gray', 'cyan', 'blue']&#10;shapes = ['triangle', 'square', 'line', 'invertedtriangle', 'hexagon', 'diamond', 'cross', 'circle']&#10;rewards = [0.5, 1, 2, 4] * 2&#10;conditions = ['go', 'go', 'go', 'go', 'stop', 'stop', 'stop', 'stop']&#10;trialDetailsList = []&#10;&#10;shuffle(colors)&#10;shuffle(shapes)&#10;&#10;for i, color in enumerate(colors): # cycle through each color and keep track of an index number&#10;    trialDetails = {} # a dictionary of key-value pairs&#10;    trialDetails['fileName'] = shapes[i] + color + '.gif'&#10;    trialDetails['reward'] = rewards[i]&#10;    trialDetails['condition'] = conditions[i]&#10;    trialDetailsList.append(trialDetails)&#10;&#10;shuffle(trialDetailsList) # do this now to ensure that order of presentation of rewards and conditions is also shuffled&#10;&#10;ConditionOne = trialDetailsList[0]&#10;ConditionTwo = trialDetailsList[1]&#10;ConditionThree = trialDetailsList[2]&#10;ConditionFour = trialDetailsList[3]&#10;ConditionFive = trialDetailsList[4]&#10;ConditionSix = trialDetailsList[5]&#10;ConditionSeven = trialDetailsList[6]&#10;ConditionEight = trialDetailsList[7]" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.07" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;msg=['Reward']" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="if resp.corr:#stored on last run routine&#10;  msg=&quot;Correct! RT=%.3f&quot; %(resp.rt)&#10;else:&#10;  msg=&quot;Oops! That was wrong&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="StimSetup"/>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practiceTrials">\u000a      <Param name="conditionsFile" val="Trialtypes4New.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practiceTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'Reward': 0.5, u'corrAns': u'y', u'ShapeStimulus': u'crosscyan.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 0.5, u'corrAns': u'y', u'ShapeStimulus': u'circlewhite.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'y', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'y', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'y', u'ShapeStimulus': u'squareyellow.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'y', u'ShapeStimulus': u'lineorange.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'y', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'y', u'ShapeStimulus': u'diamondgray.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u't', u'ShapeStimulus': u'crosscyan.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u't', u'ShapeStimulus': u'circlewhite.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u't', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u't', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u't', u'ShapeStimulus': u'squareyellow.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u't', u'ShapeStimulus': u'lineorange.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u't', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u't', u'ShapeStimulus': u'diamondgray.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 0.5, u'corrAns': u'h', u'ShapeStimulus': u'crosscyan.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 0.5, u'corrAns': u'h', u'ShapeStimulus': u'circlewhite.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'h', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'h', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'h', u'ShapeStimulus': u'squareyellow.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'h', u'ShapeStimulus': u'lineorange.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'h', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'h', u'ShapeStimulus': u'diamondgray.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u'g', u'ShapeStimulus': u'crosscyan.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u'g', u'ShapeStimulus': u'circlewhite.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u'g', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u'g', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u'g', u'ShapeStimulus': u'squareyellow.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u'g', u'ShapeStimulus': u'lineorange.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u'g', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u'g', u'ShapeStimulus': u'diamondgray.gif', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="practiceTrials"/>\u000a    <Routine name="instrMain"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="Trialtypes4New.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="4" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'Reward': 0.5, u'corrAns': u'y', u'ShapeStimulus': u'crosscyan.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 0.5, u'corrAns': u'y', u'ShapeStimulus': u'circlewhite.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'y', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'y', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'y', u'ShapeStimulus': u'squareyellow.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'y', u'ShapeStimulus': u'lineorange.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'y', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'y', u'ShapeStimulus': u'diamondgray.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u't', u'ShapeStimulus': u'crosscyan.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u't', u'ShapeStimulus': u'circlewhite.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u't', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u't', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u't', u'ShapeStimulus': u'squareyellow.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u't', u'ShapeStimulus': u'lineorange.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u't', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u't', u'ShapeStimulus': u'diamondgray.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 0.5, u'corrAns': u'h', u'ShapeStimulus': u'crosscyan.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 0.5, u'corrAns': u'h', u'ShapeStimulus': u'circlewhite.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'h', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'h', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'h', u'ShapeStimulus': u'squareyellow.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'h', u'ShapeStimulus': u'lineorange.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'h', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'h', u'ShapeStimulus': u'diamondgray.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u'g', u'ShapeStimulus': u'crosscyan.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u'g', u'ShapeStimulus': u'circlewhite.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u'g', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u'g', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u'g', u'ShapeStimulus': u'squareyellow.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u'g', u'ShapeStimulus': u'lineorange.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u'g', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u'g', u'ShapeStimulus': u'diamondgray.gif', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <LoopTerminator name="trials"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p195
sg43
(lp196
sg51
I232759856
sg11
S'practiceTrials'
p197
sg6
g7
sg53
I1
sg20
I01
sg21
g22
sg54
g1
(g55
g45
(dp198
g57
g58
(g59
g60
g61
S'b'
tRp199
(I1
(I4
I1
tg63
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00'
Ntbsg17
g64
(g60
(I0
tS'b'
tRp200
(I1
(I4
I1
tg66
I00
(lp201
S'y'
aS't'
aS'h'
aS'g'
atbsg18
g58
(g59
g60
g61
S'b'
tRp202
(I1
(I4
I1
tg63
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00'
Ntbsg78
g58
(g59
g60
g61
S'b'
tRp203
(I1
(I4
I1
tg63
I00
S'\x00\x00\x00@\x00\x00@@\x00\x00\x00\x00\x00\x00\x80?'
S'\x00\x00\x00\x00'
Ntbsg19
g58
(g59
g60
g61
S'b'
tRp204
(I1
(I4
I1
tg63
I00
S'\x08\x18\xd6>\x909\xef>\x80\xe1\xd5> \x93\x04?'
S'\x00\x00\x00\x00'
NtbstRp205
(dp206
g83
(dp207
g57
I01
sg17
I00
sg19
I01
sg78
I01
sg18
I01
ssg52
g193
sg85
(lp208
g57
ag78
ag17
ag18
ag19
asg87
(lp209
I4
aI1
asbsg89
g90
sg91
g64
(g60
(I0
tS'b'
tRp210
(I1
(I4
I1
tg93
I01
S'\x02\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00'
tbsg94
I01
sg95
I1
sg96
I-1
sg97
(lp211
g1
(g44
g45
(dp212
g118
I200
sg119
Vy
sg120
I200
stRp213
ag1
(g44
g45
(dp214
g118
I-200
sg119
Vt
sg120
I200
stRp215
ag1
(g44
g45
(dp216
g118
I200
sg119
Vh
sg120
I-200
stRp217
ag1
(g44
g45
(dp218
g118
I-200
sg119
Vg
sg120
I-200
stRp219
asg105
Nsg106
g147
sg108
I4
sg109
I0
sg110
I4
sg111
I01
sbag39
asS'savePickle'
p220
I01
sb.