ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
V/Users/patrickbissett/OneDrive/Poldrack/TrainedInhibition/PsychoPy/IntegratingDifferentCodeFlexibleStim4.psyexp
p7
sS'dataFileName'
p8
V/Users/patrickbissett/OneDrive/Poldrack/TrainedInhibition/PsychoPy/data/557_2015_Mar_18_1201
p9
sS'runtimeInfo'
p10
NsS'name'
p11
S'LearningTask'
p12
sS'dataNames'
p13
(lp14
S'ok1.keys'
p15
aS'ok1.rt'
p16
aS'resp.keys'
p17
aS'resp.corr'
p18
aS'resp.rt'
p19
asS'autoLog'
p20
I01
sS'extraInfo'
p21
(dp22
S'expName'
p23
g12
sS'gender (m/f)'
p24
V
sS'age'
p25
V
sS'frameRate'
p26
cnumpy.core.multiarray
scalar
p27
(cnumpy
dtype
p28
(S'f8'
I0
I1
tRp29
(I3
S'<'
NNNI-1
I-1
I0
tbS'\xf4{>\xab\xc5\xf9M@'
tRp30
sS'session'
p31
I3
sS'date'
p32
V2015_Mar_18_1201
p33
sS'participant'
p34
V557
p35
ssS'loopsUnfinished'
p36
(lp37
g1
(cpsychopy.data
TrialHandler
p38
g3
NtRp39
(dp40
S'origin'
p41
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="code_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="import random&#10;&#10;Integers = [1, 2, 3, 4, 5, 6, 7, 8]&#10;&#10;ConditionChoice = random.choice(Integers)&#10;&#10;if ConditionChoice == 1:&#10;    CurrentStimulus = ConditionOne['fileName']&#10;elif ConditionChoice == 2:&#10;    CurrentStimulus = ConditionTwo['fileName']&#10;elif ConditionChoice == 3:&#10;    CurrentStimulus = ConditionThree['fileName']&#10;elif ConditionChoice == 4:&#10;    CurrentStimulus = ConditionFour['fileName']&#10;elif ConditionChoice == 5:&#10;    CurrentStimulus = ConditionFive['fileName']&#10;elif ConditionChoice == 6:&#10;    CurrentStimulus = ConditionSix['fileName']&#10;elif ConditionChoice == 7:&#10;    CurrentStimulus = ConditionSeven['fileName']&#10;elif ConditionChoice == 8:&#10;    CurrentStimulus = ConditionEight['fileName']" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'t', 'y', 'g', 'h'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$CurrentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[101, 101]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="StimSetup">\u000a      <CodeComponent name="code">\u000a        <Param name="Begin Experiment" val="import random&#10;&#10;colors = ['yellow', 'white', 'orange', 'magenta', 'green', 'gray', 'cyan', 'blue']&#10;shapes = ['triangle', 'square', 'line', 'invertedtriangle', 'hexagon', 'diamond', 'cross', 'circle']&#10;rewards = [0.5, 1, 2, 4] * 2&#10;conditions = ['go', 'go', 'go', 'go', 'stop', 'stop', 'stop', 'stop']&#10;trialDetailsList = []&#10;&#10;shuffle(colors)&#10;shuffle(shapes)&#10;&#10;for i, color in enumerate(colors): # cycle through each color and keep track of an index number&#10;    trialDetails = {} # a dictionary of key-value pairs&#10;    trialDetails['fileName'] = shapes[i] + color + '.gif'&#10;    trialDetails['reward'] = rewards[i]&#10;    trialDetails['condition'] = conditions[i]&#10;    trialDetailsList.append(trialDetails)&#10;&#10;shuffle(trialDetailsList) # do this now to ensure that order of presentation of rewards and conditions is also shuffled&#10;&#10;ConditionOne = trialDetailsList[0]&#10;ConditionTwo = trialDetailsList[1]&#10;ConditionThree = trialDetailsList[2]&#10;ConditionFour = trialDetailsList[3]&#10;ConditionFive = trialDetailsList[4]&#10;ConditionSix = trialDetailsList[5]&#10;ConditionSeven = trialDetailsList[6]&#10;ConditionEight = trialDetailsList[7]" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="OK, ready to start the main experiment?&#10;&#10;Remember, press;&#10; - 'S' if the SMALL letters are S&#10; - 'H' if the SMALL letters are H&#10;&#10;Try to respond as quickly and as accurately as possible.&#10;&#10;When you are ready to proceed press any key." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#message variable just needs some value at start&#10;message=0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="#if resp.corr:#stored on last run routine&#10;#  msg=&quot;Correct! RT=%.3f&quot; %(resp.rt)&#10;#else:&#10;#  msg=&quot;Oops! That was wrong&quot;&#10;&#10;if ConditionChoice == 1:&#10;    CurrentReward = ConditionOne['reward']&#10;elif ConditionChoice == 2:&#10;    CurrentReward = ConditionTwo['reward']&#10;elif ConditionChoice == 3:&#10;    CurrentReward = ConditionThree['reward']&#10;elif ConditionChoice == 4:&#10;    CurrentReward = ConditionFour['reward']&#10;elif ConditionChoice == 5:&#10;    CurrentReward = ConditionFive['reward']&#10;elif ConditionChoice == 6:&#10;    CurrentReward = ConditionSix['reward']&#10;elif ConditionChoice == 7:&#10;    CurrentReward = ConditionSeven['reward']&#10;elif ConditionChoice == 8:&#10;    CurrentReward = ConditionEight['reward']&#10;&#10;message = CurrentReward" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.07" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="StimSetup"/>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practiceTrials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practiceTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="practiceTrials"/>\u000a    <Routine name="instrMain"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="10" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="trials"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p42
sS'thisTrial'
p43
g1
(cpsychopy.data
TrialType
p44
c__builtin__
dict
p45
(dp46
VxPos
p47
I-200
sVcorrAns
p48
Vg
sVyPos
p49
I-200
stRp50
sS'_exp'
p51
I227480624
sg11
S'trials'
p52
sg6
g7
sS'thisRepN'
p53
I6
sg20
I01
sg21
g22
sS'data'
p54
g1
(cpsychopy.data
DataHandler
p55
g45
(dp56
S'ran'
p57
cnumpy.ma.core
_mareconstruct
p58
(cnumpy.ma.core
MaskedArray
p59
cnumpy
ndarray
p60
(I0
tp61
S'b'
tRp62
(I1
(I4
I10
tg28
(S'f4'
I0
I1
tRp63
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg17
cnumpy.core.multiarray
_reconstruct
p64
(g60
(I0
tS'b'
tRp65
(I1
(I4
I10
tg28
(S'O4'
I0
I1
tRp66
(I3
S'|'
NNNI-1
I-1
I63
tbI00
(lp67
S'y'
aS'y'
aS'y'
aS'y'
aS'y'
aS'h'
aS'y'
aS'--'
p68
aS'--'
p69
aS'--'
p70
aS't'
aS't'
aS't'
aS't'
aS't'
aS't'
aS't'
aS'--'
p71
aS'--'
p72
aS'--'
p73
aS'h'
aS'h'
aS'h'
aS'h'
aS'h'
aS'h'
aS'h'
aS'--'
p74
aS'--'
p75
aS'--'
p76
aS'g'
aNaS'g'
aS'g'
aS'g'
aS'g'
aS'--'
p77
aS'--'
p78
aS'--'
p79
aS'--'
p80
atbsg18
g58
(g59
g60
g61
S'b'
tRp81
(I1
(I4
I10
tg63
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x01\x01\x01\x00\x00\x00\x00\x00\x00\x01\x01\x01\x01'
NtbsS'order'
p82
g58
(g59
g60
g61
S'b'
tRp83
(I1
(I4
I10
tg63
I00
S'\x00\x00@@\x00\x00\x80@\x00\x00\x10A\x00\x00PA\x00\x00\x90A\x00\x00\xa0A\x00\x00\xd0A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\xc0@\x00\x00 A\x00\x00pA\x00\x00\x98A\x00\x00\xb0A\x00\x00\xc0A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@\x00\x00\xe0@\x00\x000A\x00\x00@A\x00\x00\x88A\x00\x00\xa8A\x00\x00\xc8A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa0@\x00\x00\x00A\x00\x00`A\x00\x00\x80A\x00\x00\xb8A\x00\x00\xd8A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x01\x01\x01'
Ntbsg19
g58
(g59
g60
g61
S'b'
tRp84
(I1
(I4
I10
tg63
I00
S'\x80\xf1\xd5> F\xef>@j\xbc>\xac(\r?8\xaf\xa2>\x98\x18\xab>\xa0\xb3\xc4>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@\xa6\xd5>|f\x11?P\xa6\x91>\xc8\x88\x04?(S\xcd>h\x13\xf8>\xd0l\xef>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00`\xe9\xc4>\x00/\xab>8\xfc\xd5>L\xbb\x08?\x00"\xde>\xa0\xbe\xc4>\x10\x0c\xf8>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00X\x1a\xf8>\x00\x00\x00\x00\xa8:\xab>\x84\x1b\r?P?\x00?\x80k\xde>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x01\x01\x01\x00\x01\x00\x00\x00\x00\x01\x01\x01\x01'
NtbstRp85
(dp86
S'isNumeric'
p87
(dp88
g57
I01
sg17
I00
sg19
I01
sg82
I01
sg18
I01
ssg52
g39
sS'dataTypes'
p89
(lp90
g57
ag82
ag17
ag18
ag19
asS'dataShape'
p91
(lp92
I4
aI10
asbsS'method'
p93
S'random'
p94
sS'sequenceIndices'
p95
g64
(g60
(I0
tS'b'
tRp96
(I1
(I4
I10
tg28
(S'i4'
I0
I1
tRp97
(I3
S'<'
NNNI-1
I-1
I0
tbI01
S'\x03\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00'
tbsS'finished'
p98
I00
sS'nReps'
p99
I10
sS'nRemaining'
p100
I12
sS'trialList'
p101
(lp102
g1
(g44
g45
(dp103
g47
I200
sg48
Vy
sg49
I200
stRp104
ag1
(g44
g45
(dp105
g47
I-200
sg48
Vt
sg49
I200
stRp106
ag1
(g44
g45
(dp107
g47
I200
sg48
Vh
sg49
I-200
stRp108
ag50
asS'seed'
p109
NsS'thisIndex'
p110
g27
(g97
S'\x03\x00\x00\x00'
tRp111
sS'thisN'
p112
I27
sS'thisTrialN'
p113
I3
sS'nTotal'
p114
I40
sS'_warnUseOfNext'
p115
I01
sbasS'saveWideText'
p116
I01
sS'thisEntry'
p117
(dp118
sS'version'
p119
S''
sS'_paramNamesSoFar'
p120
(lp121
VxPos
p122
aVcorrAns
p123
aVyPos
p124
asS'entries'
p125
(lp126
(dp127
g31
I3
sg24
V
sg16
F1.0758991241455078
sg25
V
sg26
g30
sg23
g12
sg15
S'space'
p128
sg32
g33
sg34
g35
sa(dp129
g31
I3
sg17
S'h'
sg122
I200
sg24
V
sg18
I1
sg19
F0.4846341609954834
sg25
V
sS'practiceTrials.thisN'
p130
I0
sg124
I-200
sg26
g30
sg32
g33
sg23
g12
sS'practiceTrials.thisTrialN'
p131
I0
sS'practiceTrials.thisIndex'
p132
g27
(g97
S'\x02\x00\x00\x00'
tRp133
sS'practiceTrials.thisRepN'
p134
I0
sg34
g35
sg123
Vh
sa(dp135
g31
I3
sg17
S'g'
sg122
I-200
sg24
V
sg18
I1
sg19
F0.46723604202270508
sg25
V
sS'practiceTrials.thisN'
p136
I1
sg124
I-200
sg26
g30
sg32
g33
sg23
g12
sS'practiceTrials.thisTrialN'
p137
I1
sS'practiceTrials.thisIndex'
p138
g27
(g97
S'\x03\x00\x00\x00'
tRp139
sS'practiceTrials.thisRepN'
p140
I0
sg34
g35
sg123
Vg
sa(dp141
g31
I3
sg17
S't'
sg122
I-200
sg24
V
sg18
I1
sg19
F0.35109210014343262
sg25
V
sS'practiceTrials.thisN'
p142
I2
sg124
I200
sg26
g30
sg32
g33
sg23
g12
sS'practiceTrials.thisTrialN'
p143
I2
sS'practiceTrials.thisIndex'
p144
g27
(g97
S'\x01\x00\x00\x00'
tRp145
sS'practiceTrials.thisRepN'
p146
I0
sg34
g35
sg123
Vt
sa(dp147
g31
I3
sg17
S'y'
sg122
I200
sg24
V
sg18
I1
sg19
F0.43431401252746582
sg25
V
sS'practiceTrials.thisN'
p148
I3
sg124
I200
sg26
g30
sg32
g33
sg23
g12
sS'practiceTrials.thisTrialN'
p149
I3
sS'practiceTrials.thisIndex'
p150
g27
(g97
S'\x00\x00\x00\x00'
tRp151
sS'practiceTrials.thisRepN'
p152
I0
sg34
g35
sg123
Vy
sa(dp153
g31
I3
sg17
S'g'
sg47
I-200
sg24
V
sg18
I1
sg19
F0.48457598686218262
sg25
V
sg26
g30
sg49
I-200
sS'trials.thisN'
p154
I0
sg23
g12
sS'trials.thisTrialN'
p155
I0
sg48
Vg
sS'trials.thisRepN'
p156
I0
sg32
g33
sg34
g35
sS'trials.thisIndex'
p157
g27
(g97
S'\x03\x00\x00\x00'
tRp158
sa(dp159
g31
I3
sg17
S't'
sg47
I-200
sg24
V
sg18
I1
sg19
F0.41728401184082031
sg25
V
sg26
g30
sg49
I200
sS'trials.thisN'
p160
I1
sg23
g12
sS'trials.thisTrialN'
p161
I1
sg48
Vt
sS'trials.thisRepN'
p162
I0
sg32
g33
sg34
g35
sS'trials.thisIndex'
p163
g27
(g97
S'\x01\x00\x00\x00'
tRp164
sa(dp165
g31
I3
sg17
S'h'
sg47
I200
sg24
V
sg18
I1
sg19
F0.38459300994873047
sg25
V
sg26
g30
sg49
I-200
sS'trials.thisN'
p166
I2
sg23
g12
sS'trials.thisTrialN'
p167
I2
sg48
Vh
sS'trials.thisRepN'
p168
I0
sg32
g33
sg34
g35
sS'trials.thisIndex'
p169
g27
(g97
S'\x02\x00\x00\x00'
tRp170
sa(dp171
g31
I3
sg17
S'y'
sg47
I200
sg24
V
sg18
I1
sg19
F0.41785812377929688
sg25
V
sg26
g30
sg49
I200
sS'trials.thisN'
p172
I3
sg23
g12
sS'trials.thisTrialN'
p173
I3
sg48
Vy
sS'trials.thisRepN'
p174
I0
sg32
g33
sg34
g35
sS'trials.thisIndex'
p175
g27
(g97
S'\x00\x00\x00\x00'
tRp176
sa(dp177
g31
I3
sg17
S'y'
sg47
I200
sg24
V
sg18
I1
sg19
F0.46733188629150391
sg25
V
sg26
g30
sg49
I200
sS'trials.thisN'
p178
I4
sg23
g12
sS'trials.thisTrialN'
p179
I0
sg48
Vy
sS'trials.thisRepN'
p180
I1
sg32
g33
sg34
g35
sS'trials.thisIndex'
p181
g27
(g97
S'\x00\x00\x00\x00'
tRp182
sa(dp183
g31
I3
sS'trials.thisIndex'
p184
g27
(g97
S'\x03\x00\x00\x00'
tRp185
sg47
I-200
sg24
V
sg17
NsS'trials.thisRepN'
p186
I1
sg25
V
sg18
I0
sg26
g30
sg49
I-200
sS'trials.thisN'
p187
I5
sg23
g12
sS'trials.thisTrialN'
p188
I1
sg48
Vg
sg32
g33
sg34
g35
sa(dp189
g31
I3
sg17
S't'
sg47
I-200
sg24
V
sg18
I1
sg19
F0.56797003746032715
sg25
V
sg26
g30
sg49
I200
sS'trials.thisN'
p190
I6
sg23
g12
sS'trials.thisTrialN'
p191
I2
sg48
Vt
sS'trials.thisRepN'
p192
I1
sg32
g33
sg34
g35
sS'trials.thisIndex'
p193
g27
(g97
S'\x01\x00\x00\x00'
tRp194
sa(dp195
g31
I3
sg17
S'h'
sg47
I200
sg24
V
sg18
I1
sg19
F0.33434295654296875
sg25
V
sg26
g30
sg49
I-200
sS'trials.thisN'
p196
I7
sg23
g12
sS'trials.thisTrialN'
p197
I3
sg48
Vh
sS'trials.thisRepN'
p198
I1
sg32
g33
sg34
g35
sS'trials.thisIndex'
p199
g27
(g97
S'\x02\x00\x00\x00'
tRp200
sa(dp201
g31
I3
sg17
S'g'
sg47
I-200
sg24
V
sg18
I1
sg19
F0.33443188667297363
sg25
V
sg26
g30
sg49
I-200
sS'trials.thisN'
p202
I8
sg23
g12
sS'trials.thisTrialN'
p203
I0
sg48
Vg
sS'trials.thisRepN'
p204
I2
sg32
g33
sg34
g35
sS'trials.thisIndex'
p205
g27
(g97
S'\x03\x00\x00\x00'
tRp206
sa(dp207
g31
I3
sg17
S'y'
sg47
I200
sg24
V
sg18
I1
sg19
F0.36799812316894531
sg25
V
sg26
g30
sg49
I200
sS'trials.thisN'
p208
I9
sg23
g12
sS'trials.thisTrialN'
p209
I1
sg48
Vy
sS'trials.thisRepN'
p210
I2
sg32
g33
sg34
g35
sS'trials.thisIndex'
p211
g27
(g97
S'\x00\x00\x00\x00'
tRp212
sa(dp213
g31
I3
sg17
S't'
sg47
I-200
sg24
V
sg18
I1
sg19
F0.28447198867797852
sg25
V
sg26
g30
sg49
I200
sS'trials.thisN'
p214
I10
sg23
g12
sS'trials.thisTrialN'
p215
I2
sg48
Vt
sS'trials.thisRepN'
p216
I2
sg32
g33
sg34
g35
sS'trials.thisIndex'
p217
g27
(g97
S'\x01\x00\x00\x00'
tRp218
sa(dp219
g31
I3
sg17
S'h'
sg47
I200
sg24
V
sg18
I1
sg19
F0.41793990135192871
sg25
V
sg26
g30
sg49
I-200
sS'trials.thisN'
p220
I11
sg23
g12
sS'trials.thisTrialN'
p221
I3
sg48
Vh
sS'trials.thisRepN'
p222
I2
sg32
g33
sg34
g35
sS'trials.thisIndex'
p223
g27
(g97
S'\x02\x00\x00\x00'
tRp224
sa(dp225
g31
I3
sg17
S'h'
sg47
I200
sg24
V
sg18
I1
sg19
F0.53410792350769043
sg25
V
sg26
g30
sg49
I-200
sS'trials.thisN'
p226
I12
sg23
g12
sS'trials.thisTrialN'
p227
I0
sg48
Vh
sS'trials.thisRepN'
p228
I3
sg32
g33
sg34
g35
sS'trials.thisIndex'
p229
g27
(g97
S'\x02\x00\x00\x00'
tRp230
sa(dp231
g31
I3
sg17
S'y'
sg47
I200
sg24
V
sg18
I1
sg19
F0.55140185356140137
sg25
V
sg26
g30
sg49
I200
sS'trials.thisN'
p232
I13
sg23
g12
sS'trials.thisTrialN'
p233
I1
sg48
Vy
sS'trials.thisRepN'
p234
I3
sg32
g33
sg34
g35
sS'trials.thisIndex'
p235
g27
(g97
S'\x00\x00\x00\x00'
tRp236
sa(dp237
g31
I3
sg17
S'g'
sg47
I-200
sg24
V
sg18
I1
sg19
F0.55120110511779785
sg25
V
sg26
g30
sg49
I-200
sS'trials.thisN'
p238
I14
sg23
g12
sS'trials.thisTrialN'
p239
I2
sg48
Vg
sS'trials.thisRepN'
p240
I3
sg32
g33
sg34
g35
sS'trials.thisIndex'
p241
g27
(g97
S'\x03\x00\x00\x00'
tRp242
sa(dp243
g31
I3
sg17
S't'
sg47
I-200
sg24
V
sg18
I1
sg19
F0.51771211624145508
sg25
V
sg26
g30
sg49
I200
sS'trials.thisN'
p244
I15
sg23
g12
sS'trials.thisTrialN'
p245
I3
sg48
Vt
sS'trials.thisRepN'
p246
I3
sg32
g33
sg34
g35
sS'trials.thisIndex'
p247
g27
(g97
S'\x01\x00\x00\x00'
tRp248
sa(dp249
g31
I3
sg17
S'g'
sg47
I-200
sg24
V
sg18
I1
sg19
F0.50096607208251953
sg25
V
sg26
g30
sg49
I-200
sS'trials.thisN'
p250
I16
sg23
g12
sS'trials.thisTrialN'
p251
I0
sg48
Vg
sS'trials.thisRepN'
p252
I4
sg32
g33
sg34
g35
sS'trials.thisIndex'
p253
g27
(g97
S'\x03\x00\x00\x00'
tRp254
sa(dp255
g31
I3
sg17
S'h'
sg47
I200
sg24
V
sg18
I1
sg19
F0.4338531494140625
sg25
V
sg26
g30
sg49
I-200
sS'trials.thisN'
p256
I17
sg23
g12
sS'trials.thisTrialN'
p257
I1
sg48
Vh
sS'trials.thisRepN'
p258
I4
sg32
g33
sg34
g35
sS'trials.thisIndex'
p259
g27
(g97
S'\x02\x00\x00\x00'
tRp260
sa(dp261
g31
I3
sg17
S'y'
sg47
I200
sg24
V
sg18
I1
sg19
F0.31774306297302246
sg25
V
sg26
g30
sg49
I200
sS'trials.thisN'
p262
I18
sg23
g12
sS'trials.thisTrialN'
p263
I2
sg48
Vy
sS'trials.thisRepN'
p264
I4
sg32
g33
sg34
g35
sS'trials.thisIndex'
p265
g27
(g97
S'\x00\x00\x00\x00'
tRp266
sa(dp267
g31
I3
sg17
S't'
sg47
I-200
sg24
V
sg18
I1
sg19
F0.40102505683898926
sg25
V
sg26
g30
sg49
I200
sS'trials.thisN'
p268
I19
sg23
g12
sS'trials.thisTrialN'
p269
I3
sg48
Vt
sS'trials.thisRepN'
p270
I4
sg32
g33
sg34
g35
sS'trials.thisIndex'
p271
g27
(g97
S'\x01\x00\x00\x00'
tRp272
sa(dp273
g31
I3
sg17
S'h'
sg47
I200
sg24
V
sg18
I0
sg19
F0.33417201042175293
sg25
V
sg26
g30
sg49
I200
sS'trials.thisN'
p274
I20
sg23
g12
sS'trials.thisTrialN'
p275
I0
sg48
Vy
sS'trials.thisRepN'
p276
I5
sg32
g33
sg34
g35
sS'trials.thisIndex'
p277
g27
(g97
S'\x00\x00\x00\x00'
tRp278
sa(dp279
g31
I3
sg17
S'h'
sg47
I200
sg24
V
sg18
I1
sg19
F0.38426685333251953
sg25
V
sg26
g30
sg49
I-200
sS'trials.thisN'
p280
I21
sg23
g12
sS'trials.thisTrialN'
p281
I1
sg48
Vh
sS'trials.thisRepN'
p282
I5
sg32
g33
sg34
g35
sS'trials.thisIndex'
p283
g27
(g97
S'\x02\x00\x00\x00'
tRp284
sa(dp285
g31
I3
sg17
S't'
sg47
I-200
sg24
V
sg18
I1
sg19
F0.48452305793762207
sg25
V
sg26
g30
sg49
I200
sS'trials.thisN'
p286
I22
sg23
g12
sS'trials.thisTrialN'
p287
I2
sg48
Vt
sS'trials.thisRepN'
p288
I5
sg32
g33
sg34
g35
sS'trials.thisIndex'
p289
g27
(g97
S'\x01\x00\x00\x00'
tRp290
sa(dp291
g31
I3
sg17
S'g'
sg47
I-200
sg24
V
sg18
I1
sg19
F0.43441390991210938
sg25
V
sg26
g30
sg49
I-200
sS'trials.thisN'
p292
I23
sg23
g12
sS'trials.thisTrialN'
p293
I3
sg48
Vg
sS'trials.thisRepN'
p294
I5
sg32
g33
sg34
g35
sS'trials.thisIndex'
p295
g27
(g97
S'\x03\x00\x00\x00'
tRp296
sa(dp297
g31
I3
sg17
S't'
sg47
I-200
sg24
V
sg18
I1
sg19
F0.46762704849243164
sg25
V
sg26
g30
sg49
I200
sS'trials.thisN'
p298
I24
sg23
g12
sS'trials.thisTrialN'
p299
I0
sg48
Vt
sS'trials.thisRepN'
p300
I6
sg32
g33
sg34
g35
sS'trials.thisIndex'
p301
g27
(g97
S'\x01\x00\x00\x00'
tRp302
sa(dp303
g31
I3
sg17
S'h'
sg47
I200
sg24
V
sg18
I1
sg19
F0.4844670295715332
sg25
V
sg26
g30
sg49
I-200
sS'trials.thisN'
p304
I25
sg23
g12
sS'trials.thisTrialN'
p305
I1
sg48
Vh
sS'trials.thisRepN'
p306
I6
sg32
g33
sg34
g35
sS'trials.thisIndex'
p307
g27
(g97
S'\x02\x00\x00\x00'
tRp308
sa(dp309
g31
I3
sg17
S'y'
sg47
I200
sg24
V
sg18
I1
sg19
F0.38418292999267578
sg25
V
sg26
g30
sg49
I200
sS'trials.thisN'
p310
I26
sg23
g12
sS'trials.thisTrialN'
p311
I2
sg48
Vy
sS'trials.thisRepN'
p312
I6
sg32
g33
sg34
g35
sS'trials.thisIndex'
p313
g27
(g97
S'\x00\x00\x00\x00'
tRp314
sasS'loops'
p315
(lp316
g1
(g38
g3
NtRp317
(dp318
g41
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="code_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="import random&#10;&#10;Integers = [1, 2, 3, 4, 5, 6, 7, 8]&#10;&#10;ConditionChoice = random.choice(Integers)&#10;&#10;if ConditionChoice == 1:&#10;    CurrentStimulus = ConditionOne['fileName']&#10;elif ConditionChoice == 2:&#10;    CurrentStimulus = ConditionTwo['fileName']&#10;elif ConditionChoice == 3:&#10;    CurrentStimulus = ConditionThree['fileName']&#10;elif ConditionChoice == 4:&#10;    CurrentStimulus = ConditionFour['fileName']&#10;elif ConditionChoice == 5:&#10;    CurrentStimulus = ConditionFive['fileName']&#10;elif ConditionChoice == 6:&#10;    CurrentStimulus = ConditionSix['fileName']&#10;elif ConditionChoice == 7:&#10;    CurrentStimulus = ConditionSeven['fileName']&#10;elif ConditionChoice == 8:&#10;    CurrentStimulus = ConditionEight['fileName']" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'t', 'y', 'g', 'h'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$CurrentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[101, 101]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="StimSetup">\u000a      <CodeComponent name="code">\u000a        <Param name="Begin Experiment" val="import random&#10;&#10;colors = ['yellow', 'white', 'orange', 'magenta', 'green', 'gray', 'cyan', 'blue']&#10;shapes = ['triangle', 'square', 'line', 'invertedtriangle', 'hexagon', 'diamond', 'cross', 'circle']&#10;rewards = [0.5, 1, 2, 4] * 2&#10;conditions = ['go', 'go', 'go', 'go', 'stop', 'stop', 'stop', 'stop']&#10;trialDetailsList = []&#10;&#10;shuffle(colors)&#10;shuffle(shapes)&#10;&#10;for i, color in enumerate(colors): # cycle through each color and keep track of an index number&#10;    trialDetails = {} # a dictionary of key-value pairs&#10;    trialDetails['fileName'] = shapes[i] + color + '.gif'&#10;    trialDetails['reward'] = rewards[i]&#10;    trialDetails['condition'] = conditions[i]&#10;    trialDetailsList.append(trialDetails)&#10;&#10;shuffle(trialDetailsList) # do this now to ensure that order of presentation of rewards and conditions is also shuffled&#10;&#10;ConditionOne = trialDetailsList[0]&#10;ConditionTwo = trialDetailsList[1]&#10;ConditionThree = trialDetailsList[2]&#10;ConditionFour = trialDetailsList[3]&#10;ConditionFive = trialDetailsList[4]&#10;ConditionSix = trialDetailsList[5]&#10;ConditionSeven = trialDetailsList[6]&#10;ConditionEight = trialDetailsList[7]" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="OK, ready to start the main experiment?&#10;&#10;Remember, press;&#10; - 'S' if the SMALL letters are S&#10; - 'H' if the SMALL letters are H&#10;&#10;Try to respond as quickly and as accurately as possible.&#10;&#10;When you are ready to proceed press any key." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#message variable just needs some value at start&#10;message=0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="#if resp.corr:#stored on last run routine&#10;#  msg=&quot;Correct! RT=%.3f&quot; %(resp.rt)&#10;#else:&#10;#  msg=&quot;Oops! That was wrong&quot;&#10;&#10;if ConditionChoice == 1:&#10;    CurrentReward = ConditionOne['reward']&#10;elif ConditionChoice == 2:&#10;    CurrentReward = ConditionTwo['reward']&#10;elif ConditionChoice == 3:&#10;    CurrentReward = ConditionThree['reward']&#10;elif ConditionChoice == 4:&#10;    CurrentReward = ConditionFour['reward']&#10;elif ConditionChoice == 5:&#10;    CurrentReward = ConditionFive['reward']&#10;elif ConditionChoice == 6:&#10;    CurrentReward = ConditionSix['reward']&#10;elif ConditionChoice == 7:&#10;    CurrentReward = ConditionSeven['reward']&#10;elif ConditionChoice == 8:&#10;    CurrentReward = ConditionEight['reward']&#10;&#10;message = CurrentReward" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.07" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="StimSetup"/>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practiceTrials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practiceTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="practiceTrials"/>\u000a    <Routine name="instrMain"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="10" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="trials"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p319
sg43
(lp320
sg51
I227480624
sg11
S'practiceTrials'
p321
sg6
g7
sg53
I1
sg20
I01
sg21
g22
sg54
g1
(g55
g45
(dp322
g57
g58
(g59
g60
g61
S'b'
tRp323
(I1
(I4
I1
tg63
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00'
Ntbsg17
g64
(g60
(I0
tS'b'
tRp324
(I1
(I4
I1
tg66
I00
(lp325
S'y'
aS't'
aS'h'
aS'g'
atbsg18
g58
(g59
g60
g61
S'b'
tRp326
(I1
(I4
I1
tg63
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00'
Ntbsg82
g58
(g59
g60
g61
S'b'
tRp327
(I1
(I4
I1
tg63
I00
S'\x00\x00@@\x00\x00\x00@\x00\x00\x00\x00\x00\x00\x80?'
S'\x00\x00\x00\x00'
Ntbsg19
g58
(g59
g60
g61
S'b'
tRp328
(I1
(I4
I1
tg63
I00
S'h^\xde>X\xc2\xb3>\xf8!\xf8>\x909\xef>'
S'\x00\x00\x00\x00'
NtbstRp329
(dp330
g87
(dp331
g57
I01
sg17
I00
sg19
I01
sg82
I01
sg18
I01
ssg52
g317
sg89
(lp332
g57
ag82
ag17
ag18
ag19
asg91
(lp333
I4
aI1
asbsg93
g94
sg95
g64
(g60
(I0
tS'b'
tRp334
(I1
(I4
I1
tg97
I01
S'\x02\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00'
tbsg98
I01
sg99
I1
sg100
I-1
sg101
(lp335
g1
(g44
g45
(dp336
g122
I200
sg123
Vy
sg124
I200
stRp337
ag1
(g44
g45
(dp338
g122
I-200
sg123
Vt
sg124
I200
stRp339
ag1
(g44
g45
(dp340
g122
I200
sg123
Vh
sg124
I-200
stRp341
ag1
(g44
g45
(dp342
g122
I-200
sg123
Vg
sg124
I-200
stRp343
asg109
Nsg110
g151
sg112
I4
sg113
I0
sg114
I4
sg115
I01
sbag39
asS'savePickle'
p344
I00
sb.