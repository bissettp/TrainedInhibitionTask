ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
V/Users/patrickbissett/OneDrive/Poldrack/TrainedInhibition/PsychoPy/ShapeLearningTaskFeedback5.psyexp
p7
sS'dataFileName'
p8
V/Users/patrickbissett/OneDrive/Poldrack/TrainedInhibition/PsychoPy/data/21_2015_Mar_18_1617
p9
sS'runtimeInfo'
p10
NsS'name'
p11
S'LearningTask'
p12
sS'dataNames'
p13
(lp14
S'ok1.keys'
p15
aS'ok1.rt'
p16
aS'resp.keys'
p17
aS'resp.corr'
p18
aS'resp.rt'
p19
asS'autoLog'
p20
I01
sS'extraInfo'
p21
(dp22
S'expName'
p23
g12
sS'gender (m/f)'
p24
V
sS'age'
p25
V
sS'frameRate'
p26
cnumpy.core.multiarray
scalar
p27
(cnumpy
dtype
p28
(S'f8'
I0
I1
tRp29
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x0f\xa8\x0e-\xee\xf3M@'
tRp30
sS'session'
p31
I3
sS'date'
p32
V2015_Mar_18_1617
p33
sS'participant'
p34
V21
p35
ssS'loopsUnfinished'
p36
(lp37
sS'saveWideText'
p38
I01
sS'thisEntry'
p39
(dp40
sS'version'
p41
S''
sS'_paramNamesSoFar'
p42
(lp43
VxPos
p44
aVcorrAns
p45
aVyPos
p46
asS'entries'
p47
(lp48
(dp49
g31
I3
sg24
V
sg16
F0.27261495590209961
sg25
V
sg26
g30
sg23
g12
sg15
S'space'
p50
sg32
g33
sg34
g35
sa(dp51
g24
V
sg18
I1
sS'ReDoLoop.thisRepN'
p52
I0
sg19
F0.43438601493835449
sS'ReDoLoop.thisIndex'
p53
g27
(g28
(S'i4'
I0
I1
tRp54
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x00\x00\x00\x00'
tRp55
sg26
g30
sg32
g33
sS'ReDoLoop.thisTrial'
p56
Nsg31
I3
sg45
Vg
sS'practiceTrials.thisRepN'
p57
I0
sS'ReDoLoop.thisN'
p58
I0
sS'ReDoLoop.thisTrialN'
p59
I0
sg17
S'g'
sg44
I-200
sg34
g35
sg25
V
sS'practiceTrials.thisN'
p60
I0
sg46
I-200
sg23
g12
sS'practiceTrials.thisTrialN'
p61
I0
sS'practiceTrials.thisIndex'
p62
I3
sa(dp63
g31
I3
sg44
I-200
sg24
V
sg26
g30
sg25
V
sS'practiceTrials.thisN'
p64
I0
sg46
I-200
sg32
g33
sg23
g12
sS'practiceTrials.thisTrialN'
p65
I0
sS'practiceTrials.thisIndex'
p66
I3
sS'practiceTrials.thisRepN'
p67
I0
sg34
g35
sg45
Vg
sa(dp68
g24
V
sg18
I1
sS'ReDoLoop.thisRepN'
p69
I0
sg19
F0.33428502082824707
sS'ReDoLoop.thisIndex'
p70
g27
(g54
S'\x00\x00\x00\x00'
tRp71
sg26
g30
sg32
g33
sS'ReDoLoop.thisTrial'
p72
Nsg31
I3
sg45
Vy
sS'practiceTrials.thisRepN'
p73
I0
sS'ReDoLoop.thisN'
p74
I0
sS'ReDoLoop.thisTrialN'
p75
I0
sg17
S'y'
sg44
I200
sg34
g35
sg25
V
sS'practiceTrials.thisN'
p76
I1
sg46
I200
sg23
g12
sS'practiceTrials.thisTrialN'
p77
I1
sS'practiceTrials.thisIndex'
p78
I0
sa(dp79
g31
I3
sg44
I200
sg24
V
sg26
g30
sg25
V
sS'practiceTrials.thisN'
p80
I1
sg46
I200
sg32
g33
sg23
g12
sS'practiceTrials.thisTrialN'
p81
I1
sS'practiceTrials.thisIndex'
p82
I0
sS'practiceTrials.thisRepN'
p83
I0
sg34
g35
sg45
Vy
sa(dp84
g24
V
sg18
I1
sS'ReDoLoop.thisRepN'
p85
I0
sg19
F0.33429598808288574
sS'ReDoLoop.thisIndex'
p86
g27
(g54
S'\x00\x00\x00\x00'
tRp87
sg26
g30
sg32
g33
sS'ReDoLoop.thisTrial'
p88
Nsg31
I3
sg45
Vh
sS'practiceTrials.thisRepN'
p89
I0
sS'ReDoLoop.thisN'
p90
I0
sS'ReDoLoop.thisTrialN'
p91
I0
sg17
S'h'
sg44
I200
sg34
g35
sg25
V
sS'practiceTrials.thisN'
p92
I2
sg46
I-200
sg23
g12
sS'practiceTrials.thisTrialN'
p93
I2
sS'practiceTrials.thisIndex'
p94
I2
sa(dp95
g31
I3
sg44
I200
sg24
V
sg26
g30
sg25
V
sS'practiceTrials.thisN'
p96
I2
sg46
I-200
sg32
g33
sg23
g12
sS'practiceTrials.thisTrialN'
p97
I2
sS'practiceTrials.thisIndex'
p98
I2
sS'practiceTrials.thisRepN'
p99
I0
sg34
g35
sg45
Vh
sa(dp100
g24
V
sg18
I1
sS'ReDoLoop.thisRepN'
p101
I0
sg19
F0.60106205940246582
sS'ReDoLoop.thisIndex'
p102
g27
(g54
S'\x00\x00\x00\x00'
tRp103
sg26
g30
sg32
g33
sS'ReDoLoop.thisTrial'
p104
Nsg31
I3
sg45
Vg
sS'practiceTrials.thisRepN'
p105
I0
sS'ReDoLoop.thisN'
p106
I0
sS'ReDoLoop.thisTrialN'
p107
I0
sg17
S'g'
sg44
I-200
sg34
g35
sg25
V
sS'practiceTrials.thisN'
p108
I3
sg46
I-200
sg23
g12
sS'practiceTrials.thisTrialN'
p109
I3
sS'practiceTrials.thisIndex'
p110
I3
sa(dp111
g31
I3
sg44
I-200
sg24
V
sg26
g30
sg25
V
sS'practiceTrials.thisN'
p112
I3
sg46
I-200
sg32
g33
sg23
g12
sS'practiceTrials.thisTrialN'
p113
I3
sS'practiceTrials.thisIndex'
p114
I3
sS'practiceTrials.thisRepN'
p115
I0
sg34
g35
sg45
Vg
sa(dp116
g24
V
sg18
I1
sS'ReDoLoop.thisRepN'
p117
I0
sg19
F0.36765503883361816
sS'ReDoLoop.thisIndex'
p118
g27
(g54
S'\x00\x00\x00\x00'
tRp119
sg26
g30
sg32
g33
sS'ReDoLoop.thisTrial'
p120
Nsg31
I3
sg45
Vt
sS'practiceTrials.thisRepN'
p121
I1
sS'ReDoLoop.thisN'
p122
I0
sS'ReDoLoop.thisTrialN'
p123
I0
sg17
S't'
sg44
I-200
sg34
g35
sg25
V
sS'practiceTrials.thisN'
p124
I4
sg46
I200
sg23
g12
sS'practiceTrials.thisTrialN'
p125
I0
sS'practiceTrials.thisIndex'
p126
I1
sa(dp127
g31
I3
sg44
I-200
sg24
V
sg26
g30
sg25
V
sS'practiceTrials.thisN'
p128
I4
sg46
I200
sg32
g33
sg23
g12
sS'practiceTrials.thisTrialN'
p129
I0
sS'practiceTrials.thisIndex'
p130
I1
sS'practiceTrials.thisRepN'
p131
I1
sg34
g35
sg45
Vt
sa(dp132
g24
V
sg18
I1
sS'ReDoLoop.thisRepN'
p133
I0
sg19
F0.35084414482116699
sS'ReDoLoop.thisIndex'
p134
g27
(g54
S'\x00\x00\x00\x00'
tRp135
sg26
g30
sg32
g33
sS'ReDoLoop.thisTrial'
p136
Nsg31
I3
sg45
Vh
sS'practiceTrials.thisRepN'
p137
I1
sS'ReDoLoop.thisN'
p138
I0
sS'ReDoLoop.thisTrialN'
p139
I0
sg17
S'h'
sg44
I200
sg34
g35
sg25
V
sS'practiceTrials.thisN'
p140
I5
sg46
I-200
sg23
g12
sS'practiceTrials.thisTrialN'
p141
I1
sS'practiceTrials.thisIndex'
p142
I2
sa(dp143
g31
I3
sg44
I200
sg24
V
sg26
g30
sg25
V
sS'practiceTrials.thisN'
p144
I5
sg46
I-200
sg32
g33
sg23
g12
sS'practiceTrials.thisTrialN'
p145
I1
sS'practiceTrials.thisIndex'
p146
I2
sS'practiceTrials.thisRepN'
p147
I1
sg34
g35
sg45
Vh
sa(dp148
g24
V
sg18
I1
sS'ReDoLoop.thisRepN'
p149
I0
sg19
F0.46745204925537109
sS'ReDoLoop.thisIndex'
p150
g27
(g54
S'\x00\x00\x00\x00'
tRp151
sg26
g30
sg32
g33
sS'ReDoLoop.thisTrial'
p152
Nsg31
I3
sg45
Vt
sS'practiceTrials.thisRepN'
p153
I1
sS'ReDoLoop.thisN'
p154
I0
sS'ReDoLoop.thisTrialN'
p155
I0
sg17
S't'
sg44
I-200
sg34
g35
sg25
V
sS'practiceTrials.thisN'
p156
I6
sg46
I200
sg23
g12
sS'practiceTrials.thisTrialN'
p157
I2
sS'practiceTrials.thisIndex'
p158
I1
sa(dp159
g31
I3
sg44
I-200
sg24
V
sg26
g30
sg25
V
sS'practiceTrials.thisN'
p160
I6
sg46
I200
sg32
g33
sg23
g12
sS'practiceTrials.thisTrialN'
p161
I2
sS'practiceTrials.thisIndex'
p162
I1
sS'practiceTrials.thisRepN'
p163
I1
sg34
g35
sg45
Vt
sa(dp164
g24
V
sg18
I0
sS'ReDoLoop.thisRepN'
p165
I0
sg19
F0.46745800971984863
sS'ReDoLoop.thisIndex'
p166
g27
(g54
S'\x00\x00\x00\x00'
tRp167
sg26
g30
sg32
g33
sS'ReDoLoop.thisTrial'
p168
Nsg31
I3
sg45
Vy
sS'practiceTrials.thisRepN'
p169
I1
sS'ReDoLoop.thisN'
p170
I0
sS'ReDoLoop.thisTrialN'
p171
I0
sg17
S'h'
sg44
I200
sg34
g35
sg25
V
sS'practiceTrials.thisN'
p172
I7
sg46
I200
sg23
g12
sS'practiceTrials.thisTrialN'
p173
I3
sS'practiceTrials.thisIndex'
p174
I0
sa(dp175
g31
I3
sg44
I200
sg24
V
sg26
g30
sg25
V
sS'practiceTrials.thisN'
p176
I7
sg46
I200
sg32
g33
sg23
g12
sS'practiceTrials.thisTrialN'
p177
I3
sS'practiceTrials.thisIndex'
p178
I0
sS'practiceTrials.thisRepN'
p179
I1
sg34
g35
sg45
Vy
sa(dp180
g24
V
sS'ReDoLoopMain.thisRepN'
p181
I0
sg18
I1
sS'ReDoLoopMain.thisTrialN'
p182
I0
sg19
F0.43441510200500488
sg26
g30
sS'ReDoLoopMain.thisTrial'
p183
NsS'ReDoLoopMain.thisIndex'
p184
g27
(g54
S'\x00\x00\x00\x00'
tRp185
sg31
I3
sVcorrAns
p186
Vg
sS'trials.thisIndex'
p187
I3
sg32
g33
sg17
S'g'
sVxPos
p188
I-200
sg34
g35
sS'trials.thisRepN'
p189
I0
sg25
V
sS'ReDoLoopMain.thisN'
p190
I0
sVyPos
p191
I-200
sS'trials.thisN'
p192
I0
sg23
g12
sS'trials.thisTrialN'
p193
I0
sa(dp194
g24
V
sS'ReDoLoopMain.thisRepN'
p195
I1
sg18
I0
sS'ReDoLoopMain.thisTrialN'
p196
I0
sg19
F0.66776704788208008
sg26
g30
sS'ReDoLoopMain.thisTrial'
p197
NsS'ReDoLoopMain.thisIndex'
p198
g27
(g54
S'\x00\x00\x00\x00'
tRp199
sg31
I3
sg186
Vg
sS'trials.thisIndex'
p200
I3
sg32
g33
sg17
S't'
sg188
I-200
sg34
g35
sS'trials.thisRepN'
p201
I0
sg25
V
sS'ReDoLoopMain.thisN'
p202
I1
sg191
I-200
sS'trials.thisN'
p203
I0
sg23
g12
sS'trials.thisTrialN'
p204
I0
sa(dp205
g31
I3
sS'trials.thisIndex'
p206
I3
sg188
I-200
sg24
V
sS'trials.thisRepN'
p207
I0
sg25
V
sg26
g30
sg191
I-200
sS'trials.thisN'
p208
I0
sg23
g12
sS'trials.thisTrialN'
p209
I0
sg186
Vg
sg32
g33
sg34
g35
sa(dp210
g24
V
sS'ReDoLoopMain.thisRepN'
p211
I0
sg18
I1
sS'ReDoLoopMain.thisTrialN'
p212
I0
sg19
F0.43450093269348145
sg26
g30
sS'ReDoLoopMain.thisTrial'
p213
NsS'ReDoLoopMain.thisIndex'
p214
g27
(g54
S'\x00\x00\x00\x00'
tRp215
sg31
I3
sg186
Vt
sS'trials.thisIndex'
p216
I1
sg32
g33
sg17
S't'
sg188
I-200
sg34
g35
sS'trials.thisRepN'
p217
I0
sg25
V
sS'ReDoLoopMain.thisN'
p218
I0
sg191
I200
sS'trials.thisN'
p219
I1
sg23
g12
sS'trials.thisTrialN'
p220
I1
sa(dp221
g24
V
sS'ReDoLoopMain.thisRepN'
p222
I1
sg18
I1
sS'ReDoLoopMain.thisTrialN'
p223
I0
sg19
F0.35079813003540039
sg26
g30
sS'ReDoLoopMain.thisTrial'
p224
NsS'ReDoLoopMain.thisIndex'
p225
g27
(g54
S'\x00\x00\x00\x00'
tRp226
sg31
I3
sg186
Vt
sS'trials.thisIndex'
p227
I1
sg32
g33
sg17
S't'
sg188
I-200
sg34
g35
sS'trials.thisRepN'
p228
I0
sg25
V
sS'ReDoLoopMain.thisN'
p229
I1
sg191
I200
sS'trials.thisN'
p230
I1
sg23
g12
sS'trials.thisTrialN'
p231
I1
sa(dp232
g31
I3
sS'trials.thisIndex'
p233
I1
sg188
I-200
sg24
V
sS'trials.thisRepN'
p234
I0
sg25
V
sg26
g30
sg191
I200
sS'trials.thisN'
p235
I1
sg23
g12
sS'trials.thisTrialN'
p236
I1
sg186
Vt
sg32
g33
sg34
g35
sa(dp237
g24
V
sS'ReDoLoopMain.thisRepN'
p238
I0
sg18
I1
sS'ReDoLoopMain.thisTrialN'
p239
I0
sg19
F0.35080790519714355
sg26
g30
sS'ReDoLoopMain.thisTrial'
p240
NsS'ReDoLoopMain.thisIndex'
p241
g27
(g54
S'\x00\x00\x00\x00'
tRp242
sg31
I3
sg186
Vh
sS'trials.thisIndex'
p243
I2
sg32
g33
sg17
S'h'
sg188
I200
sg34
g35
sS'trials.thisRepN'
p244
I0
sg25
V
sS'ReDoLoopMain.thisN'
p245
I0
sg191
I-200
sS'trials.thisN'
p246
I2
sg23
g12
sS'trials.thisTrialN'
p247
I2
sa(dp248
g31
I3
sS'trials.thisIndex'
p249
I2
sg188
I200
sg24
V
sS'trials.thisRepN'
p250
I0
sg25
V
sg26
g30
sg191
I-200
sS'trials.thisN'
p251
I2
sg23
g12
sS'trials.thisTrialN'
p252
I2
sg186
Vh
sg32
g33
sg34
g35
sa(dp253
g24
V
sS'ReDoLoopMain.thisRepN'
p254
I0
sg18
I1
sS'ReDoLoopMain.thisTrialN'
p255
I0
sg19
F0.30099201202392578
sg26
g30
sS'ReDoLoopMain.thisTrial'
p256
NsS'ReDoLoopMain.thisIndex'
p257
g27
(g54
S'\x00\x00\x00\x00'
tRp258
sg31
I3
sg186
Vy
sS'trials.thisIndex'
p259
I0
sg32
g33
sg17
S'y'
sg188
I200
sg34
g35
sS'trials.thisRepN'
p260
I0
sg25
V
sS'ReDoLoopMain.thisN'
p261
I0
sg191
I200
sS'trials.thisN'
p262
I3
sg23
g12
sS'trials.thisTrialN'
p263
I3
sa(dp264
g31
I3
sS'trials.thisIndex'
p265
I0
sg188
I200
sg24
V
sS'trials.thisRepN'
p266
I0
sg25
V
sg26
g30
sg191
I200
sS'trials.thisN'
p267
I3
sg23
g12
sS'trials.thisTrialN'
p268
I3
sg186
Vy
sg32
g33
sg34
g35
sasS'loops'
p269
(lp270
g1
(cpsychopy.data
TrialHandler
p271
g3
NtRp272
(dp273
S'origin'
p274
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="code_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="#Redo = 1&#10;&#10;import random&#10;&#10;Integers = [1, 2, 3, 4, 5, 6, 7, 8]&#10;&#10;if Redo == 1:&#10;    ConditionChoice = random.choice(Integers)&#10;    if ConditionChoice == 1:&#10;        CurrentStimulus = ConditionOne['fileName']&#10;    elif ConditionChoice == 2:&#10;        CurrentStimulus = ConditionTwo['fileName']&#10;    elif ConditionChoice == 3:&#10;        CurrentStimulus = ConditionThree['fileName']&#10;    elif ConditionChoice == 4:&#10;        CurrentStimulus = ConditionFour['fileName']&#10;    elif ConditionChoice == 5:&#10;        CurrentStimulus = ConditionFive['fileName']&#10;    elif ConditionChoice == 6:&#10;        CurrentStimulus = ConditionSix['fileName']&#10;    elif ConditionChoice == 7:&#10;        CurrentStimulus = ConditionSeven['fileName']&#10;    elif ConditionChoice == 8:&#10;        CurrentStimulus = ConditionEight['fileName']" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'t', 'y', 'g', 'h'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$CurrentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[101, 101]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="StimSetup">\u000a      <CodeComponent name="code">\u000a        <Param name="Begin Experiment" val="import random&#10;Redo = 1&#10;colors = ['yellow', 'white', 'orange', 'magenta', 'green', 'gray', 'cyan', 'blue']&#10;shapes = ['triangle', 'square', 'line', 'invertedtriangle', 'hexagon', 'diamond', 'cross', 'circle']&#10;rewards = [0.5, 1, 2, 4] * 2&#10;conditions = ['go', 'go', 'go', 'go', 'stop', 'stop', 'stop', 'stop']&#10;trialDetailsList = []&#10;&#10;shuffle(colors)&#10;shuffle(shapes)&#10;&#10;for i, color in enumerate(colors): # cycle through each color and keep track of an index number&#10;    trialDetails = {} # a dictionary of key-value pairs&#10;    trialDetails['fileName'] = shapes[i] + color + '.gif'&#10;    trialDetails['reward'] = rewards[i]&#10;    trialDetails['condition'] = conditions[i]&#10;    trialDetailsList.append(trialDetails)&#10;&#10;shuffle(trialDetailsList) # do this now to ensure that order of presentation of rewards and conditions is also shuffled&#10;&#10;ConditionOne = trialDetailsList[0]&#10;ConditionTwo = trialDetailsList[1]&#10;ConditionThree = trialDetailsList[2]&#10;ConditionFour = trialDetailsList[3]&#10;ConditionFive = trialDetailsList[4]&#10;ConditionSix = trialDetailsList[5]&#10;ConditionSeven = trialDetailsList[6]&#10;ConditionEight = trialDetailsList[7]" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#message variable just needs some value at start&#10;message=0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="DisplayReward = random.randrange(1, 6)&#10;&#10;if resp.corr:#stored on last run routine&#10;    if DisplayReward == 1:&#10;            message = &quot;You won &quot; + str(0);&#10;    else: &#10;        if ConditionChoice == 1:&#10;            CurrentReward = ConditionOne['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 2:&#10;            CurrentReward = ConditionTwo['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 3:&#10;            CurrentReward = ConditionThree['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 4:&#10;            CurrentReward = ConditionFour['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 5:&#10;            CurrentReward = ConditionFive['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 6:&#10;            CurrentReward = ConditionSix['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 7:&#10;            CurrentReward = ConditionSeven['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 8:&#10;            CurrentReward = ConditionEight['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;elif resp.keys is None: #or len(key_resp.keys)&lt;1:&#10;#elif resp.rt == 0:&#10;    message =&quot;Too Slow&quot;&#10;else:&#10;  message=&quot;Wrong&quot;&#10;&#10;if resp.corr:#stored on last run routine&#10;    Redo = 1; &#10;else:&#10;    Redo = Redo + 1;&#10;&#10;#if DisplayReward == 1:&#10;#    message = 0;&#10;#else:&#10;#    message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;&#10;#  message=&quot;Correct! RT=%.3f&quot; %(resp.rt)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.07" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="StimSetup"/>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practiceTrials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practiceTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoop">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoop" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="$Redo" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="ReDoLoop"/>\u000a    <LoopTerminator name="practiceTrials"/>\u000a    <Routine name="instrMain"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoopMain">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoopMain" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="$Redo" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="ReDoLoopMain"/>\u000a    <LoopTerminator name="trials"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p275
sS'thisTrial'
p276
(lp277
sS'_exp'
p278
I235841648
sg11
S'practiceTrials'
p279
sg6
g7
sS'thisRepN'
p280
I2
sg20
I01
sg21
g22
sS'data'
p281
g1
(cpsychopy.data
DataHandler
p282
c__builtin__
dict
p283
(dp284
S'ran'
p285
cnumpy.ma.core
_mareconstruct
p286
(cnumpy.ma.core
MaskedArray
p287
cnumpy
ndarray
p288
(I0
tp289
S'b'
tRp290
(I1
(I4
I2
tg28
(S'f4'
I0
I1
tRp291
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00'
NtbsS'order'
p292
g286
(g287
g288
g289
S'b'
tRp293
(I1
(I4
I2
tg291
I00
S'\x00\x00\x80?\x00\x00\xe0@\x00\x00\x80@\x00\x00\xc0@\x00\x00\x00@\x00\x00\xa0@\x00\x00\x00\x00\x00\x00@@'
S'\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp294
(dp295
S'isNumeric'
p296
(dp297
g285
I01
sg292
I01
ssS'trials'
p298
g272
sS'dataTypes'
p299
(lp300
g285
ag292
asS'dataShape'
p301
(lp302
I4
aI2
asbsS'method'
p303
S'fullRandom'
p304
sS'sequenceIndices'
p305
cnumpy.core.multiarray
_reconstruct
p306
(g288
(I0
tS'b'
tRp307
(I1
(I4
I2
tg28
(S'O4'
I0
I1
tRp308
(I3
S'|'
NNNI-1
I-1
I63
tbI00
(lp309
I3
aI1
aI0
aI2
aI2
aI1
aI3
aI0
atbsS'finished'
p310
I01
sS'nReps'
p311
I2
sS'nRemaining'
p312
I-1
sS'trialList'
p313
(lp314
g1
(cpsychopy.data
TrialType
p315
g283
(dp316
g44
I200
sg45
Vy
sg46
I200
stRp317
ag1
(g315
g283
(dp318
g44
I-200
sg45
Vt
sg46
I200
stRp319
ag1
(g315
g283
(dp320
g44
I200
sg45
Vh
sg46
I-200
stRp321
ag1
(g315
g283
(dp322
g44
I-200
sg45
Vg
sg46
I-200
stRp323
asS'seed'
p324
NsS'thisIndex'
p325
I0
sS'thisN'
p326
I8
sS'thisTrialN'
p327
I0
sS'nTotal'
p328
I8
sS'_warnUseOfNext'
p329
I01
sbag1
(g271
g3
NtRp330
(dp331
g274
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="code_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="#Redo = 1&#10;&#10;import random&#10;&#10;Integers = [1, 2, 3, 4, 5, 6, 7, 8]&#10;&#10;if Redo == 1:&#10;    ConditionChoice = random.choice(Integers)&#10;    if ConditionChoice == 1:&#10;        CurrentStimulus = ConditionOne['fileName']&#10;    elif ConditionChoice == 2:&#10;        CurrentStimulus = ConditionTwo['fileName']&#10;    elif ConditionChoice == 3:&#10;        CurrentStimulus = ConditionThree['fileName']&#10;    elif ConditionChoice == 4:&#10;        CurrentStimulus = ConditionFour['fileName']&#10;    elif ConditionChoice == 5:&#10;        CurrentStimulus = ConditionFive['fileName']&#10;    elif ConditionChoice == 6:&#10;        CurrentStimulus = ConditionSix['fileName']&#10;    elif ConditionChoice == 7:&#10;        CurrentStimulus = ConditionSeven['fileName']&#10;    elif ConditionChoice == 8:&#10;        CurrentStimulus = ConditionEight['fileName']" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'t', 'y', 'g', 'h'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$CurrentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[101, 101]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="StimSetup">\u000a      <CodeComponent name="code">\u000a        <Param name="Begin Experiment" val="import random&#10;Redo = 1&#10;colors = ['yellow', 'white', 'orange', 'magenta', 'green', 'gray', 'cyan', 'blue']&#10;shapes = ['triangle', 'square', 'line', 'invertedtriangle', 'hexagon', 'diamond', 'cross', 'circle']&#10;rewards = [0.5, 1, 2, 4] * 2&#10;conditions = ['go', 'go', 'go', 'go', 'stop', 'stop', 'stop', 'stop']&#10;trialDetailsList = []&#10;&#10;shuffle(colors)&#10;shuffle(shapes)&#10;&#10;for i, color in enumerate(colors): # cycle through each color and keep track of an index number&#10;    trialDetails = {} # a dictionary of key-value pairs&#10;    trialDetails['fileName'] = shapes[i] + color + '.gif'&#10;    trialDetails['reward'] = rewards[i]&#10;    trialDetails['condition'] = conditions[i]&#10;    trialDetailsList.append(trialDetails)&#10;&#10;shuffle(trialDetailsList) # do this now to ensure that order of presentation of rewards and conditions is also shuffled&#10;&#10;ConditionOne = trialDetailsList[0]&#10;ConditionTwo = trialDetailsList[1]&#10;ConditionThree = trialDetailsList[2]&#10;ConditionFour = trialDetailsList[3]&#10;ConditionFive = trialDetailsList[4]&#10;ConditionSix = trialDetailsList[5]&#10;ConditionSeven = trialDetailsList[6]&#10;ConditionEight = trialDetailsList[7]" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#message variable just needs some value at start&#10;message=0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="DisplayReward = random.randrange(1, 6)&#10;&#10;if resp.corr:#stored on last run routine&#10;    if DisplayReward == 1:&#10;            message = &quot;You won &quot; + str(0);&#10;    else: &#10;        if ConditionChoice == 1:&#10;            CurrentReward = ConditionOne['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 2:&#10;            CurrentReward = ConditionTwo['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 3:&#10;            CurrentReward = ConditionThree['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 4:&#10;            CurrentReward = ConditionFour['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 5:&#10;            CurrentReward = ConditionFive['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 6:&#10;            CurrentReward = ConditionSix['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 7:&#10;            CurrentReward = ConditionSeven['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 8:&#10;            CurrentReward = ConditionEight['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;elif resp.keys is None: #or len(key_resp.keys)&lt;1:&#10;#elif resp.rt == 0:&#10;    message =&quot;Too Slow&quot;&#10;else:&#10;  message=&quot;Wrong&quot;&#10;&#10;if resp.corr:#stored on last run routine&#10;    Redo = 1; &#10;else:&#10;    Redo = Redo + 1;&#10;&#10;#if DisplayReward == 1:&#10;#    message = 0;&#10;#else:&#10;#    message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;&#10;#  message=&quot;Correct! RT=%.3f&quot; %(resp.rt)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.07" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="StimSetup"/>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practiceTrials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practiceTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoop">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoop" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="$Redo" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="ReDoLoop"/>\u000a    <LoopTerminator name="practiceTrials"/>\u000a    <Routine name="instrMain"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoopMain">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoopMain" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="$Redo" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="ReDoLoopMain"/>\u000a    <LoopTerminator name="trials"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p332
sg276
(lp333
sg278
I235841648
sg11
S'ReDoLoop'
p334
sg6
g7
sg280
I1
sg20
I01
sg21
g22
sg281
g1
(g282
g283
(dp335
g285
g286
(g287
g288
g289
S'b'
tRp336
(I1
(I1
I1
tg291
I00
S'\x00\x00\x80?'
S'\x00'
Ntbsg17
g306
(g288
(I0
tS'b'
tRp337
(I1
(I1
I1
tg308
I00
(lp338
S'g'
atbsg18
g286
(g287
g288
g289
S'b'
tRp339
(I1
(I1
I1
tg291
I00
S'\x00\x00\x80?'
S'\x00'
Ntbsg292
g286
(g287
g288
g289
S'b'
tRp340
(I1
(I1
I1
tg291
I00
S'\x00\x00\x00\x00'
S'\x00'
Ntbsg19
g286
(g287
g288
g289
S'b'
tRp341
(I1
(I1
I1
tg291
I00
S'\xd8g\xde>'
S'\x00'
NtbstRp342
(dp343
g296
(dp344
g285
I01
sg17
I00
sg19
I01
sg292
I01
sg18
I01
ssg298
g330
sg299
(lp345
g285
ag292
ag17
ag18
ag19
asg301
(lp346
I1
aI1
asbsg303
S'random'
p347
sg305
g306
(g288
(I0
tS'b'
tRp348
(I1
(I1
I1
tg54
I00
S'\x00\x00\x00\x00'
tbsg310
I01
sg311
I1
sg312
I-1
sg313
(lp349
Nasg324
Nsg325
g55
sg326
I1
sg327
I0
sg328
I1
sg329
I01
sbag1
(g271
g3
NtRp350
(dp351
g274
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="code_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="#Redo = 1&#10;&#10;import random&#10;&#10;Integers = [1, 2, 3, 4, 5, 6, 7, 8]&#10;&#10;if Redo == 1:&#10;    ConditionChoice = random.choice(Integers)&#10;    if ConditionChoice == 1:&#10;        CurrentStimulus = ConditionOne['fileName']&#10;    elif ConditionChoice == 2:&#10;        CurrentStimulus = ConditionTwo['fileName']&#10;    elif ConditionChoice == 3:&#10;        CurrentStimulus = ConditionThree['fileName']&#10;    elif ConditionChoice == 4:&#10;        CurrentStimulus = ConditionFour['fileName']&#10;    elif ConditionChoice == 5:&#10;        CurrentStimulus = ConditionFive['fileName']&#10;    elif ConditionChoice == 6:&#10;        CurrentStimulus = ConditionSix['fileName']&#10;    elif ConditionChoice == 7:&#10;        CurrentStimulus = ConditionSeven['fileName']&#10;    elif ConditionChoice == 8:&#10;        CurrentStimulus = ConditionEight['fileName']" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'t', 'y', 'g', 'h'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$CurrentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[101, 101]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="StimSetup">\u000a      <CodeComponent name="code">\u000a        <Param name="Begin Experiment" val="import random&#10;Redo = 1&#10;colors = ['yellow', 'white', 'orange', 'magenta', 'green', 'gray', 'cyan', 'blue']&#10;shapes = ['triangle', 'square', 'line', 'invertedtriangle', 'hexagon', 'diamond', 'cross', 'circle']&#10;rewards = [0.5, 1, 2, 4] * 2&#10;conditions = ['go', 'go', 'go', 'go', 'stop', 'stop', 'stop', 'stop']&#10;trialDetailsList = []&#10;&#10;shuffle(colors)&#10;shuffle(shapes)&#10;&#10;for i, color in enumerate(colors): # cycle through each color and keep track of an index number&#10;    trialDetails = {} # a dictionary of key-value pairs&#10;    trialDetails['fileName'] = shapes[i] + color + '.gif'&#10;    trialDetails['reward'] = rewards[i]&#10;    trialDetails['condition'] = conditions[i]&#10;    trialDetailsList.append(trialDetails)&#10;&#10;shuffle(trialDetailsList) # do this now to ensure that order of presentation of rewards and conditions is also shuffled&#10;&#10;ConditionOne = trialDetailsList[0]&#10;ConditionTwo = trialDetailsList[1]&#10;ConditionThree = trialDetailsList[2]&#10;ConditionFour = trialDetailsList[3]&#10;ConditionFive = trialDetailsList[4]&#10;ConditionSix = trialDetailsList[5]&#10;ConditionSeven = trialDetailsList[6]&#10;ConditionEight = trialDetailsList[7]" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#message variable just needs some value at start&#10;message=0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="DisplayReward = random.randrange(1, 6)&#10;&#10;if resp.corr:#stored on last run routine&#10;    if DisplayReward == 1:&#10;            message = &quot;You won &quot; + str(0);&#10;    else: &#10;        if ConditionChoice == 1:&#10;            CurrentReward = ConditionOne['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 2:&#10;            CurrentReward = ConditionTwo['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 3:&#10;            CurrentReward = ConditionThree['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 4:&#10;            CurrentReward = ConditionFour['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 5:&#10;            CurrentReward = ConditionFive['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 6:&#10;            CurrentReward = ConditionSix['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 7:&#10;            CurrentReward = ConditionSeven['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 8:&#10;            CurrentReward = ConditionEight['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;elif resp.keys is None: #or len(key_resp.keys)&lt;1:&#10;#elif resp.rt == 0:&#10;    message =&quot;Too Slow&quot;&#10;else:&#10;  message=&quot;Wrong&quot;&#10;&#10;if resp.corr:#stored on last run routine&#10;    Redo = 1; &#10;else:&#10;    Redo = Redo + 1;&#10;&#10;#if DisplayReward == 1:&#10;#    message = 0;&#10;#else:&#10;#    message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;&#10;#  message=&quot;Correct! RT=%.3f&quot; %(resp.rt)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.07" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="StimSetup"/>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practiceTrials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practiceTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoop">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoop" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="$Redo" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="ReDoLoop"/>\u000a    <LoopTerminator name="practiceTrials"/>\u000a    <Routine name="instrMain"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoopMain">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoopMain" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="$Redo" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="ReDoLoopMain"/>\u000a    <LoopTerminator name="trials"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p352
sg276
(lp353
sg278
I235841648
sg11
g334
sg6
g7
sg280
I1
sg20
I01
sg21
g22
sg281
g1
(g282
g283
(dp354
g285
g286
(g287
g288
g289
S'b'
tRp355
(I1
(I1
I1
tg291
I00
S'\x00\x00\x80?'
S'\x00'
Ntbsg17
g306
(g288
(I0
tS'b'
tRp356
(I1
(I1
I1
tg308
I00
(lp357
S'y'
atbsg18
g286
(g287
g288
g289
S'b'
tRp358
(I1
(I1
I1
tg291
I00
S'\x00\x00\x80?'
S'\x00'
Ntbsg292
g286
(g287
g288
g289
S'b'
tRp359
(I1
(I1
I1
tg291
I00
S'\x00\x00\x00\x00'
S'\x00'
Ntbsg19
g286
(g287
g288
g289
S'b'
tRp360
(I1
(I1
I1
tg291
I00
S"h'\xab>"
S'\x00'
NtbstRp361
(dp362
g296
(dp363
g285
I01
sg17
I00
sg19
I01
sg292
I01
sg18
I01
ssg298
g350
sg299
(lp364
g285
ag292
ag17
ag18
ag19
asg301
(lp365
I1
aI1
asbsg303
g347
sg305
g306
(g288
(I0
tS'b'
tRp366
(I1
(I1
I1
tg54
I00
S'\x00\x00\x00\x00'
tbsg310
I01
sg311
I1
sg312
I-1
sg313
(lp367
Nasg324
Nsg325
g71
sg326
I1
sg327
I0
sg328
I1
sg329
I01
sbag1
(g271
g3
NtRp368
(dp369
g274
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="code_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="#Redo = 1&#10;&#10;import random&#10;&#10;Integers = [1, 2, 3, 4, 5, 6, 7, 8]&#10;&#10;if Redo == 1:&#10;    ConditionChoice = random.choice(Integers)&#10;    if ConditionChoice == 1:&#10;        CurrentStimulus = ConditionOne['fileName']&#10;    elif ConditionChoice == 2:&#10;        CurrentStimulus = ConditionTwo['fileName']&#10;    elif ConditionChoice == 3:&#10;        CurrentStimulus = ConditionThree['fileName']&#10;    elif ConditionChoice == 4:&#10;        CurrentStimulus = ConditionFour['fileName']&#10;    elif ConditionChoice == 5:&#10;        CurrentStimulus = ConditionFive['fileName']&#10;    elif ConditionChoice == 6:&#10;        CurrentStimulus = ConditionSix['fileName']&#10;    elif ConditionChoice == 7:&#10;        CurrentStimulus = ConditionSeven['fileName']&#10;    elif ConditionChoice == 8:&#10;        CurrentStimulus = ConditionEight['fileName']" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'t', 'y', 'g', 'h'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$CurrentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[101, 101]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="StimSetup">\u000a      <CodeComponent name="code">\u000a        <Param name="Begin Experiment" val="import random&#10;Redo = 1&#10;colors = ['yellow', 'white', 'orange', 'magenta', 'green', 'gray', 'cyan', 'blue']&#10;shapes = ['triangle', 'square', 'line', 'invertedtriangle', 'hexagon', 'diamond', 'cross', 'circle']&#10;rewards = [0.5, 1, 2, 4] * 2&#10;conditions = ['go', 'go', 'go', 'go', 'stop', 'stop', 'stop', 'stop']&#10;trialDetailsList = []&#10;&#10;shuffle(colors)&#10;shuffle(shapes)&#10;&#10;for i, color in enumerate(colors): # cycle through each color and keep track of an index number&#10;    trialDetails = {} # a dictionary of key-value pairs&#10;    trialDetails['fileName'] = shapes[i] + color + '.gif'&#10;    trialDetails['reward'] = rewards[i]&#10;    trialDetails['condition'] = conditions[i]&#10;    trialDetailsList.append(trialDetails)&#10;&#10;shuffle(trialDetailsList) # do this now to ensure that order of presentation of rewards and conditions is also shuffled&#10;&#10;ConditionOne = trialDetailsList[0]&#10;ConditionTwo = trialDetailsList[1]&#10;ConditionThree = trialDetailsList[2]&#10;ConditionFour = trialDetailsList[3]&#10;ConditionFive = trialDetailsList[4]&#10;ConditionSix = trialDetailsList[5]&#10;ConditionSeven = trialDetailsList[6]&#10;ConditionEight = trialDetailsList[7]" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#message variable just needs some value at start&#10;message=0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="DisplayReward = random.randrange(1, 6)&#10;&#10;if resp.corr:#stored on last run routine&#10;    if DisplayReward == 1:&#10;            message = &quot;You won &quot; + str(0);&#10;    else: &#10;        if ConditionChoice == 1:&#10;            CurrentReward = ConditionOne['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 2:&#10;            CurrentReward = ConditionTwo['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 3:&#10;            CurrentReward = ConditionThree['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 4:&#10;            CurrentReward = ConditionFour['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 5:&#10;            CurrentReward = ConditionFive['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 6:&#10;            CurrentReward = ConditionSix['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 7:&#10;            CurrentReward = ConditionSeven['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 8:&#10;            CurrentReward = ConditionEight['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;elif resp.keys is None: #or len(key_resp.keys)&lt;1:&#10;#elif resp.rt == 0:&#10;    message =&quot;Too Slow&quot;&#10;else:&#10;  message=&quot;Wrong&quot;&#10;&#10;if resp.corr:#stored on last run routine&#10;    Redo = 1; &#10;else:&#10;    Redo = Redo + 1;&#10;&#10;#if DisplayReward == 1:&#10;#    message = 0;&#10;#else:&#10;#    message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;&#10;#  message=&quot;Correct! RT=%.3f&quot; %(resp.rt)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.07" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="StimSetup"/>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practiceTrials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practiceTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoop">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoop" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="$Redo" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="ReDoLoop"/>\u000a    <LoopTerminator name="practiceTrials"/>\u000a    <Routine name="instrMain"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoopMain">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoopMain" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="$Redo" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="ReDoLoopMain"/>\u000a    <LoopTerminator name="trials"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p370
sg276
(lp371
sg278
I235841648
sg11
g334
sg6
g7
sg280
I1
sg20
I01
sg21
g22
sg281
g1
(g282
g283
(dp372
g285
g286
(g287
g288
g289
S'b'
tRp373
(I1
(I1
I1
tg291
I00
S'\x00\x00\x80?'
S'\x00'
Ntbsg17
g306
(g288
(I0
tS'b'
tRp374
(I1
(I1
I1
tg308
I00
(lp375
S'h'
atbsg18
g286
(g287
g288
g289
S'b'
tRp376
(I1
(I1
I1
tg291
I00
S'\x00\x00\x80?'
S'\x00'
Ntbsg292
g286
(g287
g288
g289
S'b'
tRp377
(I1
(I1
I1
tg291
I00
S'\x00\x00\x00\x00'
S'\x00'
Ntbsg19
g286
(g287
g288
g289
S'b'
tRp378
(I1
(I1
I1
tg291
I00
S'\xd8(\xab>'
S'\x00'
NtbstRp379
(dp380
g296
(dp381
g285
I01
sg17
I00
sg19
I01
sg292
I01
sg18
I01
ssg298
g368
sg299
(lp382
g285
ag292
ag17
ag18
ag19
asg301
(lp383
I1
aI1
asbsg303
g347
sg305
g306
(g288
(I0
tS'b'
tRp384
(I1
(I1
I1
tg54
I00
S'\x00\x00\x00\x00'
tbsg310
I01
sg311
I1
sg312
I-1
sg313
(lp385
Nasg324
Nsg325
g87
sg326
I1
sg327
I0
sg328
I1
sg329
I01
sbag1
(g271
g3
NtRp386
(dp387
g274
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="code_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="#Redo = 1&#10;&#10;import random&#10;&#10;Integers = [1, 2, 3, 4, 5, 6, 7, 8]&#10;&#10;if Redo == 1:&#10;    ConditionChoice = random.choice(Integers)&#10;    if ConditionChoice == 1:&#10;        CurrentStimulus = ConditionOne['fileName']&#10;    elif ConditionChoice == 2:&#10;        CurrentStimulus = ConditionTwo['fileName']&#10;    elif ConditionChoice == 3:&#10;        CurrentStimulus = ConditionThree['fileName']&#10;    elif ConditionChoice == 4:&#10;        CurrentStimulus = ConditionFour['fileName']&#10;    elif ConditionChoice == 5:&#10;        CurrentStimulus = ConditionFive['fileName']&#10;    elif ConditionChoice == 6:&#10;        CurrentStimulus = ConditionSix['fileName']&#10;    elif ConditionChoice == 7:&#10;        CurrentStimulus = ConditionSeven['fileName']&#10;    elif ConditionChoice == 8:&#10;        CurrentStimulus = ConditionEight['fileName']" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'t', 'y', 'g', 'h'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$CurrentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[101, 101]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="StimSetup">\u000a      <CodeComponent name="code">\u000a        <Param name="Begin Experiment" val="import random&#10;Redo = 1&#10;colors = ['yellow', 'white', 'orange', 'magenta', 'green', 'gray', 'cyan', 'blue']&#10;shapes = ['triangle', 'square', 'line', 'invertedtriangle', 'hexagon', 'diamond', 'cross', 'circle']&#10;rewards = [0.5, 1, 2, 4] * 2&#10;conditions = ['go', 'go', 'go', 'go', 'stop', 'stop', 'stop', 'stop']&#10;trialDetailsList = []&#10;&#10;shuffle(colors)&#10;shuffle(shapes)&#10;&#10;for i, color in enumerate(colors): # cycle through each color and keep track of an index number&#10;    trialDetails = {} # a dictionary of key-value pairs&#10;    trialDetails['fileName'] = shapes[i] + color + '.gif'&#10;    trialDetails['reward'] = rewards[i]&#10;    trialDetails['condition'] = conditions[i]&#10;    trialDetailsList.append(trialDetails)&#10;&#10;shuffle(trialDetailsList) # do this now to ensure that order of presentation of rewards and conditions is also shuffled&#10;&#10;ConditionOne = trialDetailsList[0]&#10;ConditionTwo = trialDetailsList[1]&#10;ConditionThree = trialDetailsList[2]&#10;ConditionFour = trialDetailsList[3]&#10;ConditionFive = trialDetailsList[4]&#10;ConditionSix = trialDetailsList[5]&#10;ConditionSeven = trialDetailsList[6]&#10;ConditionEight = trialDetailsList[7]" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#message variable just needs some value at start&#10;message=0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="DisplayReward = random.randrange(1, 6)&#10;&#10;if resp.corr:#stored on last run routine&#10;    if DisplayReward == 1:&#10;            message = &quot;You won &quot; + str(0);&#10;    else: &#10;        if ConditionChoice == 1:&#10;            CurrentReward = ConditionOne['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 2:&#10;            CurrentReward = ConditionTwo['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 3:&#10;            CurrentReward = ConditionThree['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 4:&#10;            CurrentReward = ConditionFour['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 5:&#10;            CurrentReward = ConditionFive['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 6:&#10;            CurrentReward = ConditionSix['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 7:&#10;            CurrentReward = ConditionSeven['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 8:&#10;            CurrentReward = ConditionEight['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;elif resp.keys is None: #or len(key_resp.keys)&lt;1:&#10;#elif resp.rt == 0:&#10;    message =&quot;Too Slow&quot;&#10;else:&#10;  message=&quot;Wrong&quot;&#10;&#10;if resp.corr:#stored on last run routine&#10;    Redo = 1; &#10;else:&#10;    Redo = Redo + 1;&#10;&#10;#if DisplayReward == 1:&#10;#    message = 0;&#10;#else:&#10;#    message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;&#10;#  message=&quot;Correct! RT=%.3f&quot; %(resp.rt)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.07" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="StimSetup"/>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practiceTrials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practiceTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoop">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoop" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="$Redo" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="ReDoLoop"/>\u000a    <LoopTerminator name="practiceTrials"/>\u000a    <Routine name="instrMain"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoopMain">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoopMain" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="$Redo" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="ReDoLoopMain"/>\u000a    <LoopTerminator name="trials"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p388
sg276
(lp389
sg278
I235841648
sg11
g334
sg6
g7
sg280
I1
sg20
I01
sg21
g22
sg281
g1
(g282
g283
(dp390
g285
g286
(g287
g288
g289
S'b'
tRp391
(I1
(I1
I1
tg291
I00
S'\x00\x00\x80?'
S'\x00'
Ntbsg17
g306
(g288
(I0
tS'b'
tRp392
(I1
(I1
I1
tg308
I00
(lp393
S'g'
atbsg18
g286
(g287
g288
g289
S'b'
tRp394
(I1
(I1
I1
tg291
I00
S'\x00\x00\x80?'
S'\x00'
Ntbsg292
g286
(g287
g288
g289
S'b'
tRp395
(I1
(I1
I1
tg291
I00
S'\x00\x00\x00\x00'
S'\x00'
Ntbsg19
g286
(g287
g288
g289
S'b'
tRp396
(I1
(I1
I1
tg291
I00
S'4\xdf\x19?'
S'\x00'
NtbstRp397
(dp398
g296
(dp399
g285
I01
sg17
I00
sg19
I01
sg292
I01
sg18
I01
ssg298
g386
sg299
(lp400
g285
ag292
ag17
ag18
ag19
asg301
(lp401
I1
aI1
asbsg303
g347
sg305
g306
(g288
(I0
tS'b'
tRp402
(I1
(I1
I1
tg54
I00
S'\x00\x00\x00\x00'
tbsg310
I01
sg311
I1
sg312
I-1
sg313
(lp403
Nasg324
Nsg325
g103
sg326
I1
sg327
I0
sg328
I1
sg329
I01
sbag1
(g271
g3
NtRp404
(dp405
g274
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="code_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="#Redo = 1&#10;&#10;import random&#10;&#10;Integers = [1, 2, 3, 4, 5, 6, 7, 8]&#10;&#10;if Redo == 1:&#10;    ConditionChoice = random.choice(Integers)&#10;    if ConditionChoice == 1:&#10;        CurrentStimulus = ConditionOne['fileName']&#10;    elif ConditionChoice == 2:&#10;        CurrentStimulus = ConditionTwo['fileName']&#10;    elif ConditionChoice == 3:&#10;        CurrentStimulus = ConditionThree['fileName']&#10;    elif ConditionChoice == 4:&#10;        CurrentStimulus = ConditionFour['fileName']&#10;    elif ConditionChoice == 5:&#10;        CurrentStimulus = ConditionFive['fileName']&#10;    elif ConditionChoice == 6:&#10;        CurrentStimulus = ConditionSix['fileName']&#10;    elif ConditionChoice == 7:&#10;        CurrentStimulus = ConditionSeven['fileName']&#10;    elif ConditionChoice == 8:&#10;        CurrentStimulus = ConditionEight['fileName']" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'t', 'y', 'g', 'h'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$CurrentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[101, 101]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="StimSetup">\u000a      <CodeComponent name="code">\u000a        <Param name="Begin Experiment" val="import random&#10;Redo = 1&#10;colors = ['yellow', 'white', 'orange', 'magenta', 'green', 'gray', 'cyan', 'blue']&#10;shapes = ['triangle', 'square', 'line', 'invertedtriangle', 'hexagon', 'diamond', 'cross', 'circle']&#10;rewards = [0.5, 1, 2, 4] * 2&#10;conditions = ['go', 'go', 'go', 'go', 'stop', 'stop', 'stop', 'stop']&#10;trialDetailsList = []&#10;&#10;shuffle(colors)&#10;shuffle(shapes)&#10;&#10;for i, color in enumerate(colors): # cycle through each color and keep track of an index number&#10;    trialDetails = {} # a dictionary of key-value pairs&#10;    trialDetails['fileName'] = shapes[i] + color + '.gif'&#10;    trialDetails['reward'] = rewards[i]&#10;    trialDetails['condition'] = conditions[i]&#10;    trialDetailsList.append(trialDetails)&#10;&#10;shuffle(trialDetailsList) # do this now to ensure that order of presentation of rewards and conditions is also shuffled&#10;&#10;ConditionOne = trialDetailsList[0]&#10;ConditionTwo = trialDetailsList[1]&#10;ConditionThree = trialDetailsList[2]&#10;ConditionFour = trialDetailsList[3]&#10;ConditionFive = trialDetailsList[4]&#10;ConditionSix = trialDetailsList[5]&#10;ConditionSeven = trialDetailsList[6]&#10;ConditionEight = trialDetailsList[7]" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#message variable just needs some value at start&#10;message=0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="DisplayReward = random.randrange(1, 6)&#10;&#10;if resp.corr:#stored on last run routine&#10;    if DisplayReward == 1:&#10;            message = &quot;You won &quot; + str(0);&#10;    else: &#10;        if ConditionChoice == 1:&#10;            CurrentReward = ConditionOne['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 2:&#10;            CurrentReward = ConditionTwo['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 3:&#10;            CurrentReward = ConditionThree['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 4:&#10;            CurrentReward = ConditionFour['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 5:&#10;            CurrentReward = ConditionFive['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 6:&#10;            CurrentReward = ConditionSix['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 7:&#10;            CurrentReward = ConditionSeven['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 8:&#10;            CurrentReward = ConditionEight['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;elif resp.keys is None: #or len(key_resp.keys)&lt;1:&#10;#elif resp.rt == 0:&#10;    message =&quot;Too Slow&quot;&#10;else:&#10;  message=&quot;Wrong&quot;&#10;&#10;if resp.corr:#stored on last run routine&#10;    Redo = 1; &#10;else:&#10;    Redo = Redo + 1;&#10;&#10;#if DisplayReward == 1:&#10;#    message = 0;&#10;#else:&#10;#    message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;&#10;#  message=&quot;Correct! RT=%.3f&quot; %(resp.rt)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.07" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="StimSetup"/>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practiceTrials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practiceTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoop">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoop" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="$Redo" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="ReDoLoop"/>\u000a    <LoopTerminator name="practiceTrials"/>\u000a    <Routine name="instrMain"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoopMain">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoopMain" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="$Redo" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="ReDoLoopMain"/>\u000a    <LoopTerminator name="trials"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p406
sg276
(lp407
sg278
I235841648
sg11
g334
sg6
g7
sg280
I1
sg20
I01
sg21
g22
sg281
g1
(g282
g283
(dp408
g285
g286
(g287
g288
g289
S'b'
tRp409
(I1
(I1
I1
tg291
I00
S'\x00\x00\x80?'
S'\x00'
Ntbsg17
g306
(g288
(I0
tS'b'
tRp410
(I1
(I1
I1
tg308
I00
(lp411
S't'
atbsg18
g286
(g287
g288
g289
S'b'
tRp412
(I1
(I1
I1
tg291
I00
S'\x00\x00\x80?'
S'\x00'
Ntbsg292
g286
(g287
g288
g289
S'b'
tRp413
(I1
(I1
I1
tg291
I00
S'\x00\x00\x00\x00'
S'\x00'
Ntbsg19
g286
(g287
g288
g289
S'b'
tRp414
(I1
(I1
I1
tg291
I00
S'H=\xbc>'
S'\x00'
NtbstRp415
(dp416
g296
(dp417
g285
I01
sg17
I00
sg19
I01
sg292
I01
sg18
I01
ssg298
g404
sg299
(lp418
g285
ag292
ag17
ag18
ag19
asg301
(lp419
I1
aI1
asbsg303
g347
sg305
g306
(g288
(I0
tS'b'
tRp420
(I1
(I1
I1
tg54
I00
S'\x00\x00\x00\x00'
tbsg310
I01
sg311
I1
sg312
I-1
sg313
(lp421
Nasg324
Nsg325
g119
sg326
I1
sg327
I0
sg328
I1
sg329
I01
sbag1
(g271
g3
NtRp422
(dp423
g274
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="code_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="#Redo = 1&#10;&#10;import random&#10;&#10;Integers = [1, 2, 3, 4, 5, 6, 7, 8]&#10;&#10;if Redo == 1:&#10;    ConditionChoice = random.choice(Integers)&#10;    if ConditionChoice == 1:&#10;        CurrentStimulus = ConditionOne['fileName']&#10;    elif ConditionChoice == 2:&#10;        CurrentStimulus = ConditionTwo['fileName']&#10;    elif ConditionChoice == 3:&#10;        CurrentStimulus = ConditionThree['fileName']&#10;    elif ConditionChoice == 4:&#10;        CurrentStimulus = ConditionFour['fileName']&#10;    elif ConditionChoice == 5:&#10;        CurrentStimulus = ConditionFive['fileName']&#10;    elif ConditionChoice == 6:&#10;        CurrentStimulus = ConditionSix['fileName']&#10;    elif ConditionChoice == 7:&#10;        CurrentStimulus = ConditionSeven['fileName']&#10;    elif ConditionChoice == 8:&#10;        CurrentStimulus = ConditionEight['fileName']" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'t', 'y', 'g', 'h'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$CurrentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[101, 101]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="StimSetup">\u000a      <CodeComponent name="code">\u000a        <Param name="Begin Experiment" val="import random&#10;Redo = 1&#10;colors = ['yellow', 'white', 'orange', 'magenta', 'green', 'gray', 'cyan', 'blue']&#10;shapes = ['triangle', 'square', 'line', 'invertedtriangle', 'hexagon', 'diamond', 'cross', 'circle']&#10;rewards = [0.5, 1, 2, 4] * 2&#10;conditions = ['go', 'go', 'go', 'go', 'stop', 'stop', 'stop', 'stop']&#10;trialDetailsList = []&#10;&#10;shuffle(colors)&#10;shuffle(shapes)&#10;&#10;for i, color in enumerate(colors): # cycle through each color and keep track of an index number&#10;    trialDetails = {} # a dictionary of key-value pairs&#10;    trialDetails['fileName'] = shapes[i] + color + '.gif'&#10;    trialDetails['reward'] = rewards[i]&#10;    trialDetails['condition'] = conditions[i]&#10;    trialDetailsList.append(trialDetails)&#10;&#10;shuffle(trialDetailsList) # do this now to ensure that order of presentation of rewards and conditions is also shuffled&#10;&#10;ConditionOne = trialDetailsList[0]&#10;ConditionTwo = trialDetailsList[1]&#10;ConditionThree = trialDetailsList[2]&#10;ConditionFour = trialDetailsList[3]&#10;ConditionFive = trialDetailsList[4]&#10;ConditionSix = trialDetailsList[5]&#10;ConditionSeven = trialDetailsList[6]&#10;ConditionEight = trialDetailsList[7]" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#message variable just needs some value at start&#10;message=0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="DisplayReward = random.randrange(1, 6)&#10;&#10;if resp.corr:#stored on last run routine&#10;    if DisplayReward == 1:&#10;            message = &quot;You won &quot; + str(0);&#10;    else: &#10;        if ConditionChoice == 1:&#10;            CurrentReward = ConditionOne['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 2:&#10;            CurrentReward = ConditionTwo['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 3:&#10;            CurrentReward = ConditionThree['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 4:&#10;            CurrentReward = ConditionFour['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 5:&#10;            CurrentReward = ConditionFive['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 6:&#10;            CurrentReward = ConditionSix['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 7:&#10;            CurrentReward = ConditionSeven['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 8:&#10;            CurrentReward = ConditionEight['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;elif resp.keys is None: #or len(key_resp.keys)&lt;1:&#10;#elif resp.rt == 0:&#10;    message =&quot;Too Slow&quot;&#10;else:&#10;  message=&quot;Wrong&quot;&#10;&#10;if resp.corr:#stored on last run routine&#10;    Redo = 1; &#10;else:&#10;    Redo = Redo + 1;&#10;&#10;#if DisplayReward == 1:&#10;#    message = 0;&#10;#else:&#10;#    message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;&#10;#  message=&quot;Correct! RT=%.3f&quot; %(resp.rt)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.07" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="StimSetup"/>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practiceTrials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practiceTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoop">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoop" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="$Redo" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="ReDoLoop"/>\u000a    <LoopTerminator name="practiceTrials"/>\u000a    <Routine name="instrMain"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoopMain">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoopMain" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="$Redo" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="ReDoLoopMain"/>\u000a    <LoopTerminator name="trials"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p424
sg276
(lp425
sg278
I235841648
sg11
g334
sg6
g7
sg280
I1
sg20
I01
sg21
g22
sg281
g1
(g282
g283
(dp426
g285
g286
(g287
g288
g289
S'b'
tRp427
(I1
(I1
I1
tg291
I00
S'\x00\x00\x80?'
S'\x00'
Ntbsg17
g306
(g288
(I0
tS'b'
tRp428
(I1
(I1
I1
tg308
I00
(lp429
S'h'
atbsg18
g286
(g287
g288
g289
S'b'
tRp430
(I1
(I1
I1
tg291
I00
S'\x00\x00\x80?'
S'\x00'
Ntbsg292
g286
(g287
g288
g289
S'b'
tRp431
(I1
(I1
I1
tg291
I00
S'\x00\x00\x00\x00'
S'\x00'
Ntbsg19
g286
(g287
g288
g289
S'b'
tRp432
(I1
(I1
I1
tg291
I00
S'\xd8\xa1\xb3>'
S'\x00'
NtbstRp433
(dp434
g296
(dp435
g285
I01
sg17
I00
sg19
I01
sg292
I01
sg18
I01
ssg298
g422
sg299
(lp436
g285
ag292
ag17
ag18
ag19
asg301
(lp437
I1
aI1
asbsg303
g347
sg305
g306
(g288
(I0
tS'b'
tRp438
(I1
(I1
I1
tg54
I00
S'\x00\x00\x00\x00'
tbsg310
I01
sg311
I1
sg312
I-1
sg313
(lp439
Nasg324
Nsg325
g135
sg326
I1
sg327
I0
sg328
I1
sg329
I01
sbag1
(g271
g3
NtRp440
(dp441
g274
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="code_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="#Redo = 1&#10;&#10;import random&#10;&#10;Integers = [1, 2, 3, 4, 5, 6, 7, 8]&#10;&#10;if Redo == 1:&#10;    ConditionChoice = random.choice(Integers)&#10;    if ConditionChoice == 1:&#10;        CurrentStimulus = ConditionOne['fileName']&#10;    elif ConditionChoice == 2:&#10;        CurrentStimulus = ConditionTwo['fileName']&#10;    elif ConditionChoice == 3:&#10;        CurrentStimulus = ConditionThree['fileName']&#10;    elif ConditionChoice == 4:&#10;        CurrentStimulus = ConditionFour['fileName']&#10;    elif ConditionChoice == 5:&#10;        CurrentStimulus = ConditionFive['fileName']&#10;    elif ConditionChoice == 6:&#10;        CurrentStimulus = ConditionSix['fileName']&#10;    elif ConditionChoice == 7:&#10;        CurrentStimulus = ConditionSeven['fileName']&#10;    elif ConditionChoice == 8:&#10;        CurrentStimulus = ConditionEight['fileName']" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'t', 'y', 'g', 'h'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$CurrentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[101, 101]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="StimSetup">\u000a      <CodeComponent name="code">\u000a        <Param name="Begin Experiment" val="import random&#10;Redo = 1&#10;colors = ['yellow', 'white', 'orange', 'magenta', 'green', 'gray', 'cyan', 'blue']&#10;shapes = ['triangle', 'square', 'line', 'invertedtriangle', 'hexagon', 'diamond', 'cross', 'circle']&#10;rewards = [0.5, 1, 2, 4] * 2&#10;conditions = ['go', 'go', 'go', 'go', 'stop', 'stop', 'stop', 'stop']&#10;trialDetailsList = []&#10;&#10;shuffle(colors)&#10;shuffle(shapes)&#10;&#10;for i, color in enumerate(colors): # cycle through each color and keep track of an index number&#10;    trialDetails = {} # a dictionary of key-value pairs&#10;    trialDetails['fileName'] = shapes[i] + color + '.gif'&#10;    trialDetails['reward'] = rewards[i]&#10;    trialDetails['condition'] = conditions[i]&#10;    trialDetailsList.append(trialDetails)&#10;&#10;shuffle(trialDetailsList) # do this now to ensure that order of presentation of rewards and conditions is also shuffled&#10;&#10;ConditionOne = trialDetailsList[0]&#10;ConditionTwo = trialDetailsList[1]&#10;ConditionThree = trialDetailsList[2]&#10;ConditionFour = trialDetailsList[3]&#10;ConditionFive = trialDetailsList[4]&#10;ConditionSix = trialDetailsList[5]&#10;ConditionSeven = trialDetailsList[6]&#10;ConditionEight = trialDetailsList[7]" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#message variable just needs some value at start&#10;message=0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="DisplayReward = random.randrange(1, 6)&#10;&#10;if resp.corr:#stored on last run routine&#10;    if DisplayReward == 1:&#10;            message = &quot;You won &quot; + str(0);&#10;    else: &#10;        if ConditionChoice == 1:&#10;            CurrentReward = ConditionOne['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 2:&#10;            CurrentReward = ConditionTwo['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 3:&#10;            CurrentReward = ConditionThree['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 4:&#10;            CurrentReward = ConditionFour['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 5:&#10;            CurrentReward = ConditionFive['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 6:&#10;            CurrentReward = ConditionSix['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 7:&#10;            CurrentReward = ConditionSeven['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 8:&#10;            CurrentReward = ConditionEight['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;elif resp.keys is None: #or len(key_resp.keys)&lt;1:&#10;#elif resp.rt == 0:&#10;    message =&quot;Too Slow&quot;&#10;else:&#10;  message=&quot;Wrong&quot;&#10;&#10;if resp.corr:#stored on last run routine&#10;    Redo = 1; &#10;else:&#10;    Redo = Redo + 1;&#10;&#10;#if DisplayReward == 1:&#10;#    message = 0;&#10;#else:&#10;#    message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;&#10;#  message=&quot;Correct! RT=%.3f&quot; %(resp.rt)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.07" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="StimSetup"/>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practiceTrials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practiceTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoop">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoop" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="$Redo" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="ReDoLoop"/>\u000a    <LoopTerminator name="practiceTrials"/>\u000a    <Routine name="instrMain"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoopMain">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoopMain" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="$Redo" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="ReDoLoopMain"/>\u000a    <LoopTerminator name="trials"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p442
sg276
(lp443
sg278
I235841648
sg11
g334
sg6
g7
sg280
I1
sg20
I01
sg21
g22
sg281
g1
(g282
g283
(dp444
g285
g286
(g287
g288
g289
S'b'
tRp445
(I1
(I1
I1
tg291
I00
S'\x00\x00\x80?'
S'\x00'
Ntbsg17
g306
(g288
(I0
tS'b'
tRp446
(I1
(I1
I1
tg308
I00
(lp447
S't'
atbsg18
g286
(g287
g288
g289
S'b'
tRp448
(I1
(I1
I1
tg291
I00
S'\x00\x00\x80?'
S'\x00'
Ntbsg292
g286
(g287
g288
g289
S'b'
tRp449
(I1
(I1
I1
tg291
I00
S'\x00\x00\x00\x00'
S'\x00'
Ntbsg19
g286
(g287
g288
g289
S'b'
tRp450
(I1
(I1
I1
tg291
I00
S'\xe0U\xef>'
S'\x00'
NtbstRp451
(dp452
g296
(dp453
g285
I01
sg17
I00
sg19
I01
sg292
I01
sg18
I01
ssg298
g440
sg299
(lp454
g285
ag292
ag17
ag18
ag19
asg301
(lp455
I1
aI1
asbsg303
g347
sg305
g306
(g288
(I0
tS'b'
tRp456
(I1
(I1
I1
tg54
I00
S'\x00\x00\x00\x00'
tbsg310
I01
sg311
I1
sg312
I-1
sg313
(lp457
Nasg324
Nsg325
g151
sg326
I1
sg327
I0
sg328
I1
sg329
I01
sbag1
(g271
g3
NtRp458
(dp459
g274
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="code_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="#Redo = 1&#10;&#10;import random&#10;&#10;Integers = [1, 2, 3, 4, 5, 6, 7, 8]&#10;&#10;if Redo == 1:&#10;    ConditionChoice = random.choice(Integers)&#10;    if ConditionChoice == 1:&#10;        CurrentStimulus = ConditionOne['fileName']&#10;    elif ConditionChoice == 2:&#10;        CurrentStimulus = ConditionTwo['fileName']&#10;    elif ConditionChoice == 3:&#10;        CurrentStimulus = ConditionThree['fileName']&#10;    elif ConditionChoice == 4:&#10;        CurrentStimulus = ConditionFour['fileName']&#10;    elif ConditionChoice == 5:&#10;        CurrentStimulus = ConditionFive['fileName']&#10;    elif ConditionChoice == 6:&#10;        CurrentStimulus = ConditionSix['fileName']&#10;    elif ConditionChoice == 7:&#10;        CurrentStimulus = ConditionSeven['fileName']&#10;    elif ConditionChoice == 8:&#10;        CurrentStimulus = ConditionEight['fileName']" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'t', 'y', 'g', 'h'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$CurrentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[101, 101]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="StimSetup">\u000a      <CodeComponent name="code">\u000a        <Param name="Begin Experiment" val="import random&#10;Redo = 1&#10;colors = ['yellow', 'white', 'orange', 'magenta', 'green', 'gray', 'cyan', 'blue']&#10;shapes = ['triangle', 'square', 'line', 'invertedtriangle', 'hexagon', 'diamond', 'cross', 'circle']&#10;rewards = [0.5, 1, 2, 4] * 2&#10;conditions = ['go', 'go', 'go', 'go', 'stop', 'stop', 'stop', 'stop']&#10;trialDetailsList = []&#10;&#10;shuffle(colors)&#10;shuffle(shapes)&#10;&#10;for i, color in enumerate(colors): # cycle through each color and keep track of an index number&#10;    trialDetails = {} # a dictionary of key-value pairs&#10;    trialDetails['fileName'] = shapes[i] + color + '.gif'&#10;    trialDetails['reward'] = rewards[i]&#10;    trialDetails['condition'] = conditions[i]&#10;    trialDetailsList.append(trialDetails)&#10;&#10;shuffle(trialDetailsList) # do this now to ensure that order of presentation of rewards and conditions is also shuffled&#10;&#10;ConditionOne = trialDetailsList[0]&#10;ConditionTwo = trialDetailsList[1]&#10;ConditionThree = trialDetailsList[2]&#10;ConditionFour = trialDetailsList[3]&#10;ConditionFive = trialDetailsList[4]&#10;ConditionSix = trialDetailsList[5]&#10;ConditionSeven = trialDetailsList[6]&#10;ConditionEight = trialDetailsList[7]" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#message variable just needs some value at start&#10;message=0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="DisplayReward = random.randrange(1, 6)&#10;&#10;if resp.corr:#stored on last run routine&#10;    if DisplayReward == 1:&#10;            message = &quot;You won &quot; + str(0);&#10;    else: &#10;        if ConditionChoice == 1:&#10;            CurrentReward = ConditionOne['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 2:&#10;            CurrentReward = ConditionTwo['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 3:&#10;            CurrentReward = ConditionThree['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 4:&#10;            CurrentReward = ConditionFour['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 5:&#10;            CurrentReward = ConditionFive['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 6:&#10;            CurrentReward = ConditionSix['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 7:&#10;            CurrentReward = ConditionSeven['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 8:&#10;            CurrentReward = ConditionEight['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;elif resp.keys is None: #or len(key_resp.keys)&lt;1:&#10;#elif resp.rt == 0:&#10;    message =&quot;Too Slow&quot;&#10;else:&#10;  message=&quot;Wrong&quot;&#10;&#10;if resp.corr:#stored on last run routine&#10;    Redo = 1; &#10;else:&#10;    Redo = Redo + 1;&#10;&#10;#if DisplayReward == 1:&#10;#    message = 0;&#10;#else:&#10;#    message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;&#10;#  message=&quot;Correct! RT=%.3f&quot; %(resp.rt)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.07" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="StimSetup"/>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practiceTrials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practiceTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoop">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoop" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="$Redo" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="ReDoLoop"/>\u000a    <LoopTerminator name="practiceTrials"/>\u000a    <Routine name="instrMain"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoopMain">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoopMain" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="$Redo" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="ReDoLoopMain"/>\u000a    <LoopTerminator name="trials"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p460
sg276
(lp461
sg278
I235841648
sg11
g334
sg6
g7
sg280
I1
sg20
I01
sg21
g22
sg281
g1
(g282
g283
(dp462
g285
g286
(g287
g288
g289
S'b'
tRp463
(I1
(I1
I1
tg291
I00
S'\x00\x00\x80?'
S'\x00'
Ntbsg17
g306
(g288
(I0
tS'b'
tRp464
(I1
(I1
I1
tg308
I00
(lp465
S'h'
atbsg18
g286
(g287
g288
g289
S'b'
tRp466
(I1
(I1
I1
tg291
I00
S'\x00\x00\x00\x00'
S'\x00'
Ntbsg292
g286
(g287
g288
g289
S'b'
tRp467
(I1
(I1
I1
tg291
I00
S'\x00\x00\x00\x00'
S'\x00'
Ntbsg19
g286
(g287
g288
g289
S'b'
tRp468
(I1
(I1
I1
tg291
I00
S'\xa8V\xef>'
S'\x00'
NtbstRp469
(dp470
g296
(dp471
g285
I01
sg17
I00
sg19
I01
sg292
I01
sg18
I01
ssg298
g458
sg299
(lp472
g285
ag292
ag17
ag18
ag19
asg301
(lp473
I1
aI1
asbsg303
g347
sg305
g306
(g288
(I0
tS'b'
tRp474
(I1
(I1
I1
tg54
I00
S'\x00\x00\x00\x00'
tbsg310
I01
sg311
I1
sg312
I-1
sg313
(lp475
Nasg324
Nsg325
g167
sg326
I1
sg327
I0
sg328
I1
sg329
I01
sbag1
(g271
g3
NtRp476
(dp477
g274
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="code_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="#Redo = 1&#10;&#10;import random&#10;&#10;Integers = [1, 2, 3, 4, 5, 6, 7, 8]&#10;&#10;if Redo == 1:&#10;    ConditionChoice = random.choice(Integers)&#10;    if ConditionChoice == 1:&#10;        CurrentStimulus = ConditionOne['fileName']&#10;    elif ConditionChoice == 2:&#10;        CurrentStimulus = ConditionTwo['fileName']&#10;    elif ConditionChoice == 3:&#10;        CurrentStimulus = ConditionThree['fileName']&#10;    elif ConditionChoice == 4:&#10;        CurrentStimulus = ConditionFour['fileName']&#10;    elif ConditionChoice == 5:&#10;        CurrentStimulus = ConditionFive['fileName']&#10;    elif ConditionChoice == 6:&#10;        CurrentStimulus = ConditionSix['fileName']&#10;    elif ConditionChoice == 7:&#10;        CurrentStimulus = ConditionSeven['fileName']&#10;    elif ConditionChoice == 8:&#10;        CurrentStimulus = ConditionEight['fileName']" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'t', 'y', 'g', 'h'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$CurrentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[101, 101]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="StimSetup">\u000a      <CodeComponent name="code">\u000a        <Param name="Begin Experiment" val="import random&#10;Redo = 1&#10;colors = ['yellow', 'white', 'orange', 'magenta', 'green', 'gray', 'cyan', 'blue']&#10;shapes = ['triangle', 'square', 'line', 'invertedtriangle', 'hexagon', 'diamond', 'cross', 'circle']&#10;rewards = [0.5, 1, 2, 4] * 2&#10;conditions = ['go', 'go', 'go', 'go', 'stop', 'stop', 'stop', 'stop']&#10;trialDetailsList = []&#10;&#10;shuffle(colors)&#10;shuffle(shapes)&#10;&#10;for i, color in enumerate(colors): # cycle through each color and keep track of an index number&#10;    trialDetails = {} # a dictionary of key-value pairs&#10;    trialDetails['fileName'] = shapes[i] + color + '.gif'&#10;    trialDetails['reward'] = rewards[i]&#10;    trialDetails['condition'] = conditions[i]&#10;    trialDetailsList.append(trialDetails)&#10;&#10;shuffle(trialDetailsList) # do this now to ensure that order of presentation of rewards and conditions is also shuffled&#10;&#10;ConditionOne = trialDetailsList[0]&#10;ConditionTwo = trialDetailsList[1]&#10;ConditionThree = trialDetailsList[2]&#10;ConditionFour = trialDetailsList[3]&#10;ConditionFive = trialDetailsList[4]&#10;ConditionSix = trialDetailsList[5]&#10;ConditionSeven = trialDetailsList[6]&#10;ConditionEight = trialDetailsList[7]" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#message variable just needs some value at start&#10;message=0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="DisplayReward = random.randrange(1, 6)&#10;&#10;if resp.corr:#stored on last run routine&#10;    if DisplayReward == 1:&#10;            message = &quot;You won &quot; + str(0);&#10;    else: &#10;        if ConditionChoice == 1:&#10;            CurrentReward = ConditionOne['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 2:&#10;            CurrentReward = ConditionTwo['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 3:&#10;            CurrentReward = ConditionThree['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 4:&#10;            CurrentReward = ConditionFour['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 5:&#10;            CurrentReward = ConditionFive['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 6:&#10;            CurrentReward = ConditionSix['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 7:&#10;            CurrentReward = ConditionSeven['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 8:&#10;            CurrentReward = ConditionEight['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;elif resp.keys is None: #or len(key_resp.keys)&lt;1:&#10;#elif resp.rt == 0:&#10;    message =&quot;Too Slow&quot;&#10;else:&#10;  message=&quot;Wrong&quot;&#10;&#10;if resp.corr:#stored on last run routine&#10;    Redo = 1; &#10;else:&#10;    Redo = Redo + 1;&#10;&#10;#if DisplayReward == 1:&#10;#    message = 0;&#10;#else:&#10;#    message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;&#10;#  message=&quot;Correct! RT=%.3f&quot; %(resp.rt)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.07" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="StimSetup"/>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practiceTrials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practiceTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoop">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoop" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="$Redo" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="ReDoLoop"/>\u000a    <LoopTerminator name="practiceTrials"/>\u000a    <Routine name="instrMain"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoopMain">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoopMain" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="$Redo" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="ReDoLoopMain"/>\u000a    <LoopTerminator name="trials"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p478
sg276
(lp479
sg278
I235841648
sg11
g298
sg6
g7
sg280
I1
sg20
I01
sg21
g22
sg281
g1
(g282
g283
(dp480
g285
g286
(g287
g288
g289
S'b'
tRp481
(I1
(I4
I1
tg291
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00'
Ntbsg292
g286
(g287
g288
g289
S'b'
tRp482
(I1
(I4
I1
tg291
I00
S'\x00\x00@@\x00\x00\x80?\x00\x00\x00@\x00\x00\x00\x00'
S'\x00\x00\x00\x00'
NtbstRp483
(dp484
g296
(dp485
g285
I01
sg292
I01
ssg298
g476
sg299
(lp486
g285
ag292
asg301
(lp487
I4
aI1
asbsg303
g304
sg305
g306
(g288
(I0
tS'b'
tRp488
(I1
(I4
I1
tg308
I00
(lp489
I3
aI1
aI2
aI0
atbsg310
I01
sg311
I1
sg312
I-1
sg313
(lp490
g1
(g315
g283
(dp491
g188
I200
sg186
Vy
sg191
I200
stRp492
ag1
(g315
g283
(dp493
g188
I-200
sg186
Vt
sg191
I200
stRp494
ag1
(g315
g283
(dp495
g188
I200
sg186
Vh
sg191
I-200
stRp496
ag1
(g315
g283
(dp497
g188
I-200
sg186
Vg
sg191
I-200
stRp498
asg324
Nsg325
I0
sg326
I4
sg327
I0
sg328
I4
sg329
I01
sbag1
(g271
g3
NtRp499
(dp500
g274
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="code_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="#Redo = 1&#10;&#10;import random&#10;&#10;Integers = [1, 2, 3, 4, 5, 6, 7, 8]&#10;&#10;if Redo == 1:&#10;    ConditionChoice = random.choice(Integers)&#10;    if ConditionChoice == 1:&#10;        CurrentStimulus = ConditionOne['fileName']&#10;    elif ConditionChoice == 2:&#10;        CurrentStimulus = ConditionTwo['fileName']&#10;    elif ConditionChoice == 3:&#10;        CurrentStimulus = ConditionThree['fileName']&#10;    elif ConditionChoice == 4:&#10;        CurrentStimulus = ConditionFour['fileName']&#10;    elif ConditionChoice == 5:&#10;        CurrentStimulus = ConditionFive['fileName']&#10;    elif ConditionChoice == 6:&#10;        CurrentStimulus = ConditionSix['fileName']&#10;    elif ConditionChoice == 7:&#10;        CurrentStimulus = ConditionSeven['fileName']&#10;    elif ConditionChoice == 8:&#10;        CurrentStimulus = ConditionEight['fileName']" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'t', 'y', 'g', 'h'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$CurrentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[101, 101]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="StimSetup">\u000a      <CodeComponent name="code">\u000a        <Param name="Begin Experiment" val="import random&#10;Redo = 1&#10;colors = ['yellow', 'white', 'orange', 'magenta', 'green', 'gray', 'cyan', 'blue']&#10;shapes = ['triangle', 'square', 'line', 'invertedtriangle', 'hexagon', 'diamond', 'cross', 'circle']&#10;rewards = [0.5, 1, 2, 4] * 2&#10;conditions = ['go', 'go', 'go', 'go', 'stop', 'stop', 'stop', 'stop']&#10;trialDetailsList = []&#10;&#10;shuffle(colors)&#10;shuffle(shapes)&#10;&#10;for i, color in enumerate(colors): # cycle through each color and keep track of an index number&#10;    trialDetails = {} # a dictionary of key-value pairs&#10;    trialDetails['fileName'] = shapes[i] + color + '.gif'&#10;    trialDetails['reward'] = rewards[i]&#10;    trialDetails['condition'] = conditions[i]&#10;    trialDetailsList.append(trialDetails)&#10;&#10;shuffle(trialDetailsList) # do this now to ensure that order of presentation of rewards and conditions is also shuffled&#10;&#10;ConditionOne = trialDetailsList[0]&#10;ConditionTwo = trialDetailsList[1]&#10;ConditionThree = trialDetailsList[2]&#10;ConditionFour = trialDetailsList[3]&#10;ConditionFive = trialDetailsList[4]&#10;ConditionSix = trialDetailsList[5]&#10;ConditionSeven = trialDetailsList[6]&#10;ConditionEight = trialDetailsList[7]" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#message variable just needs some value at start&#10;message=0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="DisplayReward = random.randrange(1, 6)&#10;&#10;if resp.corr:#stored on last run routine&#10;    if DisplayReward == 1:&#10;            message = &quot;You won &quot; + str(0);&#10;    else: &#10;        if ConditionChoice == 1:&#10;            CurrentReward = ConditionOne['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 2:&#10;            CurrentReward = ConditionTwo['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 3:&#10;            CurrentReward = ConditionThree['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 4:&#10;            CurrentReward = ConditionFour['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 5:&#10;            CurrentReward = ConditionFive['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 6:&#10;            CurrentReward = ConditionSix['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 7:&#10;            CurrentReward = ConditionSeven['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 8:&#10;            CurrentReward = ConditionEight['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;elif resp.keys is None: #or len(key_resp.keys)&lt;1:&#10;#elif resp.rt == 0:&#10;    message =&quot;Too Slow&quot;&#10;else:&#10;  message=&quot;Wrong&quot;&#10;&#10;if resp.corr:#stored on last run routine&#10;    Redo = 1; &#10;else:&#10;    Redo = Redo + 1;&#10;&#10;#if DisplayReward == 1:&#10;#    message = 0;&#10;#else:&#10;#    message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;&#10;#  message=&quot;Correct! RT=%.3f&quot; %(resp.rt)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.07" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="StimSetup"/>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practiceTrials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practiceTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoop">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoop" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="$Redo" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="ReDoLoop"/>\u000a    <LoopTerminator name="practiceTrials"/>\u000a    <Routine name="instrMain"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoopMain">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoopMain" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="$Redo" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="ReDoLoopMain"/>\u000a    <LoopTerminator name="trials"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p501
sg276
(lp502
sg278
I235841648
sg11
S'ReDoLoopMain'
p503
sg6
g7
sg280
I2
sg20
I01
sg21
g22
sg281
g1
(g282
g283
(dp504
g285
g286
(g287
g288
g289
S'b'
tRp505
(I1
(I1
I2
tg291
I00
S'\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00'
Ntbsg17
g306
(g288
(I0
tS'b'
tRp506
(I1
(I1
I2
tg308
I00
(lp507
S'g'
aS't'
atbsg18
g286
(g287
g288
g289
S'b'
tRp508
(I1
(I1
I2
tg291
I00
S'\x00\x00\x80?\x00\x00\x00\x00'
S'\x00\x00'
Ntbsg292
g286
(g287
g288
g289
S'b'
tRp509
(I1
(I1
I2
tg291
I00
S'\x00\x00\x00\x00\x00\x00\x80?'
S'\x00\x00'
Ntbsg19
g286
(g287
g288
g289
S'b'
tRp510
(I1
(I1
I2
tg291
I00
S'\xa8k\xde>\xc8\xf2*?'
S'\x00\x00'
NtbstRp511
(dp512
g296
(dp513
g285
I01
sg17
I00
sg19
I01
sg292
I01
sg18
I01
ssg298
g499
sg299
(lp514
g285
ag292
ag17
ag18
ag19
asg301
(lp515
I1
aI2
asbsg303
g347
sg305
g306
(g288
(I0
tS'b'
tRp516
(I1
(I1
I2
tg54
I01
S'\x00\x00\x00\x00\x00\x00\x00\x00'
tbsg310
I01
sg311
I2
sg312
I-1
sg313
(lp517
Nasg324
Nsg325
g199
sg326
I2
sg327
I0
sg328
I2
sg329
I01
sbag1
(g271
g3
NtRp518
(dp519
g274
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="code_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="#Redo = 1&#10;&#10;import random&#10;&#10;Integers = [1, 2, 3, 4, 5, 6, 7, 8]&#10;&#10;if Redo == 1:&#10;    ConditionChoice = random.choice(Integers)&#10;    if ConditionChoice == 1:&#10;        CurrentStimulus = ConditionOne['fileName']&#10;    elif ConditionChoice == 2:&#10;        CurrentStimulus = ConditionTwo['fileName']&#10;    elif ConditionChoice == 3:&#10;        CurrentStimulus = ConditionThree['fileName']&#10;    elif ConditionChoice == 4:&#10;        CurrentStimulus = ConditionFour['fileName']&#10;    elif ConditionChoice == 5:&#10;        CurrentStimulus = ConditionFive['fileName']&#10;    elif ConditionChoice == 6:&#10;        CurrentStimulus = ConditionSix['fileName']&#10;    elif ConditionChoice == 7:&#10;        CurrentStimulus = ConditionSeven['fileName']&#10;    elif ConditionChoice == 8:&#10;        CurrentStimulus = ConditionEight['fileName']" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'t', 'y', 'g', 'h'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$CurrentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[101, 101]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="StimSetup">\u000a      <CodeComponent name="code">\u000a        <Param name="Begin Experiment" val="import random&#10;Redo = 1&#10;colors = ['yellow', 'white', 'orange', 'magenta', 'green', 'gray', 'cyan', 'blue']&#10;shapes = ['triangle', 'square', 'line', 'invertedtriangle', 'hexagon', 'diamond', 'cross', 'circle']&#10;rewards = [0.5, 1, 2, 4] * 2&#10;conditions = ['go', 'go', 'go', 'go', 'stop', 'stop', 'stop', 'stop']&#10;trialDetailsList = []&#10;&#10;shuffle(colors)&#10;shuffle(shapes)&#10;&#10;for i, color in enumerate(colors): # cycle through each color and keep track of an index number&#10;    trialDetails = {} # a dictionary of key-value pairs&#10;    trialDetails['fileName'] = shapes[i] + color + '.gif'&#10;    trialDetails['reward'] = rewards[i]&#10;    trialDetails['condition'] = conditions[i]&#10;    trialDetailsList.append(trialDetails)&#10;&#10;shuffle(trialDetailsList) # do this now to ensure that order of presentation of rewards and conditions is also shuffled&#10;&#10;ConditionOne = trialDetailsList[0]&#10;ConditionTwo = trialDetailsList[1]&#10;ConditionThree = trialDetailsList[2]&#10;ConditionFour = trialDetailsList[3]&#10;ConditionFive = trialDetailsList[4]&#10;ConditionSix = trialDetailsList[5]&#10;ConditionSeven = trialDetailsList[6]&#10;ConditionEight = trialDetailsList[7]" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#message variable just needs some value at start&#10;message=0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="DisplayReward = random.randrange(1, 6)&#10;&#10;if resp.corr:#stored on last run routine&#10;    if DisplayReward == 1:&#10;            message = &quot;You won &quot; + str(0);&#10;    else: &#10;        if ConditionChoice == 1:&#10;            CurrentReward = ConditionOne['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 2:&#10;            CurrentReward = ConditionTwo['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 3:&#10;            CurrentReward = ConditionThree['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 4:&#10;            CurrentReward = ConditionFour['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 5:&#10;            CurrentReward = ConditionFive['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 6:&#10;            CurrentReward = ConditionSix['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 7:&#10;            CurrentReward = ConditionSeven['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 8:&#10;            CurrentReward = ConditionEight['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;elif resp.keys is None: #or len(key_resp.keys)&lt;1:&#10;#elif resp.rt == 0:&#10;    message =&quot;Too Slow&quot;&#10;else:&#10;  message=&quot;Wrong&quot;&#10;&#10;if resp.corr:#stored on last run routine&#10;    Redo = 1; &#10;else:&#10;    Redo = Redo + 1;&#10;&#10;#if DisplayReward == 1:&#10;#    message = 0;&#10;#else:&#10;#    message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;&#10;#  message=&quot;Correct! RT=%.3f&quot; %(resp.rt)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.07" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="StimSetup"/>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practiceTrials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practiceTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoop">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoop" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="$Redo" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="ReDoLoop"/>\u000a    <LoopTerminator name="practiceTrials"/>\u000a    <Routine name="instrMain"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoopMain">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoopMain" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="$Redo" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="ReDoLoopMain"/>\u000a    <LoopTerminator name="trials"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p520
sg276
(lp521
sg278
I235841648
sg11
g503
sg6
g7
sg280
I2
sg20
I01
sg21
g22
sg281
g1
(g282
g283
(dp522
g285
g286
(g287
g288
g289
S'b'
tRp523
(I1
(I1
I2
tg291
I00
S'\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00'
Ntbsg17
g306
(g288
(I0
tS'b'
tRp524
(I1
(I1
I2
tg308
I00
(lp525
S't'
aS't'
atbsg18
g286
(g287
g288
g289
S'b'
tRp526
(I1
(I1
I2
tg291
I00
S'\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00'
Ntbsg292
g286
(g287
g288
g289
S'b'
tRp527
(I1
(I1
I2
tg291
I00
S'\x00\x00\x00\x00\x00\x00\x80?'
S'\x00\x00'
Ntbsg19
g286
(g287
g288
g289
S'b'
tRp528
(I1
(I1
I2
tg291
I00
S'\xe8v\xde>\xd0\x9b\xb3>'
S'\x00\x00'
NtbstRp529
(dp530
g296
(dp531
g285
I01
sg17
I00
sg19
I01
sg292
I01
sg18
I01
ssg298
g518
sg299
(lp532
g285
ag292
ag17
ag18
ag19
asg301
(lp533
I1
aI2
asbsg303
g347
sg305
g306
(g288
(I0
tS'b'
tRp534
(I1
(I1
I2
tg54
I01
S'\x00\x00\x00\x00\x00\x00\x00\x00'
tbsg310
I01
sg311
I2
sg312
I-1
sg313
(lp535
Nasg324
Nsg325
g226
sg326
I2
sg327
I0
sg328
I2
sg329
I01
sbag1
(g271
g3
NtRp536
(dp537
g274
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="code_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="#Redo = 1&#10;&#10;import random&#10;&#10;Integers = [1, 2, 3, 4, 5, 6, 7, 8]&#10;&#10;if Redo == 1:&#10;    ConditionChoice = random.choice(Integers)&#10;    if ConditionChoice == 1:&#10;        CurrentStimulus = ConditionOne['fileName']&#10;    elif ConditionChoice == 2:&#10;        CurrentStimulus = ConditionTwo['fileName']&#10;    elif ConditionChoice == 3:&#10;        CurrentStimulus = ConditionThree['fileName']&#10;    elif ConditionChoice == 4:&#10;        CurrentStimulus = ConditionFour['fileName']&#10;    elif ConditionChoice == 5:&#10;        CurrentStimulus = ConditionFive['fileName']&#10;    elif ConditionChoice == 6:&#10;        CurrentStimulus = ConditionSix['fileName']&#10;    elif ConditionChoice == 7:&#10;        CurrentStimulus = ConditionSeven['fileName']&#10;    elif ConditionChoice == 8:&#10;        CurrentStimulus = ConditionEight['fileName']" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'t', 'y', 'g', 'h'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$CurrentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[101, 101]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="StimSetup">\u000a      <CodeComponent name="code">\u000a        <Param name="Begin Experiment" val="import random&#10;Redo = 1&#10;colors = ['yellow', 'white', 'orange', 'magenta', 'green', 'gray', 'cyan', 'blue']&#10;shapes = ['triangle', 'square', 'line', 'invertedtriangle', 'hexagon', 'diamond', 'cross', 'circle']&#10;rewards = [0.5, 1, 2, 4] * 2&#10;conditions = ['go', 'go', 'go', 'go', 'stop', 'stop', 'stop', 'stop']&#10;trialDetailsList = []&#10;&#10;shuffle(colors)&#10;shuffle(shapes)&#10;&#10;for i, color in enumerate(colors): # cycle through each color and keep track of an index number&#10;    trialDetails = {} # a dictionary of key-value pairs&#10;    trialDetails['fileName'] = shapes[i] + color + '.gif'&#10;    trialDetails['reward'] = rewards[i]&#10;    trialDetails['condition'] = conditions[i]&#10;    trialDetailsList.append(trialDetails)&#10;&#10;shuffle(trialDetailsList) # do this now to ensure that order of presentation of rewards and conditions is also shuffled&#10;&#10;ConditionOne = trialDetailsList[0]&#10;ConditionTwo = trialDetailsList[1]&#10;ConditionThree = trialDetailsList[2]&#10;ConditionFour = trialDetailsList[3]&#10;ConditionFive = trialDetailsList[4]&#10;ConditionSix = trialDetailsList[5]&#10;ConditionSeven = trialDetailsList[6]&#10;ConditionEight = trialDetailsList[7]" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#message variable just needs some value at start&#10;message=0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="DisplayReward = random.randrange(1, 6)&#10;&#10;if resp.corr:#stored on last run routine&#10;    if DisplayReward == 1:&#10;            message = &quot;You won &quot; + str(0);&#10;    else: &#10;        if ConditionChoice == 1:&#10;            CurrentReward = ConditionOne['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 2:&#10;            CurrentReward = ConditionTwo['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 3:&#10;            CurrentReward = ConditionThree['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 4:&#10;            CurrentReward = ConditionFour['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 5:&#10;            CurrentReward = ConditionFive['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 6:&#10;            CurrentReward = ConditionSix['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 7:&#10;            CurrentReward = ConditionSeven['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 8:&#10;            CurrentReward = ConditionEight['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;elif resp.keys is None: #or len(key_resp.keys)&lt;1:&#10;#elif resp.rt == 0:&#10;    message =&quot;Too Slow&quot;&#10;else:&#10;  message=&quot;Wrong&quot;&#10;&#10;if resp.corr:#stored on last run routine&#10;    Redo = 1; &#10;else:&#10;    Redo = Redo + 1;&#10;&#10;#if DisplayReward == 1:&#10;#    message = 0;&#10;#else:&#10;#    message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;&#10;#  message=&quot;Correct! RT=%.3f&quot; %(resp.rt)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.07" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="StimSetup"/>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practiceTrials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practiceTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoop">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoop" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="$Redo" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="ReDoLoop"/>\u000a    <LoopTerminator name="practiceTrials"/>\u000a    <Routine name="instrMain"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoopMain">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoopMain" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="$Redo" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="ReDoLoopMain"/>\u000a    <LoopTerminator name="trials"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p538
sg276
(lp539
sg278
I235841648
sg11
g503
sg6
g7
sg280
I1
sg20
I01
sg21
g22
sg281
g1
(g282
g283
(dp540
g285
g286
(g287
g288
g289
S'b'
tRp541
(I1
(I1
I1
tg291
I00
S'\x00\x00\x80?'
S'\x00'
Ntbsg17
g306
(g288
(I0
tS'b'
tRp542
(I1
(I1
I1
tg308
I00
(lp543
S'h'
atbsg18
g286
(g287
g288
g289
S'b'
tRp544
(I1
(I1
I1
tg291
I00
S'\x00\x00\x80?'
S'\x00'
Ntbsg292
g286
(g287
g288
g289
S'b'
tRp545
(I1
(I1
I1
tg291
I00
S'\x00\x00\x00\x00'
S'\x00'
Ntbsg19
g286
(g287
g288
g289
S'b'
tRp546
(I1
(I1
I1
tg291
I00
S'\x18\x9d\xb3>'
S'\x00'
NtbstRp547
(dp548
g296
(dp549
g285
I01
sg17
I00
sg19
I01
sg292
I01
sg18
I01
ssg298
g536
sg299
(lp550
g285
ag292
ag17
ag18
ag19
asg301
(lp551
I1
aI1
asbsg303
g347
sg305
g306
(g288
(I0
tS'b'
tRp552
(I1
(I1
I1
tg54
I00
S'\x00\x00\x00\x00'
tbsg310
I01
sg311
I1
sg312
I-1
sg313
(lp553
Nasg324
Nsg325
g242
sg326
I1
sg327
I0
sg328
I1
sg329
I01
sbag1
(g271
g3
NtRp554
(dp555
g274
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="code_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="#Redo = 1&#10;&#10;import random&#10;&#10;Integers = [1, 2, 3, 4, 5, 6, 7, 8]&#10;&#10;if Redo == 1:&#10;    ConditionChoice = random.choice(Integers)&#10;    if ConditionChoice == 1:&#10;        CurrentStimulus = ConditionOne['fileName']&#10;    elif ConditionChoice == 2:&#10;        CurrentStimulus = ConditionTwo['fileName']&#10;    elif ConditionChoice == 3:&#10;        CurrentStimulus = ConditionThree['fileName']&#10;    elif ConditionChoice == 4:&#10;        CurrentStimulus = ConditionFour['fileName']&#10;    elif ConditionChoice == 5:&#10;        CurrentStimulus = ConditionFive['fileName']&#10;    elif ConditionChoice == 6:&#10;        CurrentStimulus = ConditionSix['fileName']&#10;    elif ConditionChoice == 7:&#10;        CurrentStimulus = ConditionSeven['fileName']&#10;    elif ConditionChoice == 8:&#10;        CurrentStimulus = ConditionEight['fileName']" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'t', 'y', 'g', 'h'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$CurrentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[101, 101]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="StimSetup">\u000a      <CodeComponent name="code">\u000a        <Param name="Begin Experiment" val="import random&#10;Redo = 1&#10;colors = ['yellow', 'white', 'orange', 'magenta', 'green', 'gray', 'cyan', 'blue']&#10;shapes = ['triangle', 'square', 'line', 'invertedtriangle', 'hexagon', 'diamond', 'cross', 'circle']&#10;rewards = [0.5, 1, 2, 4] * 2&#10;conditions = ['go', 'go', 'go', 'go', 'stop', 'stop', 'stop', 'stop']&#10;trialDetailsList = []&#10;&#10;shuffle(colors)&#10;shuffle(shapes)&#10;&#10;for i, color in enumerate(colors): # cycle through each color and keep track of an index number&#10;    trialDetails = {} # a dictionary of key-value pairs&#10;    trialDetails['fileName'] = shapes[i] + color + '.gif'&#10;    trialDetails['reward'] = rewards[i]&#10;    trialDetails['condition'] = conditions[i]&#10;    trialDetailsList.append(trialDetails)&#10;&#10;shuffle(trialDetailsList) # do this now to ensure that order of presentation of rewards and conditions is also shuffled&#10;&#10;ConditionOne = trialDetailsList[0]&#10;ConditionTwo = trialDetailsList[1]&#10;ConditionThree = trialDetailsList[2]&#10;ConditionFour = trialDetailsList[3]&#10;ConditionFive = trialDetailsList[4]&#10;ConditionSix = trialDetailsList[5]&#10;ConditionSeven = trialDetailsList[6]&#10;ConditionEight = trialDetailsList[7]" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#message variable just needs some value at start&#10;message=0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="DisplayReward = random.randrange(1, 6)&#10;&#10;if resp.corr:#stored on last run routine&#10;    if DisplayReward == 1:&#10;            message = &quot;You won &quot; + str(0);&#10;    else: &#10;        if ConditionChoice == 1:&#10;            CurrentReward = ConditionOne['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 2:&#10;            CurrentReward = ConditionTwo['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 3:&#10;            CurrentReward = ConditionThree['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 4:&#10;            CurrentReward = ConditionFour['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 5:&#10;            CurrentReward = ConditionFive['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 6:&#10;            CurrentReward = ConditionSix['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 7:&#10;            CurrentReward = ConditionSeven['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;        elif ConditionChoice == 8:&#10;            CurrentReward = ConditionEight['reward']&#10;            message = &quot;You won &quot; + str(CurrentReward + (random.randrange(-25, 26)*.01))&#10;elif resp.keys is None: #or len(key_resp.keys)&lt;1:&#10;#elif resp.rt == 0:&#10;    message =&quot;Too Slow&quot;&#10;else:&#10;  message=&quot;Wrong&quot;&#10;&#10;if resp.corr:#stored on last run routine&#10;    Redo = 1; &#10;else:&#10;    Redo = Redo + 1;&#10;&#10;#if DisplayReward == 1:&#10;#    message = 0;&#10;#else:&#10;#    message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;&#10;#  message=&quot;Correct! RT=%.3f&quot; %(resp.rt)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.07" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="StimSetup"/>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practiceTrials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practiceTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoop">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoop" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="$Redo" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="ReDoLoop"/>\u000a    <LoopTerminator name="practiceTrials"/>\u000a    <Routine name="instrMain"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoopMain">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoopMain" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="$Redo" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="ReDoLoopMain"/>\u000a    <LoopTerminator name="trials"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p556
sg276
(lp557
sg278
I235841648
sg11
g503
sg6
g7
sg280
I1
sg20
I01
sg21
g22
sg281
g1
(g282
g283
(dp558
g285
g286
(g287
g288
g289
S'b'
tRp559
(I1
(I1
I1
tg291
I00
S'\x00\x00\x80?'
S'\x00'
Ntbsg17
g306
(g288
(I0
tS'b'
tRp560
(I1
(I1
I1
tg308
I00
(lp561
S'y'
atbsg18
g286
(g287
g288
g289
S'b'
tRp562
(I1
(I1
I1
tg291
I00
S'\x00\x00\x80?'
S'\x00'
Ntbsg292
g286
(g287
g288
g289
S'b'
tRp563
(I1
(I1
I1
tg291
I00
S'\x00\x00\x00\x00'
S'\x00'
Ntbsg19
g286
(g287
g288
g289
S'b'
tRp564
(I1
(I1
I1
tg291
I00
S'\xa0\x1b\x9a>'
S'\x00'
NtbstRp565
(dp566
g296
(dp567
g285
I01
sg17
I00
sg19
I01
sg292
I01
sg18
I01
ssg298
g554
sg299
(lp568
g285
ag292
ag17
ag18
ag19
asg301
(lp569
I1
aI1
asbsg303
g347
sg305
g306
(g288
(I0
tS'b'
tRp570
(I1
(I1
I1
tg54
I00
S'\x00\x00\x00\x00'
tbsg310
I01
sg311
I1
sg312
I-1
sg313
(lp571
Nasg324
Nsg325
g258
sg326
I1
sg327
I0
sg328
I1
sg329
I01
sbasS'savePickle'
p572
I00
sb.