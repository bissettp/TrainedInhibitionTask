ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
V/Users/patrickbissett/OneDrive/Poldrack/TrainedInhibition/PsychoPy/IntegratingDifferentCodeFlexibleStim8.psyexp
p7
sS'dataFileName'
p8
V/Users/patrickbissett/OneDrive/Poldrack/TrainedInhibition/PsychoPy/data/605_2015_Mar_18_1247
p9
sS'runtimeInfo'
p10
NsS'name'
p11
S'LearningTask'
p12
sS'dataNames'
p13
(lp14
S'ok1.keys'
p15
aS'ok1.rt'
p16
aS'resp.keys'
p17
aS'resp.corr'
p18
aS'resp.rt'
p19
asS'autoLog'
p20
I01
sS'extraInfo'
p21
(dp22
S'expName'
p23
g12
sS'gender (m/f)'
p24
V
sS'age'
p25
V
sS'frameRate'
p26
cnumpy.core.multiarray
scalar
p27
(cnumpy
dtype
p28
(S'f8'
I0
I1
tRp29
(I3
S'<'
NNNI-1
I-1
I0
tbS'WJ\xf0(o\xf8M@'
tRp30
sS'session'
p31
I3
sS'date'
p32
V2015_Mar_18_1247
p33
sS'participant'
p34
V605
p35
ssS'loopsUnfinished'
p36
(lp37
sS'saveWideText'
p38
I01
sS'thisEntry'
p39
(dp40
sS'version'
p41
S''
sS'_paramNamesSoFar'
p42
(lp43
VxPos
p44
aVcorrAns
p45
aVyPos
p46
asS'entries'
p47
(lp48
(dp49
g31
I3
sg24
V
sg16
F0.29851913452148438
sg25
V
sg26
g30
sg23
g12
sg15
S'space'
p50
sg32
g33
sg34
g35
sa(dp51
g31
I3
sg17
Nsg44
I200
sg24
V
sg18
I0
sg26
g30
sg25
V
sS'practiceTrials.thisN'
p52
I0
sg46
I-200
sg32
g33
sg23
g12
sS'practiceTrials.thisTrialN'
p53
I0
sS'practiceTrials.thisIndex'
p54
g27
(g28
(S'i4'
I0
I1
tRp55
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x02\x00\x00\x00'
tRp56
sS'practiceTrials.thisRepN'
p57
I0
sg34
g35
sg45
Vh
sa(dp58
g31
I3
sg17
S'h'
sg44
I200
sg24
V
sg18
I0
sg19
F0.3842320442199707
sg25
V
sS'practiceTrials.thisN'
p59
I1
sg46
I200
sg26
g30
sg32
g33
sg23
g12
sS'practiceTrials.thisTrialN'
p60
I1
sS'practiceTrials.thisIndex'
p61
g27
(g55
S'\x00\x00\x00\x00'
tRp62
sS'practiceTrials.thisRepN'
p63
I0
sg34
g35
sg45
Vy
sa(dp64
g31
I3
sg17
S't'
sg44
I-200
sg24
V
sg18
I0
sg19
F0.41780686378479004
sg25
V
sS'practiceTrials.thisN'
p65
I2
sg46
I-200
sg26
g30
sg32
g33
sg23
g12
sS'practiceTrials.thisTrialN'
p66
I2
sS'practiceTrials.thisIndex'
p67
g27
(g55
S'\x03\x00\x00\x00'
tRp68
sS'practiceTrials.thisRepN'
p69
I0
sg34
g35
sg45
Vg
sa(dp70
g31
I3
sg17
Nsg44
I-200
sg24
V
sg18
I0
sg26
g30
sg25
V
sS'practiceTrials.thisN'
p71
I3
sg46
I200
sg32
g33
sg23
g12
sS'practiceTrials.thisTrialN'
p72
I3
sS'practiceTrials.thisIndex'
p73
g27
(g55
S'\x01\x00\x00\x00'
tRp74
sS'practiceTrials.thisRepN'
p75
I0
sg34
g35
sg45
Vt
sa(dp76
g31
I3
sS'trials.thisIndex'
p77
g27
(g55
S'\x00\x00\x00\x00'
tRp78
sVxPos
p79
I200
sg24
V
sg17
NsS'trials.thisRepN'
p80
I0
sg25
V
sg18
I0
sg26
g30
sVyPos
p81
I200
sS'trials.thisN'
p82
I0
sg23
g12
sS'trials.thisTrialN'
p83
I0
sVcorrAns
p84
Vy
sg32
g33
sg34
g35
sa(dp85
g31
I3
sS'trials.thisIndex'
p86
g27
(g55
S'\x01\x00\x00\x00'
tRp87
sg79
I-200
sg24
V
sg17
NsS'trials.thisRepN'
p88
I0
sg25
V
sg18
I0
sg26
g30
sg81
I200
sS'trials.thisN'
p89
I1
sg23
g12
sS'trials.thisTrialN'
p90
I1
sg84
Vt
sg32
g33
sg34
g35
sa(dp91
g31
I3
sS'trials.thisIndex'
p92
g27
(g55
S'\x02\x00\x00\x00'
tRp93
sg79
I200
sg24
V
sg17
NsS'trials.thisRepN'
p94
I0
sg25
V
sg18
I0
sg26
g30
sg81
I-200
sS'trials.thisN'
p95
I2
sg23
g12
sS'trials.thisTrialN'
p96
I2
sg84
Vh
sg32
g33
sg34
g35
sa(dp97
g31
I3
sS'trials.thisIndex'
p98
g27
(g55
S'\x03\x00\x00\x00'
tRp99
sg79
I-200
sg24
V
sg17
NsS'trials.thisRepN'
p100
I0
sg25
V
sg18
I0
sg26
g30
sg81
I-200
sS'trials.thisN'
p101
I3
sg23
g12
sS'trials.thisTrialN'
p102
I3
sg84
Vg
sg32
g33
sg34
g35
sa(dp103
g31
I3
sS'trials.thisIndex'
p104
g27
(g55
S'\x01\x00\x00\x00'
tRp105
sg79
I-200
sg24
V
sg17
NsS'trials.thisRepN'
p106
I1
sg25
V
sg18
I0
sg26
g30
sg81
I200
sS'trials.thisN'
p107
I4
sg23
g12
sS'trials.thisTrialN'
p108
I0
sg84
Vt
sg32
g33
sg34
g35
sa(dp109
g31
I3
sS'trials.thisIndex'
p110
g27
(g55
S'\x03\x00\x00\x00'
tRp111
sg79
I-200
sg24
V
sg17
NsS'trials.thisRepN'
p112
I1
sg25
V
sg18
I0
sg26
g30
sg81
I-200
sS'trials.thisN'
p113
I5
sg23
g12
sS'trials.thisTrialN'
p114
I1
sg84
Vg
sg32
g33
sg34
g35
sa(dp115
g31
I3
sS'trials.thisIndex'
p116
g27
(g55
S'\x00\x00\x00\x00'
tRp117
sg79
I200
sg24
V
sg17
NsS'trials.thisRepN'
p118
I1
sg25
V
sg18
I0
sg26
g30
sg81
I200
sS'trials.thisN'
p119
I6
sg23
g12
sS'trials.thisTrialN'
p120
I2
sg84
Vy
sg32
g33
sg34
g35
sa(dp121
g31
I3
sS'trials.thisIndex'
p122
g27
(g55
S'\x02\x00\x00\x00'
tRp123
sg79
I200
sg24
V
sg17
NsS'trials.thisRepN'
p124
I1
sg25
V
sg18
I0
sg26
g30
sg81
I-200
sS'trials.thisN'
p125
I7
sg23
g12
sS'trials.thisTrialN'
p126
I3
sg84
Vh
sg32
g33
sg34
g35
sa(dp127
g31
I3
sS'trials.thisIndex'
p128
g27
(g55
S'\x01\x00\x00\x00'
tRp129
sg79
I-200
sg24
V
sg17
NsS'trials.thisRepN'
p130
I2
sg25
V
sg18
I0
sg26
g30
sg81
I200
sS'trials.thisN'
p131
I8
sg23
g12
sS'trials.thisTrialN'
p132
I0
sg84
Vt
sg32
g33
sg34
g35
sa(dp133
g31
I3
sS'trials.thisIndex'
p134
g27
(g55
S'\x03\x00\x00\x00'
tRp135
sg79
I-200
sg24
V
sg17
NsS'trials.thisRepN'
p136
I2
sg25
V
sg18
I0
sg26
g30
sg81
I-200
sS'trials.thisN'
p137
I9
sg23
g12
sS'trials.thisTrialN'
p138
I1
sg84
Vg
sg32
g33
sg34
g35
sa(dp139
g31
I3
sS'trials.thisIndex'
p140
g27
(g55
S'\x00\x00\x00\x00'
tRp141
sg79
I200
sg24
V
sg17
NsS'trials.thisRepN'
p142
I2
sg25
V
sg18
I0
sg26
g30
sg81
I200
sS'trials.thisN'
p143
I10
sg23
g12
sS'trials.thisTrialN'
p144
I2
sg84
Vy
sg32
g33
sg34
g35
sa(dp145
g31
I3
sS'trials.thisIndex'
p146
g27
(g55
S'\x02\x00\x00\x00'
tRp147
sg79
I200
sg24
V
sg17
NsS'trials.thisRepN'
p148
I2
sg25
V
sg18
I0
sg26
g30
sg81
I-200
sS'trials.thisN'
p149
I11
sg23
g12
sS'trials.thisTrialN'
p150
I3
sg84
Vh
sg32
g33
sg34
g35
sa(dp151
g31
I3
sS'trials.thisIndex'
p152
g27
(g55
S'\x02\x00\x00\x00'
tRp153
sg79
I200
sg24
V
sg17
NsS'trials.thisRepN'
p154
I3
sg25
V
sg18
I0
sg26
g30
sg81
I-200
sS'trials.thisN'
p155
I12
sg23
g12
sS'trials.thisTrialN'
p156
I0
sg84
Vh
sg32
g33
sg34
g35
sa(dp157
g31
I3
sS'trials.thisIndex'
p158
g27
(g55
S'\x01\x00\x00\x00'
tRp159
sg79
I-200
sg24
V
sg17
NsS'trials.thisRepN'
p160
I3
sg25
V
sg18
I0
sg26
g30
sg81
I200
sS'trials.thisN'
p161
I13
sg23
g12
sS'trials.thisTrialN'
p162
I1
sg84
Vt
sg32
g33
sg34
g35
sa(dp163
g31
I3
sS'trials.thisIndex'
p164
g27
(g55
S'\x03\x00\x00\x00'
tRp165
sg79
I-200
sg24
V
sg17
NsS'trials.thisRepN'
p166
I3
sg25
V
sg18
I0
sg26
g30
sg81
I-200
sS'trials.thisN'
p167
I14
sg23
g12
sS'trials.thisTrialN'
p168
I2
sg84
Vg
sg32
g33
sg34
g35
sa(dp169
g31
I3
sS'trials.thisIndex'
p170
g27
(g55
S'\x00\x00\x00\x00'
tRp171
sg79
I200
sg24
V
sg17
NsS'trials.thisRepN'
p172
I3
sg25
V
sg18
I0
sg26
g30
sg81
I200
sS'trials.thisN'
p173
I15
sg23
g12
sS'trials.thisTrialN'
p174
I3
sg84
Vy
sg32
g33
sg34
g35
sa(dp175
g31
I3
sS'trials.thisIndex'
p176
g27
(g55
S'\x03\x00\x00\x00'
tRp177
sg79
I-200
sg24
V
sg17
NsS'trials.thisRepN'
p178
I4
sg25
V
sg18
I0
sg26
g30
sg81
I-200
sS'trials.thisN'
p179
I16
sg23
g12
sS'trials.thisTrialN'
p180
I0
sg84
Vg
sg32
g33
sg34
g35
sa(dp181
g31
I3
sS'trials.thisIndex'
p182
g27
(g55
S'\x01\x00\x00\x00'
tRp183
sg79
I-200
sg24
V
sg17
NsS'trials.thisRepN'
p184
I4
sg25
V
sg18
I0
sg26
g30
sg81
I200
sS'trials.thisN'
p185
I17
sg23
g12
sS'trials.thisTrialN'
p186
I1
sg84
Vt
sg32
g33
sg34
g35
sa(dp187
g31
I3
sS'trials.thisIndex'
p188
g27
(g55
S'\x02\x00\x00\x00'
tRp189
sg79
I200
sg24
V
sg17
NsS'trials.thisRepN'
p190
I4
sg25
V
sg18
I0
sg26
g30
sg81
I-200
sS'trials.thisN'
p191
I18
sg23
g12
sS'trials.thisTrialN'
p192
I2
sg84
Vh
sg32
g33
sg34
g35
sa(dp193
g31
I3
sS'trials.thisIndex'
p194
g27
(g55
S'\x00\x00\x00\x00'
tRp195
sg79
I200
sg24
V
sg17
NsS'trials.thisRepN'
p196
I4
sg25
V
sg18
I0
sg26
g30
sg81
I200
sS'trials.thisN'
p197
I19
sg23
g12
sS'trials.thisTrialN'
p198
I3
sg84
Vy
sg32
g33
sg34
g35
sa(dp199
g31
I3
sS'trials.thisIndex'
p200
g27
(g55
S'\x01\x00\x00\x00'
tRp201
sg79
I-200
sg24
V
sg17
NsS'trials.thisRepN'
p202
I5
sg25
V
sg18
I0
sg26
g30
sg81
I200
sS'trials.thisN'
p203
I20
sg23
g12
sS'trials.thisTrialN'
p204
I0
sg84
Vt
sg32
g33
sg34
g35
sa(dp205
g31
I3
sS'trials.thisIndex'
p206
g27
(g55
S'\x00\x00\x00\x00'
tRp207
sg79
I200
sg24
V
sg17
NsS'trials.thisRepN'
p208
I5
sg25
V
sg18
I0
sg26
g30
sg81
I200
sS'trials.thisN'
p209
I21
sg23
g12
sS'trials.thisTrialN'
p210
I1
sg84
Vy
sg32
g33
sg34
g35
sa(dp211
g31
I3
sS'trials.thisIndex'
p212
g27
(g55
S'\x03\x00\x00\x00'
tRp213
sg79
I-200
sg24
V
sg17
NsS'trials.thisRepN'
p214
I5
sg25
V
sg18
I0
sg26
g30
sg81
I-200
sS'trials.thisN'
p215
I22
sg23
g12
sS'trials.thisTrialN'
p216
I2
sg84
Vg
sg32
g33
sg34
g35
sa(dp217
g31
I3
sS'trials.thisIndex'
p218
g27
(g55
S'\x02\x00\x00\x00'
tRp219
sg79
I200
sg24
V
sg17
NsS'trials.thisRepN'
p220
I5
sg25
V
sg18
I0
sg26
g30
sg81
I-200
sS'trials.thisN'
p221
I23
sg23
g12
sS'trials.thisTrialN'
p222
I3
sg84
Vh
sg32
g33
sg34
g35
sa(dp223
g31
I3
sS'trials.thisIndex'
p224
g27
(g55
S'\x01\x00\x00\x00'
tRp225
sg79
I-200
sg24
V
sg17
NsS'trials.thisRepN'
p226
I6
sg25
V
sg18
I0
sg26
g30
sg81
I200
sS'trials.thisN'
p227
I24
sg23
g12
sS'trials.thisTrialN'
p228
I0
sg84
Vt
sg32
g33
sg34
g35
sa(dp229
g31
I3
sS'trials.thisIndex'
p230
g27
(g55
S'\x00\x00\x00\x00'
tRp231
sg79
I200
sg24
V
sg17
NsS'trials.thisRepN'
p232
I6
sg25
V
sg18
I0
sg26
g30
sg81
I200
sS'trials.thisN'
p233
I25
sg23
g12
sS'trials.thisTrialN'
p234
I1
sg84
Vy
sg32
g33
sg34
g35
sa(dp235
g31
I3
sS'trials.thisIndex'
p236
g27
(g55
S'\x03\x00\x00\x00'
tRp237
sg79
I-200
sg24
V
sg17
NsS'trials.thisRepN'
p238
I6
sg25
V
sg18
I0
sg26
g30
sg81
I-200
sS'trials.thisN'
p239
I26
sg23
g12
sS'trials.thisTrialN'
p240
I2
sg84
Vg
sg32
g33
sg34
g35
sa(dp241
g31
I3
sS'trials.thisIndex'
p242
g27
(g55
S'\x02\x00\x00\x00'
tRp243
sg79
I200
sg24
V
sg17
NsS'trials.thisRepN'
p244
I6
sg25
V
sg18
I0
sg26
g30
sg81
I-200
sS'trials.thisN'
p245
I27
sg23
g12
sS'trials.thisTrialN'
p246
I3
sg84
Vh
sg32
g33
sg34
g35
sa(dp247
g31
I3
sS'trials.thisIndex'
p248
g27
(g55
S'\x01\x00\x00\x00'
tRp249
sg79
I-200
sg24
V
sg17
NsS'trials.thisRepN'
p250
I7
sg25
V
sg18
I0
sg26
g30
sg81
I200
sS'trials.thisN'
p251
I28
sg23
g12
sS'trials.thisTrialN'
p252
I0
sg84
Vt
sg32
g33
sg34
g35
sa(dp253
g31
I3
sS'trials.thisIndex'
p254
g27
(g55
S'\x03\x00\x00\x00'
tRp255
sg79
I-200
sg24
V
sg17
NsS'trials.thisRepN'
p256
I7
sg25
V
sg18
I0
sg26
g30
sg81
I-200
sS'trials.thisN'
p257
I29
sg23
g12
sS'trials.thisTrialN'
p258
I1
sg84
Vg
sg32
g33
sg34
g35
sa(dp259
g31
I3
sS'trials.thisIndex'
p260
g27
(g55
S'\x02\x00\x00\x00'
tRp261
sg79
I200
sg24
V
sg17
NsS'trials.thisRepN'
p262
I7
sg25
V
sg18
I0
sg26
g30
sg81
I-200
sS'trials.thisN'
p263
I30
sg23
g12
sS'trials.thisTrialN'
p264
I2
sg84
Vh
sg32
g33
sg34
g35
sa(dp265
g31
I3
sS'trials.thisIndex'
p266
g27
(g55
S'\x00\x00\x00\x00'
tRp267
sg79
I200
sg24
V
sg17
NsS'trials.thisRepN'
p268
I7
sg25
V
sg18
I0
sg26
g30
sg81
I200
sS'trials.thisN'
p269
I31
sg23
g12
sS'trials.thisTrialN'
p270
I3
sg84
Vy
sg32
g33
sg34
g35
sa(dp271
g31
I3
sS'trials.thisIndex'
p272
g27
(g55
S'\x00\x00\x00\x00'
tRp273
sg79
I200
sg24
V
sg17
NsS'trials.thisRepN'
p274
I8
sg25
V
sg18
I0
sg26
g30
sg81
I200
sS'trials.thisN'
p275
I32
sg23
g12
sS'trials.thisTrialN'
p276
I0
sg84
Vy
sg32
g33
sg34
g35
sa(dp277
g31
I3
sS'trials.thisIndex'
p278
g27
(g55
S'\x01\x00\x00\x00'
tRp279
sg79
I-200
sg24
V
sg17
NsS'trials.thisRepN'
p280
I8
sg25
V
sg18
I0
sg26
g30
sg81
I200
sS'trials.thisN'
p281
I33
sg23
g12
sS'trials.thisTrialN'
p282
I1
sg84
Vt
sg32
g33
sg34
g35
sa(dp283
g31
I3
sS'trials.thisIndex'
p284
g27
(g55
S'\x02\x00\x00\x00'
tRp285
sg79
I200
sg24
V
sg17
NsS'trials.thisRepN'
p286
I8
sg25
V
sg18
I0
sg26
g30
sg81
I-200
sS'trials.thisN'
p287
I34
sg23
g12
sS'trials.thisTrialN'
p288
I2
sg84
Vh
sg32
g33
sg34
g35
sa(dp289
g31
I3
sS'trials.thisIndex'
p290
g27
(g55
S'\x03\x00\x00\x00'
tRp291
sg79
I-200
sg24
V
sg17
NsS'trials.thisRepN'
p292
I8
sg25
V
sg18
I0
sg26
g30
sg81
I-200
sS'trials.thisN'
p293
I35
sg23
g12
sS'trials.thisTrialN'
p294
I3
sg84
Vg
sg32
g33
sg34
g35
sa(dp295
g31
I3
sS'trials.thisIndex'
p296
g27
(g55
S'\x03\x00\x00\x00'
tRp297
sg79
I-200
sg24
V
sg17
NsS'trials.thisRepN'
p298
I9
sg25
V
sg18
I0
sg26
g30
sg81
I-200
sS'trials.thisN'
p299
I36
sg23
g12
sS'trials.thisTrialN'
p300
I0
sg84
Vg
sg32
g33
sg34
g35
sa(dp301
g31
I3
sS'trials.thisIndex'
p302
g27
(g55
S'\x01\x00\x00\x00'
tRp303
sg79
I-200
sg24
V
sg17
NsS'trials.thisRepN'
p304
I9
sg25
V
sg18
I0
sg26
g30
sg81
I200
sS'trials.thisN'
p305
I37
sg23
g12
sS'trials.thisTrialN'
p306
I1
sg84
Vt
sg32
g33
sg34
g35
sa(dp307
g31
I3
sS'trials.thisIndex'
p308
g27
(g55
S'\x00\x00\x00\x00'
tRp309
sg79
I200
sg24
V
sg17
NsS'trials.thisRepN'
p310
I9
sg25
V
sg18
I0
sg26
g30
sg81
I200
sS'trials.thisN'
p311
I38
sg23
g12
sS'trials.thisTrialN'
p312
I2
sg84
Vy
sg32
g33
sg34
g35
sa(dp313
g31
I3
sS'trials.thisIndex'
p314
g27
(g55
S'\x02\x00\x00\x00'
tRp315
sg79
I200
sg24
V
sg17
NsS'trials.thisRepN'
p316
I9
sg25
V
sg18
I0
sg26
g30
sg81
I-200
sS'trials.thisN'
p317
I39
sg23
g12
sS'trials.thisTrialN'
p318
I3
sg84
Vh
sg32
g33
sg34
g35
sasS'loops'
p319
(lp320
g1
(cpsychopy.data
TrialHandler
p321
g3
NtRp322
(dp323
S'origin'
p324
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="code_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="import random&#10;&#10;Integers = [1, 2, 3, 4, 5, 6, 7, 8]&#10;&#10;ConditionChoice = random.choice(Integers)&#10;&#10;if ConditionChoice == 1:&#10;    CurrentStimulus = ConditionOne['fileName']&#10;elif ConditionChoice == 2:&#10;    CurrentStimulus = ConditionTwo['fileName']&#10;elif ConditionChoice == 3:&#10;    CurrentStimulus = ConditionThree['fileName']&#10;elif ConditionChoice == 4:&#10;    CurrentStimulus = ConditionFour['fileName']&#10;elif ConditionChoice == 5:&#10;    CurrentStimulus = ConditionFive['fileName']&#10;elif ConditionChoice == 6:&#10;    CurrentStimulus = ConditionSix['fileName']&#10;elif ConditionChoice == 7:&#10;    CurrentStimulus = ConditionSeven['fileName']&#10;elif ConditionChoice == 8:&#10;    CurrentStimulus = ConditionEight['fileName']" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'t', 'y', 'g', 'h'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$CurrentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[101, 101]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="StimSetup">\u000a      <CodeComponent name="code">\u000a        <Param name="Begin Experiment" val="import random&#10;&#10;colors = ['yellow', 'white', 'orange', 'magenta', 'green', 'gray', 'cyan', 'blue']&#10;shapes = ['triangle', 'square', 'line', 'invertedtriangle', 'hexagon', 'diamond', 'cross', 'circle']&#10;rewards = [0.5, 1, 2, 4] * 2&#10;conditions = ['go', 'go', 'go', 'go', 'stop', 'stop', 'stop', 'stop']&#10;trialDetailsList = []&#10;&#10;shuffle(colors)&#10;shuffle(shapes)&#10;&#10;for i, color in enumerate(colors): # cycle through each color and keep track of an index number&#10;    trialDetails = {} # a dictionary of key-value pairs&#10;    trialDetails['fileName'] = shapes[i] + color + '.gif'&#10;    trialDetails['reward'] = rewards[i]&#10;    trialDetails['condition'] = conditions[i]&#10;    trialDetailsList.append(trialDetails)&#10;&#10;shuffle(trialDetailsList) # do this now to ensure that order of presentation of rewards and conditions is also shuffled&#10;&#10;ConditionOne = trialDetailsList[0]&#10;ConditionTwo = trialDetailsList[1]&#10;ConditionThree = trialDetailsList[2]&#10;ConditionFour = trialDetailsList[3]&#10;ConditionFive = trialDetailsList[4]&#10;ConditionSix = trialDetailsList[5]&#10;ConditionSeven = trialDetailsList[6]&#10;ConditionEight = trialDetailsList[7]" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="OK, ready to start the main experiment?&#10;&#10;Remember, press;&#10; - 'S' if the SMALL letters are S&#10; - 'H' if the SMALL letters are H&#10;&#10;Try to respond as quickly and as accurately as possible.&#10;&#10;When you are ready to proceed press any key." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#message variable just needs some value at start&#10;message=0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="DisplayReward = random.randrange(1, 6)&#10;&#10;if resp.corr:#stored on last run routine&#10;    if DisplayReward == 1:&#10;            message = 0;&#10;    else:&#10;        if ConditionChoice == 1:&#10;            CurrentReward = ConditionOne['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;        elif ConditionChoice == 2:&#10;            CurrentReward = ConditionTwo['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;        elif ConditionChoice == 3:&#10;            CurrentReward = ConditionThree['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;        elif ConditionChoice == 4:&#10;            CurrentReward = ConditionFour['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;        elif ConditionChoice == 5:&#10;            CurrentReward = ConditionFive['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;        elif ConditionChoice == 6:&#10;            CurrentReward = ConditionSix['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;        elif ConditionChoice == 7:&#10;            CurrentReward = ConditionSeven['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;        elif ConditionChoice == 8:&#10;            CurrentReward = ConditionEight['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;elif resp.rt == 0:&#10;    message =&quot;Too Slow&quot;&#10;else:&#10;  message=&quot;Wrong&quot;&#10;&#10;&#10;&#10;#if DisplayReward == 1:&#10;#    message = 0;&#10;#else:&#10;#    message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;&#10;#  message=&quot;Correct! RT=%.3f&quot; %(resp.rt)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.07" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="StimSetup"/>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practiceTrials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practiceTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="practiceTrials"/>\u000a    <Routine name="instrMain"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="10" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="trials"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p325
sS'thisTrial'
p326
(lp327
sS'_exp'
p328
I244417648
sg11
S'practiceTrials'
p329
sg6
g7
sS'thisRepN'
p330
I1
sg20
I01
sg21
g22
sS'data'
p331
g1
(cpsychopy.data
DataHandler
p332
c__builtin__
dict
p333
(dp334
S'ran'
p335
cnumpy.ma.core
_mareconstruct
p336
(cnumpy.ma.core
MaskedArray
p337
cnumpy
ndarray
p338
(I0
tp339
S'b'
tRp340
(I1
(I4
I1
tg28
(S'f4'
I0
I1
tRp341
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00'
Ntbsg17
cnumpy.core.multiarray
_reconstruct
p342
(g338
(I0
tS'b'
tRp343
(I1
(I4
I1
tg28
(S'O4'
I0
I1
tRp344
(I3
S'|'
NNNI-1
I-1
I63
tbI00
(lp345
S'h'
aNaNaS't'
atbsg18
g336
(g337
g338
g339
S'b'
tRp346
(I1
(I4
I1
tg341
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00'
NtbsS'order'
p347
g336
(g337
g338
g339
S'b'
tRp348
(I1
(I4
I1
tg341
I00
S'\x00\x00\x80?\x00\x00@@\x00\x00\x00\x00\x00\x00\x00@'
S'\x00\x00\x00\x00'
Ntbsg19
g336
(g337
g338
g339
S'b'
tRp349
(I1
(I4
I1
tg341
I00
S'\x10\xba\xc4>\x00\x00\x00\x00\x00\x00\x00\x00\xc8\xea\xd5>'
S'\x00\x01\x01\x00'
NtbstRp350
(dp351
S'isNumeric'
p352
(dp353
g335
I01
sg17
I00
sg19
I01
sg347
I01
sg18
I01
ssS'trials'
p354
g322
sS'dataTypes'
p355
(lp356
g335
ag347
ag17
ag18
ag19
asS'dataShape'
p357
(lp358
I4
aI1
asbsS'method'
p359
S'random'
p360
sS'sequenceIndices'
p361
g342
(g338
(I0
tS'b'
tRp362
(I1
(I4
I1
tg55
I01
S'\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00'
tbsS'finished'
p363
I01
sS'nReps'
p364
I1
sS'nRemaining'
p365
I-1
sS'trialList'
p366
(lp367
g1
(cpsychopy.data
TrialType
p368
g333
(dp369
g44
I200
sg45
Vy
sg46
I200
stRp370
ag1
(g368
g333
(dp371
g44
I-200
sg45
Vt
sg46
I200
stRp372
ag1
(g368
g333
(dp373
g44
I200
sg45
Vh
sg46
I-200
stRp374
ag1
(g368
g333
(dp375
g44
I-200
sg45
Vg
sg46
I-200
stRp376
asS'seed'
p377
NsS'thisIndex'
p378
g74
sS'thisN'
p379
I4
sS'thisTrialN'
p380
I0
sS'nTotal'
p381
I4
sS'_warnUseOfNext'
p382
I01
sbag1
(g321
g3
NtRp383
(dp384
g324
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="code_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="import random&#10;&#10;Integers = [1, 2, 3, 4, 5, 6, 7, 8]&#10;&#10;ConditionChoice = random.choice(Integers)&#10;&#10;if ConditionChoice == 1:&#10;    CurrentStimulus = ConditionOne['fileName']&#10;elif ConditionChoice == 2:&#10;    CurrentStimulus = ConditionTwo['fileName']&#10;elif ConditionChoice == 3:&#10;    CurrentStimulus = ConditionThree['fileName']&#10;elif ConditionChoice == 4:&#10;    CurrentStimulus = ConditionFour['fileName']&#10;elif ConditionChoice == 5:&#10;    CurrentStimulus = ConditionFive['fileName']&#10;elif ConditionChoice == 6:&#10;    CurrentStimulus = ConditionSix['fileName']&#10;elif ConditionChoice == 7:&#10;    CurrentStimulus = ConditionSeven['fileName']&#10;elif ConditionChoice == 8:&#10;    CurrentStimulus = ConditionEight['fileName']" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'t', 'y', 'g', 'h'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$CurrentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[101, 101]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="StimSetup">\u000a      <CodeComponent name="code">\u000a        <Param name="Begin Experiment" val="import random&#10;&#10;colors = ['yellow', 'white', 'orange', 'magenta', 'green', 'gray', 'cyan', 'blue']&#10;shapes = ['triangle', 'square', 'line', 'invertedtriangle', 'hexagon', 'diamond', 'cross', 'circle']&#10;rewards = [0.5, 1, 2, 4] * 2&#10;conditions = ['go', 'go', 'go', 'go', 'stop', 'stop', 'stop', 'stop']&#10;trialDetailsList = []&#10;&#10;shuffle(colors)&#10;shuffle(shapes)&#10;&#10;for i, color in enumerate(colors): # cycle through each color and keep track of an index number&#10;    trialDetails = {} # a dictionary of key-value pairs&#10;    trialDetails['fileName'] = shapes[i] + color + '.gif'&#10;    trialDetails['reward'] = rewards[i]&#10;    trialDetails['condition'] = conditions[i]&#10;    trialDetailsList.append(trialDetails)&#10;&#10;shuffle(trialDetailsList) # do this now to ensure that order of presentation of rewards and conditions is also shuffled&#10;&#10;ConditionOne = trialDetailsList[0]&#10;ConditionTwo = trialDetailsList[1]&#10;ConditionThree = trialDetailsList[2]&#10;ConditionFour = trialDetailsList[3]&#10;ConditionFive = trialDetailsList[4]&#10;ConditionSix = trialDetailsList[5]&#10;ConditionSeven = trialDetailsList[6]&#10;ConditionEight = trialDetailsList[7]" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="OK, ready to start the main experiment?&#10;&#10;Remember, press;&#10; - 'S' if the SMALL letters are S&#10; - 'H' if the SMALL letters are H&#10;&#10;Try to respond as quickly and as accurately as possible.&#10;&#10;When you are ready to proceed press any key." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#message variable just needs some value at start&#10;message=0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="DisplayReward = random.randrange(1, 6)&#10;&#10;if resp.corr:#stored on last run routine&#10;    if DisplayReward == 1:&#10;            message = 0;&#10;    else:&#10;        if ConditionChoice == 1:&#10;            CurrentReward = ConditionOne['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;        elif ConditionChoice == 2:&#10;            CurrentReward = ConditionTwo['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;        elif ConditionChoice == 3:&#10;            CurrentReward = ConditionThree['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;        elif ConditionChoice == 4:&#10;            CurrentReward = ConditionFour['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;        elif ConditionChoice == 5:&#10;            CurrentReward = ConditionFive['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;        elif ConditionChoice == 6:&#10;            CurrentReward = ConditionSix['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;        elif ConditionChoice == 7:&#10;            CurrentReward = ConditionSeven['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;        elif ConditionChoice == 8:&#10;            CurrentReward = ConditionEight['reward']&#10;            message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;elif resp.rt == 0:&#10;    message =&quot;Too Slow&quot;&#10;else:&#10;  message=&quot;Wrong&quot;&#10;&#10;&#10;&#10;#if DisplayReward == 1:&#10;#    message = 0;&#10;#else:&#10;#    message = CurrentReward + (random.randrange(-25, 26)*.01)&#10;&#10;#  message=&quot;Correct! RT=%.3f&quot; %(resp.rt)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.07" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="StimSetup"/>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practiceTrials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practiceTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="practiceTrials"/>\u000a    <Routine name="instrMain"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="Trialtypes5.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="10" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'y', u'yPos': 200}, {u'xPos': -200, u'corrAns': u't', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'h', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="trials"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p385
sg326
(lp386
sg328
I244417648
sg11
g354
sg6
g7
sg330
I10
sg20
I01
sg21
g22
sg331
g1
(g332
g333
(dp387
g335
g336
(g337
g338
g339
S'b'
tRp388
(I1
(I4
I10
tg341
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg17
g342
(g338
(I0
tS'b'
tRp389
(I1
(I4
I10
tg344
I00
(lp390
NaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNatbsg347
g336
(g337
g338
g339
S'b'
tRp391
(I1
(I4
I10
tg341
I00
S'\x00\x00\x00\x00\x00\x00\xc0@\x00\x00 A\x00\x00pA\x00\x00\x98A\x00\x00\xa8A\x00\x00\xc8A\x00\x00\xf8A\x00\x00\x00B\x00\x00\x18B\x00\x00\x80?\x00\x00\x80@\x00\x00\x00A\x00\x00PA\x00\x00\x88A\x00\x00\xa0A\x00\x00\xc0A\x00\x00\xe0A\x00\x00\x04B\x00\x00\x14B\x00\x00\x00@\x00\x00\xe0@\x00\x000A\x00\x00@A\x00\x00\x90A\x00\x00\xb8A\x00\x00\xd8A\x00\x00\xf0A\x00\x00\x08B\x00\x00\x1cB\x00\x00@@\x00\x00\xa0@\x00\x00\x10A\x00\x00`A\x00\x00\x80A\x00\x00\xb0A\x00\x00\xd0A\x00\x00\xe8A\x00\x00\x0cB\x00\x00\x10B'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg18
g336
(g337
g338
g339
S'b'
tRp392
(I1
(I4
I10
tg341
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp393
(dp394
g352
(dp395
g335
I01
sg17
I00
sg347
I01
sg18
I01
ssg354
g383
sg355
(lp396
g335
ag347
ag17
ag18
asg357
(lp397
I4
aI10
asbsg359
g360
sg361
g342
(g338
(I0
tS'b'
tRp398
(I1
(I4
I10
tg55
I01
S'\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00'
tbsg363
I01
sg364
I10
sg365
I-1
sg366
(lp399
g1
(g368
g333
(dp400
g79
I200
sg84
Vy
sg81
I200
stRp401
ag1
(g368
g333
(dp402
g79
I-200
sg84
Vt
sg81
I200
stRp403
ag1
(g368
g333
(dp404
g79
I200
sg84
Vh
sg81
I-200
stRp405
ag1
(g368
g333
(dp406
g79
I-200
sg84
Vg
sg81
I-200
stRp407
asg377
Nsg378
g315
sg379
I40
sg380
I0
sg381
I40
sg382
I01
sbasS'savePickle'
p408
I00
sb.