ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
V/Users/patrickbissett/OneDrive/Poldrack/TrainedInhibition/PsychoPy/ShapeLearningTaskCounterbalanceRemovePrac11.psyexp
p7
sS'dataFileName'
p8
V/Users/patrickbissett/OneDrive/Poldrack/TrainedInhibition/PsychoPy/data/3040_2015_Mar_31_1251
p9
sS'runtimeInfo'
p10
NsS'name'
p11
S'LearningTask'
p12
sS'dataNames'
p13
(lp14
S'ok1.keys'
p15
aS'ok1.rt'
p16
aS'goResp.keys'
p17
aS'goResp.corr'
p18
aS'goResp.rt'
p19
aS'key_resp_3.keys'
p20
aS'key_resp_3.rt'
p21
asS'autoLog'
p22
I01
sS'extraInfo'
p23
(dp24
S'expName'
p25
g12
sS'gender (m/f)'
p26
V
sS'age'
p27
V
sS'frameRate'
p28
cnumpy.core.multiarray
scalar
p29
(cnumpy
dtype
p30
(S'f8'
I0
I1
tRp31
(I3
S'<'
NNNI-1
I-1
I0
tbS'{\\&@\xc4\xf0M@'
tRp32
sS'session'
p33
I3
sS'date'
p34
V2015_Mar_31_1251
p35
sS'participant'
p36
V3040
p37
ssS'loopsUnfinished'
p38
(lp39
g1
(cpsychopy.data
TrialHandler
p40
g3
NtRp41
(dp42
S'origin'
p43
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="stopBlockSetup">\u000a      <CodeComponent name="code_9">\u000a        <Param name="Begin Experiment" val="goCumRT = 0&#10;goRTCount = 0&#10;omissionCount = 0&#10;commissionCount = 0&#10;stopTrialCount = 0&#10;stopSuccessCount = 0&#10;goTrialCount = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_9" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="blankStop">\u000a      <TextComponent name="text_4">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_4" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="End">\u000a      <TextComponent name="text_6">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_6" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="This is the end, beautiful friend" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instrStopPrac">\u000a      <TextComponent name="instrStopText">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instrStopText" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on the left or right side of the screen&#10;&#10;If it appears on the left, press Z&#10;&#10;If it appears on the right, press M&#10;&#10;If you hear a tone, do not press anything on that trial" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="code_8">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_8" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="InitSSD = .25&#10;SSDLeft = InitSSD&#10;SSDRight = InitSSD" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="ExitMain">\u000a      <CodeComponent name="code_6">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_6" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="if resp.corr:&#10;    ReDoLoopMain.finished = True" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="ResetAtBlock">\u000a      <CodeComponent name="code_3">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_3" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="Redo = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS I&#10;&#10;If it appears in the lower right quadrant, PRESS K&#10;&#10;If it appears in the lower left quadrant, PRESS J&#10;&#10;If it appears in the upper left quadrant, PRESS U&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.07" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="NewStim">\u000a      <CodeComponent name="code_4">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_4" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="currentLearningTrial = learningTrialList.pop(0)&#10;currentStimulus = currentLearningTrial['fileName']&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="SSDChange">\u000a      <CodeComponent name="code_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="if goResp.keys is None:&#10;    if xPosGoStim == -200:&#10;        SSDLeft = SSDLeft  + .05&#10;    if xPosGoStim == 200:&#10;        SSDRight = SSDRight + .05&#10;else:&#10;    if xPosGoStim == -200:&#10;        SSDLeft = SSDLeft - .05&#10;    if xPosGoStim == 200:&#10;        SSDRight = SSDRight - .05&#10;&#10;if currentStopTrial['stopOrGo'] == 'go':&#10;    goTrialCount = goTrialCount + 1&#10;&#10;if goResp.corr and currentStopTrial['stopOrGo'] == 'go':&#10;    goCumRT = goCumRT + goResp.rt&#10;    goRTCount = goRTCount + 1&#10;&#10;if currentStopTrial['stopOrGo'] == 'stop':&#10;    stopTrialCount = stopTrialCount + 1&#10;&#10;if currentStopTrial['stopOrGo'] == 'stop' and goResp.keys is None:&#10;    stopSuccessCount = stopSuccessCount + 1&#10;&#10;if goResp.keys is None and currentStopTrial['stopOrGo'] == 'go':&#10;    omissionCount = omissionCount + 1&#10;&#10;if goResp != corrGoResp:&#10;    commissionCount = commissionCount + 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="endOfStopBlockFeedback">\u000a      <CodeComponent name="code_10">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_10" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="&#10;if goRTCount &gt; 0:&#10;    goRTFeedback = str(goCumRT/goRTCount)&#10;else:&#10;    goRTFeedback = 'Null'&#10;&#10;if goTrialCount &gt; 0:&#10;    commissionRate = str(commissionCount/goTrialCount)&#10;    omissionRate = str(omissionCount/goTrialCount)&#10;else: &#10;    commissionRate = 'Null'&#10;    omissionRate = 'Null'&#10;&#10;if stopTrialCount &gt; 0: &#10;    probabilityOfStop = str(stopSuccessCount/stopTrialCount)&#10;else:&#10;    probabilityOfStop = 'Null'&#10;&#10;SSDFeedback = str((SSDLeft+SSDRight)/2)&#10;&#10;stopMessage = &quot;RT = &quot; + str(goRTFeedback) + &quot;Omission % = &quot; + str(omissionRate) + &quot;Commission % = &quot; + str(commissionRate) + &quot;    &quot; + str(probabilityOfStop) + &quot;    &quot; + str(SSDFeedback)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="text_5">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_5" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stopMessage&#10;" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_3">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_3" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'y','n','left','right','space'" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="ExitPrac">\u000a      <CodeComponent name="code_5">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_5" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="if resp.corr:&#10;    ReDoLoop.finished = True " valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="trial">\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'u', 'i', 'j', 'k'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$currentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[151, 151]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="newStopStim">\u000a      <CodeComponent name="code_7">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_7" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="currentStopTrial = stopTrialList.pop(0)&#10;currentGoStim = currentStopTrial['fileName']&#10;currentStopOrGo = currentStopTrial['stopOrGo']&#10;&#10;&#10;&#10;#if xPosGoStim == -200:&#10;#    SSD = SSDLeft + 500&#10;#else:&#10;#    SSD = SSDRight + 500&#10;&#10;if currentStopOrGo == 'stop':&#10;    if xPosGoStim == -200:&#10;        SSD = SSDLeft + .5&#10;    else:&#10;        SSD = SSDRight + .5&#10;else:&#10;    SSD = -1" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="Blank">\u000a      <TextComponent name="text_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val=".5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="StimSetup">\u000a      <CodeComponent name="code">\u000a        <Param name="Begin Experiment" val="from copy import deepcopy&#10;colors = ['yellow', 'white', 'orange', 'magenta', 'green', 'gray', 'cyan', 'blue']&#10;shapes = ['triangle', 'square', 'line', 'invertedtriangle', 'hexagon', 'diamond', 'cross', 'circle']&#10;rewards = [0.50, 1.00, 2.00, 4.00] * 2&#10;conditions = ['go', 'go', 'go', 'go', 'stop', 'stop', 'stop', 'stop']&#10;trialDetailsList = []&#10;learningTrialList = []&#10;&#10;shuffle(colors)&#10;shuffle(shapes)&#10;&#10;for i, color in enumerate(colors): # cycle through each color and keep track of an index number&#10;    trialDetails = {} # a dictionary of key-value pairs&#10;    trialDetails['fileName'] = shapes[i] + color + '.gif'&#10;    trialDetails['reward'] = rewards[i]&#10;    trialDetails['condition'] = conditions[i]&#10;    trialDetailsList.append(trialDetails)&#10;&#10;shuffle(trialDetailsList) # do this now to ensure that order of presentation of rewards and conditions is also shuffled&#10;&#10;conditionOne = trialDetailsList[0]&#10;conditionTwo = trialDetailsList[1]&#10;conditionThree = trialDetailsList[2]&#10;conditionFour = trialDetailsList[3]&#10;conditionFive = trialDetailsList[4]&#10;conditionSix = trialDetailsList[5]&#10;conditionSeven = trialDetailsList[6]&#10;conditionEight = trialDetailsList[7]&#10;&#10;numLearningTrials = 400&#10;numLearningRepetitions = 50&#10;for k in range(1, numLearningRepetitions + 1):&#10;    learningTrialList.append(conditionOne)&#10;    learningTrialList.append(conditionTwo)&#10;    learningTrialList.append(conditionThree)&#10;    learningTrialList.append(conditionFour)&#10;    learningTrialList.append(conditionFive)&#10;    learningTrialList.append(conditionSix)&#10;    learningTrialList.append(conditionSeven)&#10;    learningTrialList.append(conditionEight)&#10;&#10;shuffle(learningTrialList)&#10;&#10;stopTaskTrials = 272&#10;stopTrialsPerStopStim = 26&#10;goTrialsPerStopStim = 8&#10;goTrialsPerGoStim = 34&#10;numStim = 8&#10;stopTrialList = []&#10;&#10;if conditionOne['condition'] == 'go':&#10;    conditionOne['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionOne)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionOne['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionOne))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionOne['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionOne))&#10;if conditionTwo['condition'] == 'go':&#10;    conditionTwo['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionTwo)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionTwo['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionTwo))&#10;    for i in range(1,  stopTrialsPerStopStim + 1):&#10;        conditionTwo['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionTwo))&#10;if conditionThree['condition'] == 'go':&#10;    conditionThree['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionThree)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionThree['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionThree))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionThree['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionThree))&#10;if conditionFour['condition'] == 'go':&#10;    conditionFour['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionFour)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionFour['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionFour))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionFour['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionFour))&#10;if conditionFive['condition'] == 'go':&#10;    conditionFive['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionFive)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionFive['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionFive))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionFive['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionFive))&#10;if conditionSix['condition'] == 'go':&#10;    conditionSix['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionSix)&#10;else:&#10;    for j in range(1, stopTrialsPerStopStim + 1):&#10;        conditionSix['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionSix))&#10;    for i in range(1, goTrialsPerStopStim + 1):&#10;        conditionSix['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionSix))&#10;if conditionSeven['condition'] == 'go':&#10;    conditionSeven['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionSeven)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionSeven['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionSeven))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionSeven['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionSeven))&#10;if conditionEight['condition'] == 'go':&#10;    conditionEight['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionEight)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionEight['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionEight))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionEight['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionEight))&#10;&#10;shuffle(stopTrialList)" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#message variable just needs some value at start&#10;message=0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="import random&#10;&#10;displayReward = random.randrange(1, 6)&#10;&#10;if resp.corr:#stored on last run routine&#10;    if displayReward == 1:&#10;            message = &quot;You won $&quot; + str(0);&#10;    else: &#10;            currentReward = currentLearningTrial['reward']&#10;            message = &quot;You won $&quot; + str(currentReward + (random.randrange(-25, 26)*.01))&#10;elif resp.keys is None: #or len(key_resp.keys)&lt;1:&#10;#elif resp.rt == 0:&#10;    message =&quot;Too Slow&quot;&#10;else:&#10;  message=&quot;Wrong&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val=".2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$currentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[151, 151]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="Bank"/>\u000a    <Routine name="StopTrial">\u000a      <SoundComponent name="sound_1">\u000a        <Param name="sound" val="900" valType="str" updates="constant"/>\u000a        <Param name="volume" val=".2" valType="code" updates="constant"/>\u000a        <Param name="name" val="sound_1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val=".2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startEstim" val=".75" valType="code" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$SSD" valType="code" updates="None"/>\u000a      </SoundComponent>\u000a      <TextComponent name="text_3">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_3" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="|" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="4" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_3">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_3" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPosGoStim, yPosGoStim]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$currentGoStim" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[151, 151]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <KeyboardComponent name="goResp">\u000a        <Param name="correctAns" val="$corrGoResp" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="goResp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'z','m'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="StimSetup"/>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="0" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="ResetAtBlock"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="TrialtypesLearning.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="25" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'h', u'yPos': 200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'n', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'b', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="NewStim"/>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoopMain">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoopMain" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="999" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <Routine name="Blank"/>\u000a    <Routine name="ExitMain"/>\u000a    <LoopTerminator name="ReDoLoopMain"/>\u000a    <LoopTerminator name="trials"/>\u000a    <LoopTerminator name="Blocks"/>\u000a    <Routine name="instrStopPrac"/>\u000a    <LoopInitiator loopType="TrialHandler" name="StopBlocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="StopBlocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="4" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="stopBlockSetup"/>\u000a    <LoopInitiator loopType="TrialHandler" name="StopTrials">\u000a      <Param name="conditionsFile" val="trialtypeStop.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="StopTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="17" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'corrGoResp': u'z', u'yPosGoStim': 0, u'xPosGoStim': -200}, {u'corrGoResp': u'm', u'yPosGoStim': 0, u'xPosGoStim': 200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="newStopStim"/>\u000a    <Routine name="StopTrial"/>\u000a    <Routine name="blankStop"/>\u000a    <Routine name="SSDChange"/>\u000a    <LoopTerminator name="StopTrials"/>\u000a    <Routine name="endOfStopBlockFeedback"/>\u000a    <LoopTerminator name="StopBlocks"/>\u000a    <Routine name="End"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p44
sS'thisTrial'
p45
NsS'_exp'
p46
I243216976
sg11
S'StopBlocks'
p47
sg6
g7
sS'thisRepN'
p48
I1
sg22
I01
sg23
g24
sS'data'
p49
g1
(cpsychopy.data
DataHandler
p50
c__builtin__
dict
p51
(dp52
S'ran'
p53
cnumpy.ma.core
_mareconstruct
p54
(cnumpy.ma.core
MaskedArray
p55
cnumpy
ndarray
p56
(I0
tp57
S'b'
tRp58
(I1
(I1
I4
tg30
(S'f4'
I0
I1
tRp59
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00'
Ntbsg20
cnumpy.core.multiarray
_reconstruct
p60
(g56
(I0
tS'b'
tRp61
(I1
(I1
I4
tg30
(S'O4'
I0
I1
tRp62
(I3
S'|'
NNNI-1
I-1
I63
tbI00
(lp63
S'space'
p64
aS'--'
p65
aS'--'
p66
aS'--'
p67
atbsS'order'
p68
g54
(g55
g56
g57
S'b'
tRp69
(I1
(I1
I4
tg59
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x01\x01'
Ntbsg21
g54
(g55
g56
g57
S'b'
tRp70
(I1
(I1
I4
tg59
I00
S'=.\xd6A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x01\x01\x01'
NtbstRp71
(dp72
S'isNumeric'
p73
(dp74
g53
I01
sg20
I00
sg68
I01
sg21
I01
ssS'trials'
p75
g41
sS'dataTypes'
p76
(lp77
g53
ag68
ag20
ag21
asS'dataShape'
p78
(lp79
I1
aI4
asbsS'method'
p80
S'sequential'
p81
sS'sequenceIndices'
p82
g60
(g56
(I0
tS'b'
tRp83
(I1
(I1
I4
tg30
(S'i4'
I0
I1
tRp84
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
tbsS'finished'
p85
I00
sS'nReps'
p86
I4
sS'nRemaining'
p87
I2
sS'trialList'
p88
(lp89
NasS'seed'
p90
NsS'thisIndex'
p91
g29
(g84
S'\x00\x00\x00\x00'
tRp92
sS'thisN'
p93
I1
sS'thisTrialN'
p94
I0
sS'nTotal'
p95
I4
sS'_warnUseOfNext'
p96
I01
sbag1
(g40
g3
NtRp97
(dp98
g43
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="stopBlockSetup">\u000a      <CodeComponent name="code_9">\u000a        <Param name="Begin Experiment" val="goCumRT = 0&#10;goRTCount = 0&#10;omissionCount = 0&#10;commissionCount = 0&#10;stopTrialCount = 0&#10;stopSuccessCount = 0&#10;goTrialCount = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_9" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="blankStop">\u000a      <TextComponent name="text_4">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_4" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="End">\u000a      <TextComponent name="text_6">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_6" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="This is the end, beautiful friend" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instrStopPrac">\u000a      <TextComponent name="instrStopText">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instrStopText" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on the left or right side of the screen&#10;&#10;If it appears on the left, press Z&#10;&#10;If it appears on the right, press M&#10;&#10;If you hear a tone, do not press anything on that trial" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="code_8">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_8" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="InitSSD = .25&#10;SSDLeft = InitSSD&#10;SSDRight = InitSSD" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="ExitMain">\u000a      <CodeComponent name="code_6">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_6" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="if resp.corr:&#10;    ReDoLoopMain.finished = True" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="ResetAtBlock">\u000a      <CodeComponent name="code_3">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_3" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="Redo = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS I&#10;&#10;If it appears in the lower right quadrant, PRESS K&#10;&#10;If it appears in the lower left quadrant, PRESS J&#10;&#10;If it appears in the upper left quadrant, PRESS U&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.07" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="NewStim">\u000a      <CodeComponent name="code_4">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_4" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="currentLearningTrial = learningTrialList.pop(0)&#10;currentStimulus = currentLearningTrial['fileName']&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="SSDChange">\u000a      <CodeComponent name="code_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="if goResp.keys is None:&#10;    if xPosGoStim == -200:&#10;        SSDLeft = SSDLeft  + .05&#10;    if xPosGoStim == 200:&#10;        SSDRight = SSDRight + .05&#10;else:&#10;    if xPosGoStim == -200:&#10;        SSDLeft = SSDLeft - .05&#10;    if xPosGoStim == 200:&#10;        SSDRight = SSDRight - .05&#10;&#10;if currentStopTrial['stopOrGo'] == 'go':&#10;    goTrialCount = goTrialCount + 1&#10;&#10;if goResp.corr and currentStopTrial['stopOrGo'] == 'go':&#10;    goCumRT = goCumRT + goResp.rt&#10;    goRTCount = goRTCount + 1&#10;&#10;if currentStopTrial['stopOrGo'] == 'stop':&#10;    stopTrialCount = stopTrialCount + 1&#10;&#10;if currentStopTrial['stopOrGo'] == 'stop' and goResp.keys is None:&#10;    stopSuccessCount = stopSuccessCount + 1&#10;&#10;if goResp.keys is None and currentStopTrial['stopOrGo'] == 'go':&#10;    omissionCount = omissionCount + 1&#10;&#10;if goResp != corrGoResp:&#10;    commissionCount = commissionCount + 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="endOfStopBlockFeedback">\u000a      <CodeComponent name="code_10">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_10" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="&#10;if goRTCount &gt; 0:&#10;    goRTFeedback = str(goCumRT/goRTCount)&#10;else:&#10;    goRTFeedback = 'Null'&#10;&#10;if goTrialCount &gt; 0:&#10;    commissionRate = str(commissionCount/goTrialCount)&#10;    omissionRate = str(omissionCount/goTrialCount)&#10;else: &#10;    commissionRate = 'Null'&#10;    omissionRate = 'Null'&#10;&#10;if stopTrialCount &gt; 0: &#10;    probabilityOfStop = str(stopSuccessCount/stopTrialCount)&#10;else:&#10;    probabilityOfStop = 'Null'&#10;&#10;SSDFeedback = str((SSDLeft+SSDRight)/2)&#10;&#10;stopMessage = &quot;RT = &quot; + str(goRTFeedback) + &quot;Omission % = &quot; + str(omissionRate) + &quot;Commission % = &quot; + str(commissionRate) + &quot;    &quot; + str(probabilityOfStop) + &quot;    &quot; + str(SSDFeedback)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="text_5">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_5" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stopMessage&#10;" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_3">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_3" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'y','n','left','right','space'" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="ExitPrac">\u000a      <CodeComponent name="code_5">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_5" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="if resp.corr:&#10;    ReDoLoop.finished = True " valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="trial">\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'u', 'i', 'j', 'k'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$currentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[151, 151]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="newStopStim">\u000a      <CodeComponent name="code_7">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_7" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="currentStopTrial = stopTrialList.pop(0)&#10;currentGoStim = currentStopTrial['fileName']&#10;currentStopOrGo = currentStopTrial['stopOrGo']&#10;&#10;&#10;&#10;#if xPosGoStim == -200:&#10;#    SSD = SSDLeft + 500&#10;#else:&#10;#    SSD = SSDRight + 500&#10;&#10;if currentStopOrGo == 'stop':&#10;    if xPosGoStim == -200:&#10;        SSD = SSDLeft + .5&#10;    else:&#10;        SSD = SSDRight + .5&#10;else:&#10;    SSD = -1" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="Blank">\u000a      <TextComponent name="text_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val=".5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="StimSetup">\u000a      <CodeComponent name="code">\u000a        <Param name="Begin Experiment" val="from copy import deepcopy&#10;colors = ['yellow', 'white', 'orange', 'magenta', 'green', 'gray', 'cyan', 'blue']&#10;shapes = ['triangle', 'square', 'line', 'invertedtriangle', 'hexagon', 'diamond', 'cross', 'circle']&#10;rewards = [0.50, 1.00, 2.00, 4.00] * 2&#10;conditions = ['go', 'go', 'go', 'go', 'stop', 'stop', 'stop', 'stop']&#10;trialDetailsList = []&#10;learningTrialList = []&#10;&#10;shuffle(colors)&#10;shuffle(shapes)&#10;&#10;for i, color in enumerate(colors): # cycle through each color and keep track of an index number&#10;    trialDetails = {} # a dictionary of key-value pairs&#10;    trialDetails['fileName'] = shapes[i] + color + '.gif'&#10;    trialDetails['reward'] = rewards[i]&#10;    trialDetails['condition'] = conditions[i]&#10;    trialDetailsList.append(trialDetails)&#10;&#10;shuffle(trialDetailsList) # do this now to ensure that order of presentation of rewards and conditions is also shuffled&#10;&#10;conditionOne = trialDetailsList[0]&#10;conditionTwo = trialDetailsList[1]&#10;conditionThree = trialDetailsList[2]&#10;conditionFour = trialDetailsList[3]&#10;conditionFive = trialDetailsList[4]&#10;conditionSix = trialDetailsList[5]&#10;conditionSeven = trialDetailsList[6]&#10;conditionEight = trialDetailsList[7]&#10;&#10;numLearningTrials = 400&#10;numLearningRepetitions = 50&#10;for k in range(1, numLearningRepetitions + 1):&#10;    learningTrialList.append(conditionOne)&#10;    learningTrialList.append(conditionTwo)&#10;    learningTrialList.append(conditionThree)&#10;    learningTrialList.append(conditionFour)&#10;    learningTrialList.append(conditionFive)&#10;    learningTrialList.append(conditionSix)&#10;    learningTrialList.append(conditionSeven)&#10;    learningTrialList.append(conditionEight)&#10;&#10;shuffle(learningTrialList)&#10;&#10;stopTaskTrials = 272&#10;stopTrialsPerStopStim = 26&#10;goTrialsPerStopStim = 8&#10;goTrialsPerGoStim = 34&#10;numStim = 8&#10;stopTrialList = []&#10;&#10;if conditionOne['condition'] == 'go':&#10;    conditionOne['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionOne)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionOne['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionOne))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionOne['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionOne))&#10;if conditionTwo['condition'] == 'go':&#10;    conditionTwo['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionTwo)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionTwo['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionTwo))&#10;    for i in range(1,  stopTrialsPerStopStim + 1):&#10;        conditionTwo['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionTwo))&#10;if conditionThree['condition'] == 'go':&#10;    conditionThree['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionThree)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionThree['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionThree))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionThree['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionThree))&#10;if conditionFour['condition'] == 'go':&#10;    conditionFour['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionFour)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionFour['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionFour))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionFour['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionFour))&#10;if conditionFive['condition'] == 'go':&#10;    conditionFive['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionFive)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionFive['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionFive))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionFive['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionFive))&#10;if conditionSix['condition'] == 'go':&#10;    conditionSix['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionSix)&#10;else:&#10;    for j in range(1, stopTrialsPerStopStim + 1):&#10;        conditionSix['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionSix))&#10;    for i in range(1, goTrialsPerStopStim + 1):&#10;        conditionSix['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionSix))&#10;if conditionSeven['condition'] == 'go':&#10;    conditionSeven['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionSeven)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionSeven['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionSeven))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionSeven['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionSeven))&#10;if conditionEight['condition'] == 'go':&#10;    conditionEight['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionEight)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionEight['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionEight))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionEight['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionEight))&#10;&#10;shuffle(stopTrialList)" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#message variable just needs some value at start&#10;message=0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="import random&#10;&#10;displayReward = random.randrange(1, 6)&#10;&#10;if resp.corr:#stored on last run routine&#10;    if displayReward == 1:&#10;            message = &quot;You won $&quot; + str(0);&#10;    else: &#10;            currentReward = currentLearningTrial['reward']&#10;            message = &quot;You won $&quot; + str(currentReward + (random.randrange(-25, 26)*.01))&#10;elif resp.keys is None: #or len(key_resp.keys)&lt;1:&#10;#elif resp.rt == 0:&#10;    message =&quot;Too Slow&quot;&#10;else:&#10;  message=&quot;Wrong&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val=".2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$currentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[151, 151]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="Bank"/>\u000a    <Routine name="StopTrial">\u000a      <SoundComponent name="sound_1">\u000a        <Param name="sound" val="900" valType="str" updates="constant"/>\u000a        <Param name="volume" val=".2" valType="code" updates="constant"/>\u000a        <Param name="name" val="sound_1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val=".2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startEstim" val=".75" valType="code" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$SSD" valType="code" updates="None"/>\u000a      </SoundComponent>\u000a      <TextComponent name="text_3">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_3" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="|" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="4" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_3">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_3" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPosGoStim, yPosGoStim]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$currentGoStim" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[151, 151]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <KeyboardComponent name="goResp">\u000a        <Param name="correctAns" val="$corrGoResp" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="goResp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'z','m'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="StimSetup"/>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="0" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="ResetAtBlock"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="TrialtypesLearning.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="25" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'h', u'yPos': 200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'n', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'b', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="NewStim"/>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoopMain">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoopMain" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="999" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <Routine name="Blank"/>\u000a    <Routine name="ExitMain"/>\u000a    <LoopTerminator name="ReDoLoopMain"/>\u000a    <LoopTerminator name="trials"/>\u000a    <LoopTerminator name="Blocks"/>\u000a    <Routine name="instrStopPrac"/>\u000a    <LoopInitiator loopType="TrialHandler" name="StopBlocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="StopBlocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="4" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="stopBlockSetup"/>\u000a    <LoopInitiator loopType="TrialHandler" name="StopTrials">\u000a      <Param name="conditionsFile" val="trialtypeStop.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="StopTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="17" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'corrGoResp': u'z', u'yPosGoStim': 0, u'xPosGoStim': -200}, {u'corrGoResp': u'm', u'yPosGoStim': 0, u'xPosGoStim': 200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="newStopStim"/>\u000a    <Routine name="StopTrial"/>\u000a    <Routine name="blankStop"/>\u000a    <Routine name="SSDChange"/>\u000a    <LoopTerminator name="StopTrials"/>\u000a    <Routine name="endOfStopBlockFeedback"/>\u000a    <LoopTerminator name="StopBlocks"/>\u000a    <Routine name="End"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p99
sg45
g1
(cpsychopy.data
TrialType
p100
g51
(dp101
VcorrGoResp
p102
Vz
sVyPosGoStim
p103
I0
sVxPosGoStim
p104
I-200
stRp105
sg46
I243216976
sg11
S'StopTrials'
p106
sg6
g7
sg48
I3
sg22
I01
sg23
g24
sg49
g1
(g50
g51
(dp107
g53
g54
(g55
g56
g57
S'b'
tRp108
(I1
(I2
I17
tg59
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg17
g60
(g56
(I0
tS'b'
tRp109
(I1
(I2
I17
tg62
I00
(lp110
NaNaNaNaS'--'
p111
aS'--'
p112
aS'--'
p113
aS'--'
p114
aS'--'
p115
aS'--'
p116
aS'--'
p117
aS'--'
p118
aS'--'
p119
aS'--'
p120
aS'--'
p121
aS'--'
p122
aS'--'
p123
aS'm'
aNaNaNaS'--'
p124
aS'--'
p125
aS'--'
p126
aS'--'
p127
aS'--'
p128
aS'--'
p129
aS'--'
p130
aS'--'
p131
aS'--'
p132
aS'--'
p133
aS'--'
p134
aS'--'
p135
aS'--'
p136
atbsg18
g54
(g55
g56
g57
S'b'
tRp137
(I1
(I2
I17
tg59
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x00\x00\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01'
Ntbsg68
g54
(g55
g56
g57
S'b'
tRp138
(I1
(I2
I17
tg59
I00
S'\x00\x00\x80?\x00\x00\x00@\x00\x00\xa0@\x00\x00\xe0@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@@\x00\x00\x80@\x00\x00\xc0@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x00\x00\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01'
Ntbsg19
g54
(g55
g56
g57
S'b'
tRp139
(I1
(I2
I17
tg59
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00$j"?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01'
NtbstRp140
(dp141
g73
(dp142
g53
I01
sg17
I00
sg18
I01
sg68
I01
sg19
I01
ssg75
g97
sg76
(lp143
g53
ag68
ag17
ag18
ag19
asg78
(lp144
I2
aI17
asbsg80
S'fullRandom'
p145
sg82
g60
(g56
(I0
tS'b'
tRp146
(I1
(I2
I17
tg62
I00
(lp147
I1
aI0
aI1
aI1
aI1
aI1
aI0
aI1
aI0
aI0
aI1
aI0
aI0
aI0
aI1
aI0
aI0
aI0
aI1
aI0
aI0
aI1
aI0
aI1
aI1
aI1
aI0
aI0
aI0
aI1
aI1
aI0
aI1
aI1
atbsg85
I00
sg86
I17
sg87
I26
sg88
(lp148
g105
ag1
(g100
g51
(dp149
g102
Vm
sg103
I0
sg104
I200
stRp150
asg90
Nsg91
I0
sg93
I7
sg94
I1
sg95
I34
sg96
I01
sbasS'saveWideText'
p151
I01
sS'thisEntry'
p152
(dp153
g17
Nsg18
I0
ssS'version'
p154
S''
sS'_paramNamesSoFar'
p155
(lp156
VcorrGoResp
p157
aVyPosGoStim
p158
aVxPosGoStim
p159
asS'entries'
p160
(lp161
(dp162
g33
I3
sg26
V
sg16
F1.7384040355682373
sg27
V
sg28
g32
sg25
g12
sg15
S'space'
p163
sg34
g35
sg36
g37
sa(dp164
g18
I1
sS'StopBlocks.thisIndex'
p165
g29
(g84
S'\x00\x00\x00\x00'
tRp166
sg19
F0.36292886734008789
sg28
g32
sS'StopTrials.thisRepN'
p167
I0
sg34
g35
sS'StopBlocks.thisTrialN'
p168
I0
sg157
Vz
sg26
V
sg158
I0
sS'StopBlocks.thisTrial'
p169
Nsg33
I3
sg36
g37
sS'StopTrials.thisTrialN'
p170
I0
sg17
S'z'
sg27
V
sS'StopTrials.thisIndex'
p171
I0
sS'StopBlocks.thisRepN'
p172
I0
sg25
g12
sS'StopBlocks.thisN'
p173
I0
sS'StopTrials.thisN'
p174
I0
sg159
I-200
sa(dp175
g18
I1
sS'StopBlocks.thisIndex'
p176
g166
sg19
F0.46753382682800293
sg28
g32
sS'StopTrials.thisRepN'
p177
I0
sg34
g35
sS'StopBlocks.thisTrialN'
p178
I0
sg157
Vz
sg26
V
sg158
I0
sS'StopBlocks.thisTrial'
p179
Nsg33
I3
sg36
g37
sS'StopTrials.thisTrialN'
p180
I1
sg17
S'z'
sg27
V
sS'StopTrials.thisIndex'
p181
I0
sS'StopBlocks.thisRepN'
p182
I0
sg25
g12
sS'StopBlocks.thisN'
p183
I0
sS'StopTrials.thisN'
p184
I1
sg159
I-200
sa(dp185
g18
I1
sS'StopBlocks.thisIndex'
p186
g166
sg19
F0.60103201866149902
sg28
g32
sS'StopTrials.thisRepN'
p187
I1
sg34
g35
sS'StopBlocks.thisTrialN'
p188
I0
sg157
Vz
sg26
V
sg158
I0
sS'StopBlocks.thisTrial'
p189
Nsg33
I3
sg36
g37
sS'StopTrials.thisTrialN'
p190
I0
sg17
S'z'
sg27
V
sS'StopTrials.thisIndex'
p191
I0
sS'StopBlocks.thisRepN'
p192
I0
sg25
g12
sS'StopBlocks.thisN'
p193
I0
sS'StopTrials.thisN'
p194
I2
sg159
I-200
sa(dp195
g18
I1
sS'StopBlocks.thisIndex'
p196
g166
sg19
F0.51745295524597168
sg28
g32
sS'StopTrials.thisRepN'
p197
I1
sg34
g35
sS'StopBlocks.thisTrialN'
p198
I0
sg157
Vm
sg26
V
sg158
I0
sS'StopBlocks.thisTrial'
p199
Nsg33
I3
sg36
g37
sS'StopTrials.thisTrialN'
p200
I1
sg17
S'm'
sg27
V
sS'StopTrials.thisIndex'
p201
I1
sS'StopBlocks.thisRepN'
p202
I0
sg25
g12
sS'StopBlocks.thisN'
p203
I0
sS'StopTrials.thisN'
p204
I3
sg159
I200
sa(dp205
g18
I1
sS'StopBlocks.thisIndex'
p206
g166
sg19
F0.45079207420349121
sg28
g32
sS'StopTrials.thisRepN'
p207
I2
sg34
g35
sS'StopBlocks.thisTrialN'
p208
I0
sg157
Vm
sg26
V
sg158
I0
sS'StopBlocks.thisTrial'
p209
Nsg33
I3
sg36
g37
sS'StopTrials.thisTrialN'
p210
I0
sg17
S'm'
sg27
V
sS'StopTrials.thisIndex'
p211
I1
sS'StopBlocks.thisRepN'
p212
I0
sg25
g12
sS'StopBlocks.thisN'
p213
I0
sS'StopTrials.thisN'
p214
I4
sg159
I200
sa(dp215
g18
I1
sS'StopBlocks.thisIndex'
p216
g166
sg19
F0.667877197265625
sg28
g32
sS'StopTrials.thisRepN'
p217
I2
sg34
g35
sS'StopBlocks.thisTrialN'
p218
I0
sg157
Vz
sg26
V
sg158
I0
sS'StopBlocks.thisTrial'
p219
Nsg33
I3
sg36
g37
sS'StopTrials.thisTrialN'
p220
I1
sg17
S'z'
sg27
V
sS'StopTrials.thisIndex'
p221
I0
sS'StopBlocks.thisRepN'
p222
I0
sg25
g12
sS'StopBlocks.thisN'
p223
I0
sS'StopTrials.thisN'
p224
I5
sg159
I-200
sa(dp225
g18
I1
sS'StopBlocks.thisIndex'
p226
g166
sg19
F0.55083513259887695
sg28
g32
sS'StopTrials.thisRepN'
p227
I3
sg34
g35
sS'StopBlocks.thisTrialN'
p228
I0
sg157
Vm
sg26
V
sg158
I0
sS'StopBlocks.thisTrial'
p229
Nsg33
I3
sg36
g37
sS'StopTrials.thisTrialN'
p230
I0
sg17
S'm'
sg27
V
sS'StopTrials.thisIndex'
p231
I1
sS'StopBlocks.thisRepN'
p232
I0
sg25
g12
sS'StopBlocks.thisN'
p233
I0
sS'StopTrials.thisN'
p234
I6
sg159
I200
sa(dp235
g18
I1
sS'StopBlocks.thisIndex'
p236
g166
sg19
F0.45092105865478516
sg28
g32
sS'StopTrials.thisRepN'
p237
I3
sg34
g35
sS'StopBlocks.thisTrialN'
p238
I0
sg157
Vz
sg26
V
sg158
I0
sS'StopBlocks.thisTrial'
p239
Nsg33
I3
sg36
g37
sS'StopTrials.thisTrialN'
p240
I1
sg17
S'z'
sg27
V
sS'StopTrials.thisIndex'
p241
I0
sS'StopBlocks.thisRepN'
p242
I0
sg25
g12
sS'StopBlocks.thisN'
p243
I0
sS'StopTrials.thisN'
p244
I7
sg159
I-200
sa(dp245
g18
I1
sS'StopBlocks.thisIndex'
p246
g166
sg19
F0.30072808265686035
sg28
g32
sS'StopTrials.thisRepN'
p247
I4
sg34
g35
sS'StopBlocks.thisTrialN'
p248
I0
sg157
Vm
sg26
V
sg158
I0
sS'StopBlocks.thisTrial'
p249
Nsg33
I3
sg36
g37
sS'StopTrials.thisTrialN'
p250
I0
sg17
S'm'
sg27
V
sS'StopTrials.thisIndex'
p251
I1
sS'StopBlocks.thisRepN'
p252
I0
sg25
g12
sS'StopBlocks.thisN'
p253
I0
sS'StopTrials.thisN'
p254
I8
sg159
I200
sa(dp255
g18
I1
sS'StopBlocks.thisIndex'
p256
g166
sg19
F0.38368701934814453
sg28
g32
sS'StopTrials.thisRepN'
p257
I4
sg34
g35
sS'StopBlocks.thisTrialN'
p258
I0
sg157
Vm
sg26
V
sg158
I0
sS'StopBlocks.thisTrial'
p259
Nsg33
I3
sg36
g37
sS'StopTrials.thisTrialN'
p260
I1
sg17
S'm'
sg27
V
sS'StopTrials.thisIndex'
p261
I1
sS'StopBlocks.thisRepN'
p262
I0
sg25
g12
sS'StopBlocks.thisN'
p263
I0
sS'StopTrials.thisN'
p264
I9
sg159
I200
sa(dp265
g18
I1
sS'StopBlocks.thisIndex'
p266
g166
sg19
F0.30035400390625
sg28
g32
sS'StopTrials.thisRepN'
p267
I5
sg34
g35
sS'StopBlocks.thisTrialN'
p268
I0
sg157
Vz
sg26
V
sg158
I0
sS'StopBlocks.thisTrial'
p269
Nsg33
I3
sg36
g37
sS'StopTrials.thisTrialN'
p270
I0
sg17
S'z'
sg27
V
sS'StopTrials.thisIndex'
p271
I0
sS'StopBlocks.thisRepN'
p272
I0
sg25
g12
sS'StopBlocks.thisN'
p273
I0
sS'StopTrials.thisN'
p274
I10
sg159
I-200
sa(dp275
g18
I1
sS'StopBlocks.thisIndex'
p276
g166
sg19
F0.36758995056152344
sg28
g32
sS'StopTrials.thisRepN'
p277
I5
sg34
g35
sS'StopBlocks.thisTrialN'
p278
I0
sg157
Vz
sg26
V
sg158
I0
sS'StopBlocks.thisTrial'
p279
Nsg33
I3
sg36
g37
sS'StopTrials.thisTrialN'
p280
I1
sg17
S'z'
sg27
V
sS'StopTrials.thisIndex'
p281
I0
sS'StopBlocks.thisRepN'
p282
I0
sg25
g12
sS'StopBlocks.thisN'
p283
I0
sS'StopTrials.thisN'
p284
I11
sg159
I-200
sa(dp285
g18
I1
sS'StopBlocks.thisIndex'
p286
g166
sg19
F0.45117521286010742
sg28
g32
sS'StopTrials.thisRepN'
p287
I6
sg34
g35
sS'StopBlocks.thisTrialN'
p288
I0
sg157
Vz
sg26
V
sg158
I0
sS'StopBlocks.thisTrial'
p289
Nsg33
I3
sg36
g37
sS'StopTrials.thisTrialN'
p290
I0
sg17
S'z'
sg27
V
sS'StopTrials.thisIndex'
p291
I0
sS'StopBlocks.thisRepN'
p292
I0
sg25
g12
sS'StopBlocks.thisN'
p293
I0
sS'StopTrials.thisN'
p294
I12
sg159
I-200
sa(dp295
g18
I1
sS'StopBlocks.thisIndex'
p296
g166
sg19
F0.30088090896606445
sg28
g32
sS'StopTrials.thisRepN'
p297
I6
sg34
g35
sS'StopBlocks.thisTrialN'
p298
I0
sg157
Vm
sg26
V
sg158
I0
sS'StopBlocks.thisTrial'
p299
Nsg33
I3
sg36
g37
sS'StopTrials.thisTrialN'
p300
I1
sg17
S'm'
sg27
V
sS'StopTrials.thisIndex'
p301
I1
sS'StopBlocks.thisRepN'
p302
I0
sg25
g12
sS'StopBlocks.thisN'
p303
I0
sS'StopTrials.thisN'
p304
I13
sg159
I200
sa(dp305
g18
I1
sS'StopBlocks.thisIndex'
p306
g166
sg19
F0.35095810890197754
sg28
g32
sS'StopTrials.thisRepN'
p307
I7
sg34
g35
sS'StopBlocks.thisTrialN'
p308
I0
sg157
Vz
sg26
V
sg158
I0
sS'StopBlocks.thisTrial'
p309
Nsg33
I3
sg36
g37
sS'StopTrials.thisTrialN'
p310
I0
sg17
S'z'
sg27
V
sS'StopTrials.thisIndex'
p311
I0
sS'StopBlocks.thisRepN'
p312
I0
sg25
g12
sS'StopBlocks.thisN'
p313
I0
sS'StopTrials.thisN'
p314
I14
sg159
I-200
sa(dp315
g18
I1
sS'StopBlocks.thisIndex'
p316
g166
sg19
F0.31732392311096191
sg28
g32
sS'StopTrials.thisRepN'
p317
I7
sg34
g35
sS'StopBlocks.thisTrialN'
p318
I0
sg157
Vm
sg26
V
sg158
I0
sS'StopBlocks.thisTrial'
p319
Nsg33
I3
sg36
g37
sS'StopTrials.thisTrialN'
p320
I1
sg17
S'm'
sg27
V
sS'StopTrials.thisIndex'
p321
I1
sS'StopBlocks.thisRepN'
p322
I0
sg25
g12
sS'StopBlocks.thisN'
p323
I0
sS'StopTrials.thisN'
p324
I15
sg159
I200
sa(dp325
g33
I3
sg25
g12
sg18
I0
sS'StopBlocks.thisIndex'
p326
g166
sS'StopTrials.thisTrialN'
p327
I0
sg17
Nsg27
V
sg36
g37
sg28
g32
sS'StopTrials.thisRepN'
p328
I8
sS'StopTrials.thisIndex'
p329
I0
sg159
I-200
sS'StopBlocks.thisRepN'
p330
I0
sS'StopBlocks.thisTrialN'
p331
I0
sg34
g35
sg157
Vz
sg26
V
sS'StopBlocks.thisN'
p332
I0
sS'StopTrials.thisN'
p333
I16
sS'StopBlocks.thisTrial'
p334
Nsg158
I0
sa(dp335
g33
I3
sg25
g12
sg18
I0
sS'StopBlocks.thisIndex'
p336
g166
sS'StopTrials.thisTrialN'
p337
I1
sg17
Nsg27
V
sg36
g37
sg28
g32
sS'StopTrials.thisRepN'
p338
I8
sS'StopTrials.thisIndex'
p339
I1
sg159
I200
sS'StopBlocks.thisRepN'
p340
I0
sS'StopBlocks.thisTrialN'
p341
I0
sg34
g35
sg157
Vm
sg26
V
sS'StopBlocks.thisN'
p342
I0
sS'StopTrials.thisN'
p343
I17
sS'StopBlocks.thisTrial'
p344
Nsg158
I0
sa(dp345
g33
I3
sg25
g12
sg18
I0
sS'StopBlocks.thisIndex'
p346
g166
sS'StopTrials.thisTrialN'
p347
I0
sg17
Nsg27
V
sg36
g37
sg28
g32
sS'StopTrials.thisRepN'
p348
I9
sS'StopTrials.thisIndex'
p349
I0
sg159
I-200
sS'StopBlocks.thisRepN'
p350
I0
sS'StopBlocks.thisTrialN'
p351
I0
sg34
g35
sg157
Vz
sg26
V
sS'StopBlocks.thisN'
p352
I0
sS'StopTrials.thisN'
p353
I18
sS'StopBlocks.thisTrial'
p354
Nsg158
I0
sa(dp355
g33
I3
sg25
g12
sg18
I0
sS'StopBlocks.thisIndex'
p356
g166
sS'StopTrials.thisTrialN'
p357
I1
sg17
Nsg27
V
sg36
g37
sg28
g32
sS'StopTrials.thisRepN'
p358
I9
sS'StopTrials.thisIndex'
p359
I0
sg159
I-200
sS'StopBlocks.thisRepN'
p360
I0
sS'StopBlocks.thisTrialN'
p361
I0
sg34
g35
sg157
Vz
sg26
V
sS'StopBlocks.thisN'
p362
I0
sS'StopTrials.thisN'
p363
I19
sS'StopBlocks.thisTrial'
p364
Nsg158
I0
sa(dp365
g33
I3
sg25
g12
sg18
I0
sS'StopBlocks.thisIndex'
p366
g166
sS'StopTrials.thisTrialN'
p367
I0
sg17
Nsg27
V
sg36
g37
sg28
g32
sS'StopTrials.thisRepN'
p368
I10
sS'StopTrials.thisIndex'
p369
I1
sg159
I200
sS'StopBlocks.thisRepN'
p370
I0
sS'StopBlocks.thisTrialN'
p371
I0
sg34
g35
sg157
Vm
sg26
V
sS'StopBlocks.thisN'
p372
I0
sS'StopTrials.thisN'
p373
I20
sS'StopBlocks.thisTrial'
p374
Nsg158
I0
sa(dp375
g33
I3
sg25
g12
sg18
I0
sS'StopBlocks.thisIndex'
p376
g166
sS'StopTrials.thisTrialN'
p377
I1
sg17
Nsg27
V
sg36
g37
sg28
g32
sS'StopTrials.thisRepN'
p378
I10
sS'StopTrials.thisIndex'
p379
I0
sg159
I-200
sS'StopBlocks.thisRepN'
p380
I0
sS'StopBlocks.thisTrialN'
p381
I0
sg34
g35
sg157
Vz
sg26
V
sS'StopBlocks.thisN'
p382
I0
sS'StopTrials.thisN'
p383
I21
sS'StopBlocks.thisTrial'
p384
Nsg158
I0
sa(dp385
g33
I3
sg25
g12
sg18
I0
sS'StopBlocks.thisIndex'
p386
g166
sS'StopTrials.thisTrialN'
p387
I0
sg17
Nsg27
V
sg36
g37
sg28
g32
sS'StopTrials.thisRepN'
p388
I11
sS'StopTrials.thisIndex'
p389
I1
sg159
I200
sS'StopBlocks.thisRepN'
p390
I0
sS'StopBlocks.thisTrialN'
p391
I0
sg34
g35
sg157
Vm
sg26
V
sS'StopBlocks.thisN'
p392
I0
sS'StopTrials.thisN'
p393
I22
sS'StopBlocks.thisTrial'
p394
Nsg158
I0
sa(dp395
g33
I3
sg25
g12
sg18
I0
sS'StopBlocks.thisIndex'
p396
g166
sS'StopTrials.thisTrialN'
p397
I1
sg17
Nsg27
V
sg36
g37
sg28
g32
sS'StopTrials.thisRepN'
p398
I11
sS'StopTrials.thisIndex'
p399
I1
sg159
I200
sS'StopBlocks.thisRepN'
p400
I0
sS'StopBlocks.thisTrialN'
p401
I0
sg34
g35
sg157
Vm
sg26
V
sS'StopBlocks.thisN'
p402
I0
sS'StopTrials.thisN'
p403
I23
sS'StopBlocks.thisTrial'
p404
Nsg158
I0
sa(dp405
g33
I3
sg25
g12
sg18
I0
sS'StopBlocks.thisIndex'
p406
g166
sS'StopTrials.thisTrialN'
p407
I0
sg17
Nsg27
V
sg36
g37
sg28
g32
sS'StopTrials.thisRepN'
p408
I12
sS'StopTrials.thisIndex'
p409
I0
sg159
I-200
sS'StopBlocks.thisRepN'
p410
I0
sS'StopBlocks.thisTrialN'
p411
I0
sg34
g35
sg157
Vz
sg26
V
sS'StopBlocks.thisN'
p412
I0
sS'StopTrials.thisN'
p413
I24
sS'StopBlocks.thisTrial'
p414
Nsg158
I0
sa(dp415
g33
I3
sg25
g12
sg18
I0
sS'StopBlocks.thisIndex'
p416
g166
sS'StopTrials.thisTrialN'
p417
I1
sg17
Nsg27
V
sg36
g37
sg28
g32
sS'StopTrials.thisRepN'
p418
I12
sS'StopTrials.thisIndex'
p419
I1
sg159
I200
sS'StopBlocks.thisRepN'
p420
I0
sS'StopBlocks.thisTrialN'
p421
I0
sg34
g35
sg157
Vm
sg26
V
sS'StopBlocks.thisN'
p422
I0
sS'StopTrials.thisN'
p423
I25
sS'StopBlocks.thisTrial'
p424
Nsg158
I0
sa(dp425
g33
I3
sg25
g12
sg18
I0
sS'StopBlocks.thisIndex'
p426
g166
sS'StopTrials.thisTrialN'
p427
I0
sg17
Nsg27
V
sg36
g37
sg28
g32
sS'StopTrials.thisRepN'
p428
I13
sS'StopTrials.thisIndex'
p429
I0
sg159
I-200
sS'StopBlocks.thisRepN'
p430
I0
sS'StopBlocks.thisTrialN'
p431
I0
sg34
g35
sg157
Vz
sg26
V
sS'StopBlocks.thisN'
p432
I0
sS'StopTrials.thisN'
p433
I26
sS'StopBlocks.thisTrial'
p434
Nsg158
I0
sa(dp435
g33
I3
sg25
g12
sg18
I0
sS'StopBlocks.thisIndex'
p436
g166
sS'StopTrials.thisTrialN'
p437
I1
sg17
Nsg27
V
sg36
g37
sg28
g32
sS'StopTrials.thisRepN'
p438
I13
sS'StopTrials.thisIndex'
p439
I0
sg159
I-200
sS'StopBlocks.thisRepN'
p440
I0
sS'StopBlocks.thisTrialN'
p441
I0
sg34
g35
sg157
Vz
sg26
V
sS'StopBlocks.thisN'
p442
I0
sS'StopTrials.thisN'
p443
I27
sS'StopBlocks.thisTrial'
p444
Nsg158
I0
sa(dp445
g33
I3
sg25
g12
sg18
I0
sS'StopBlocks.thisIndex'
p446
g166
sS'StopTrials.thisTrialN'
p447
I0
sg17
Nsg27
V
sg36
g37
sg28
g32
sS'StopTrials.thisRepN'
p448
I14
sS'StopTrials.thisIndex'
p449
I1
sg159
I200
sS'StopBlocks.thisRepN'
p450
I0
sS'StopBlocks.thisTrialN'
p451
I0
sg34
g35
sg157
Vm
sg26
V
sS'StopBlocks.thisN'
p452
I0
sS'StopTrials.thisN'
p453
I28
sS'StopBlocks.thisTrial'
p454
Nsg158
I0
sa(dp455
g33
I3
sg25
g12
sg18
I0
sS'StopBlocks.thisIndex'
p456
g166
sS'StopTrials.thisTrialN'
p457
I1
sg17
Nsg27
V
sg36
g37
sg28
g32
sS'StopTrials.thisRepN'
p458
I14
sS'StopTrials.thisIndex'
p459
I1
sg159
I200
sS'StopBlocks.thisRepN'
p460
I0
sS'StopBlocks.thisTrialN'
p461
I0
sg34
g35
sg157
Vm
sg26
V
sS'StopBlocks.thisN'
p462
I0
sS'StopTrials.thisN'
p463
I29
sS'StopBlocks.thisTrial'
p464
Nsg158
I0
sa(dp465
g33
I3
sg25
g12
sg18
I0
sS'StopBlocks.thisIndex'
p466
g166
sS'StopTrials.thisTrialN'
p467
I0
sg17
Nsg27
V
sg36
g37
sg28
g32
sS'StopTrials.thisRepN'
p468
I15
sS'StopTrials.thisIndex'
p469
I1
sg159
I200
sS'StopBlocks.thisRepN'
p470
I0
sS'StopBlocks.thisTrialN'
p471
I0
sg34
g35
sg157
Vm
sg26
V
sS'StopBlocks.thisN'
p472
I0
sS'StopTrials.thisN'
p473
I30
sS'StopBlocks.thisTrial'
p474
Nsg158
I0
sa(dp475
g33
I3
sg25
g12
sg18
I0
sS'StopBlocks.thisIndex'
p476
g166
sS'StopTrials.thisTrialN'
p477
I1
sg17
Nsg27
V
sg36
g37
sg28
g32
sS'StopTrials.thisRepN'
p478
I15
sS'StopTrials.thisIndex'
p479
I0
sg159
I-200
sS'StopBlocks.thisRepN'
p480
I0
sS'StopBlocks.thisTrialN'
p481
I0
sg34
g35
sg157
Vz
sg26
V
sS'StopBlocks.thisN'
p482
I0
sS'StopTrials.thisN'
p483
I31
sS'StopBlocks.thisTrial'
p484
Nsg158
I0
sa(dp485
g33
I3
sg25
g12
sg18
I0
sS'StopBlocks.thisIndex'
p486
g166
sS'StopTrials.thisTrialN'
p487
I0
sg17
Nsg27
V
sg36
g37
sg28
g32
sS'StopTrials.thisRepN'
p488
I16
sS'StopTrials.thisIndex'
p489
I1
sg159
I200
sS'StopBlocks.thisRepN'
p490
I0
sS'StopBlocks.thisTrialN'
p491
I0
sg34
g35
sg157
Vm
sg26
V
sS'StopBlocks.thisN'
p492
I0
sS'StopTrials.thisN'
p493
I32
sS'StopBlocks.thisTrial'
p494
Nsg158
I0
sa(dp495
g33
I3
sg25
g12
sg18
I0
sS'StopBlocks.thisIndex'
p496
g166
sS'StopTrials.thisTrialN'
p497
I1
sg17
Nsg27
V
sg36
g37
sg28
g32
sS'StopTrials.thisRepN'
p498
I16
sS'StopTrials.thisIndex'
p499
I1
sg159
I200
sS'StopBlocks.thisRepN'
p500
I0
sS'StopBlocks.thisTrialN'
p501
I0
sg34
g35
sg157
Vm
sg26
V
sS'StopBlocks.thisN'
p502
I0
sS'StopTrials.thisN'
p503
I33
sS'StopBlocks.thisTrial'
p504
Nsg158
I0
sa(dp505
g33
I3
sS'StopBlocks.thisTrialN'
p506
I0
sS'StopBlocks.thisIndex'
p507
g166
sg28
g32
sg27
V
sg36
g37
sg26
V
sS'StopBlocks.thisRepN'
p508
I0
sg25
g12
sg34
g35
sg20
g64
sS'StopBlocks.thisN'
p509
I0
sS'StopBlocks.thisTrial'
p510
Nsg21
F26.772578001022339
sa(dp511
g18
I1
sS'StopBlocks.thisIndex'
p512
g92
sg19
F0.63443207740783691
sg28
g32
sS'StopTrials.thisRepN'
p513
I0
sg34
g35
sS'StopBlocks.thisTrialN'
p514
I0
sg102
Vm
sg26
V
sg103
I0
sS'StopBlocks.thisTrial'
p515
Nsg33
I3
sg36
g37
sS'StopTrials.thisTrialN'
p516
I0
sg17
S'm'
sg27
V
sS'StopTrials.thisIndex'
p517
I1
sS'StopBlocks.thisRepN'
p518
I1
sg25
g12
sS'StopBlocks.thisN'
p519
I1
sS'StopTrials.thisN'
p520
I0
sg104
I200
sa(dp521
g33
I3
sg25
g12
sg18
I0
sS'StopBlocks.thisIndex'
p522
g92
sS'StopTrials.thisTrialN'
p523
I1
sg17
Nsg27
V
sg36
g37
sg28
g32
sS'StopTrials.thisRepN'
p524
I0
sS'StopTrials.thisIndex'
p525
I0
sg104
I-200
sS'StopBlocks.thisRepN'
p526
I1
sS'StopBlocks.thisTrialN'
p527
I0
sg34
g35
sg102
Vz
sg26
V
sS'StopBlocks.thisN'
p528
I1
sS'StopTrials.thisN'
p529
I1
sS'StopBlocks.thisTrial'
p530
Nsg103
I0
sa(dp531
g33
I3
sg25
g12
sg18
I0
sS'StopBlocks.thisIndex'
p532
g92
sS'StopTrials.thisTrialN'
p533
I0
sg17
Nsg27
V
sg36
g37
sg28
g32
sS'StopTrials.thisRepN'
p534
I1
sS'StopTrials.thisIndex'
p535
I0
sg104
I-200
sS'StopBlocks.thisRepN'
p536
I1
sS'StopBlocks.thisTrialN'
p537
I0
sg34
g35
sg102
Vz
sg26
V
sS'StopBlocks.thisN'
p538
I1
sS'StopTrials.thisN'
p539
I2
sS'StopBlocks.thisTrial'
p540
Nsg103
I0
sa(dp541
g33
I3
sg25
g12
sg18
I0
sS'StopBlocks.thisIndex'
p542
g92
sS'StopTrials.thisTrialN'
p543
I1
sg17
Nsg27
V
sg36
g37
sg28
g32
sS'StopTrials.thisRepN'
p544
I1
sS'StopTrials.thisIndex'
p545
I1
sg104
I200
sS'StopBlocks.thisRepN'
p546
I1
sS'StopBlocks.thisTrialN'
p547
I0
sg34
g35
sg102
Vm
sg26
V
sS'StopBlocks.thisN'
p548
I1
sS'StopTrials.thisN'
p549
I3
sS'StopBlocks.thisTrial'
p550
Nsg103
I0
sa(dp551
g33
I3
sg25
g12
sg18
I0
sS'StopBlocks.thisIndex'
p552
g92
sS'StopTrials.thisTrialN'
p553
I0
sg17
Nsg27
V
sg36
g37
sg28
g32
sS'StopTrials.thisRepN'
p554
I2
sS'StopTrials.thisIndex'
p555
I1
sg104
I200
sS'StopBlocks.thisRepN'
p556
I1
sS'StopBlocks.thisTrialN'
p557
I0
sg34
g35
sg102
Vm
sg26
V
sS'StopBlocks.thisN'
p558
I1
sS'StopTrials.thisN'
p559
I4
sS'StopBlocks.thisTrial'
p560
Nsg103
I0
sa(dp561
g33
I3
sg25
g12
sg18
I0
sS'StopBlocks.thisIndex'
p562
g92
sS'StopTrials.thisTrialN'
p563
I1
sg17
Nsg27
V
sg36
g37
sg28
g32
sS'StopTrials.thisRepN'
p564
I2
sS'StopTrials.thisIndex'
p565
I0
sg104
I-200
sS'StopBlocks.thisRepN'
p566
I1
sS'StopBlocks.thisTrialN'
p567
I0
sg34
g35
sg102
Vz
sg26
V
sS'StopBlocks.thisN'
p568
I1
sS'StopTrials.thisN'
p569
I5
sS'StopBlocks.thisTrial'
p570
Nsg103
I0
sa(dp571
g33
I3
sg25
g12
sg18
I0
sS'StopBlocks.thisIndex'
p572
g92
sS'StopTrials.thisTrialN'
p573
I0
sg17
Nsg27
V
sg36
g37
sg28
g32
sS'StopTrials.thisRepN'
p574
I3
sS'StopTrials.thisIndex'
p575
I1
sg104
I200
sS'StopBlocks.thisRepN'
p576
I1
sS'StopBlocks.thisTrialN'
p577
I0
sg34
g35
sg102
Vm
sg26
V
sS'StopBlocks.thisN'
p578
I1
sS'StopTrials.thisN'
p579
I6
sS'StopBlocks.thisTrial'
p580
Nsg103
I0
sasS'loops'
p581
(lp582
g1
(g40
g3
NtRp583
(dp584
g43
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="stopBlockSetup">\u000a      <CodeComponent name="code_9">\u000a        <Param name="Begin Experiment" val="goCumRT = 0&#10;goRTCount = 0&#10;omissionCount = 0&#10;commissionCount = 0&#10;stopTrialCount = 0&#10;stopSuccessCount = 0&#10;goTrialCount = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_9" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="blankStop">\u000a      <TextComponent name="text_4">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_4" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="End">\u000a      <TextComponent name="text_6">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_6" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="This is the end, beautiful friend" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instrStopPrac">\u000a      <TextComponent name="instrStopText">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instrStopText" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on the left or right side of the screen&#10;&#10;If it appears on the left, press Z&#10;&#10;If it appears on the right, press M&#10;&#10;If you hear a tone, do not press anything on that trial" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="code_8">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_8" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="InitSSD = .25&#10;SSDLeft = InitSSD&#10;SSDRight = InitSSD" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="ExitMain">\u000a      <CodeComponent name="code_6">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_6" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="if resp.corr:&#10;    ReDoLoopMain.finished = True" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="ResetAtBlock">\u000a      <CodeComponent name="code_3">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_3" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="Redo = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS I&#10;&#10;If it appears in the lower right quadrant, PRESS K&#10;&#10;If it appears in the lower left quadrant, PRESS J&#10;&#10;If it appears in the upper left quadrant, PRESS U&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.07" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="NewStim">\u000a      <CodeComponent name="code_4">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_4" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="currentLearningTrial = learningTrialList.pop(0)&#10;currentStimulus = currentLearningTrial['fileName']&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="SSDChange">\u000a      <CodeComponent name="code_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="if goResp.keys is None:&#10;    if xPosGoStim == -200:&#10;        SSDLeft = SSDLeft  + .05&#10;    if xPosGoStim == 200:&#10;        SSDRight = SSDRight + .05&#10;else:&#10;    if xPosGoStim == -200:&#10;        SSDLeft = SSDLeft - .05&#10;    if xPosGoStim == 200:&#10;        SSDRight = SSDRight - .05&#10;&#10;if currentStopTrial['stopOrGo'] == 'go':&#10;    goTrialCount = goTrialCount + 1&#10;&#10;if goResp.corr and currentStopTrial['stopOrGo'] == 'go':&#10;    goCumRT = goCumRT + goResp.rt&#10;    goRTCount = goRTCount + 1&#10;&#10;if currentStopTrial['stopOrGo'] == 'stop':&#10;    stopTrialCount = stopTrialCount + 1&#10;&#10;if currentStopTrial['stopOrGo'] == 'stop' and goResp.keys is None:&#10;    stopSuccessCount = stopSuccessCount + 1&#10;&#10;if goResp.keys is None and currentStopTrial['stopOrGo'] == 'go':&#10;    omissionCount = omissionCount + 1&#10;&#10;if goResp != corrGoResp:&#10;    commissionCount = commissionCount + 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="endOfStopBlockFeedback">\u000a      <CodeComponent name="code_10">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_10" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="&#10;if goRTCount &gt; 0:&#10;    goRTFeedback = str(goCumRT/goRTCount)&#10;else:&#10;    goRTFeedback = 'Null'&#10;&#10;if goTrialCount &gt; 0:&#10;    commissionRate = str(commissionCount/goTrialCount)&#10;    omissionRate = str(omissionCount/goTrialCount)&#10;else: &#10;    commissionRate = 'Null'&#10;    omissionRate = 'Null'&#10;&#10;if stopTrialCount &gt; 0: &#10;    probabilityOfStop = str(stopSuccessCount/stopTrialCount)&#10;else:&#10;    probabilityOfStop = 'Null'&#10;&#10;SSDFeedback = str((SSDLeft+SSDRight)/2)&#10;&#10;stopMessage = &quot;RT = &quot; + str(goRTFeedback) + &quot;Omission % = &quot; + str(omissionRate) + &quot;Commission % = &quot; + str(commissionRate) + &quot;    &quot; + str(probabilityOfStop) + &quot;    &quot; + str(SSDFeedback)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="text_5">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_5" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stopMessage&#10;" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_3">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_3" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'y','n','left','right','space'" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="ExitPrac">\u000a      <CodeComponent name="code_5">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_5" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="if resp.corr:&#10;    ReDoLoop.finished = True " valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="trial">\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'u', 'i', 'j', 'k'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$currentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[151, 151]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="newStopStim">\u000a      <CodeComponent name="code_7">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_7" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="currentStopTrial = stopTrialList.pop(0)&#10;currentGoStim = currentStopTrial['fileName']&#10;currentStopOrGo = currentStopTrial['stopOrGo']&#10;&#10;&#10;&#10;#if xPosGoStim == -200:&#10;#    SSD = SSDLeft + 500&#10;#else:&#10;#    SSD = SSDRight + 500&#10;&#10;if currentStopOrGo == 'stop':&#10;    if xPosGoStim == -200:&#10;        SSD = SSDLeft + .5&#10;    else:&#10;        SSD = SSDRight + .5&#10;else:&#10;    SSD = -1" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="Blank">\u000a      <TextComponent name="text_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val=".5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="StimSetup">\u000a      <CodeComponent name="code">\u000a        <Param name="Begin Experiment" val="from copy import deepcopy&#10;colors = ['yellow', 'white', 'orange', 'magenta', 'green', 'gray', 'cyan', 'blue']&#10;shapes = ['triangle', 'square', 'line', 'invertedtriangle', 'hexagon', 'diamond', 'cross', 'circle']&#10;rewards = [0.50, 1.00, 2.00, 4.00] * 2&#10;conditions = ['go', 'go', 'go', 'go', 'stop', 'stop', 'stop', 'stop']&#10;trialDetailsList = []&#10;learningTrialList = []&#10;&#10;shuffle(colors)&#10;shuffle(shapes)&#10;&#10;for i, color in enumerate(colors): # cycle through each color and keep track of an index number&#10;    trialDetails = {} # a dictionary of key-value pairs&#10;    trialDetails['fileName'] = shapes[i] + color + '.gif'&#10;    trialDetails['reward'] = rewards[i]&#10;    trialDetails['condition'] = conditions[i]&#10;    trialDetailsList.append(trialDetails)&#10;&#10;shuffle(trialDetailsList) # do this now to ensure that order of presentation of rewards and conditions is also shuffled&#10;&#10;conditionOne = trialDetailsList[0]&#10;conditionTwo = trialDetailsList[1]&#10;conditionThree = trialDetailsList[2]&#10;conditionFour = trialDetailsList[3]&#10;conditionFive = trialDetailsList[4]&#10;conditionSix = trialDetailsList[5]&#10;conditionSeven = trialDetailsList[6]&#10;conditionEight = trialDetailsList[7]&#10;&#10;numLearningTrials = 400&#10;numLearningRepetitions = 50&#10;for k in range(1, numLearningRepetitions + 1):&#10;    learningTrialList.append(conditionOne)&#10;    learningTrialList.append(conditionTwo)&#10;    learningTrialList.append(conditionThree)&#10;    learningTrialList.append(conditionFour)&#10;    learningTrialList.append(conditionFive)&#10;    learningTrialList.append(conditionSix)&#10;    learningTrialList.append(conditionSeven)&#10;    learningTrialList.append(conditionEight)&#10;&#10;shuffle(learningTrialList)&#10;&#10;stopTaskTrials = 272&#10;stopTrialsPerStopStim = 26&#10;goTrialsPerStopStim = 8&#10;goTrialsPerGoStim = 34&#10;numStim = 8&#10;stopTrialList = []&#10;&#10;if conditionOne['condition'] == 'go':&#10;    conditionOne['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionOne)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionOne['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionOne))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionOne['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionOne))&#10;if conditionTwo['condition'] == 'go':&#10;    conditionTwo['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionTwo)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionTwo['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionTwo))&#10;    for i in range(1,  stopTrialsPerStopStim + 1):&#10;        conditionTwo['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionTwo))&#10;if conditionThree['condition'] == 'go':&#10;    conditionThree['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionThree)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionThree['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionThree))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionThree['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionThree))&#10;if conditionFour['condition'] == 'go':&#10;    conditionFour['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionFour)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionFour['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionFour))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionFour['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionFour))&#10;if conditionFive['condition'] == 'go':&#10;    conditionFive['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionFive)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionFive['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionFive))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionFive['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionFive))&#10;if conditionSix['condition'] == 'go':&#10;    conditionSix['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionSix)&#10;else:&#10;    for j in range(1, stopTrialsPerStopStim + 1):&#10;        conditionSix['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionSix))&#10;    for i in range(1, goTrialsPerStopStim + 1):&#10;        conditionSix['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionSix))&#10;if conditionSeven['condition'] == 'go':&#10;    conditionSeven['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionSeven)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionSeven['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionSeven))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionSeven['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionSeven))&#10;if conditionEight['condition'] == 'go':&#10;    conditionEight['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionEight)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionEight['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionEight))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionEight['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionEight))&#10;&#10;shuffle(stopTrialList)" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#message variable just needs some value at start&#10;message=0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="import random&#10;&#10;displayReward = random.randrange(1, 6)&#10;&#10;if resp.corr:#stored on last run routine&#10;    if displayReward == 1:&#10;            message = &quot;You won $&quot; + str(0);&#10;    else: &#10;            currentReward = currentLearningTrial['reward']&#10;            message = &quot;You won $&quot; + str(currentReward + (random.randrange(-25, 26)*.01))&#10;elif resp.keys is None: #or len(key_resp.keys)&lt;1:&#10;#elif resp.rt == 0:&#10;    message =&quot;Too Slow&quot;&#10;else:&#10;  message=&quot;Wrong&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val=".2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$currentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[151, 151]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="Bank"/>\u000a    <Routine name="StopTrial">\u000a      <SoundComponent name="sound_1">\u000a        <Param name="sound" val="900" valType="str" updates="constant"/>\u000a        <Param name="volume" val=".2" valType="code" updates="constant"/>\u000a        <Param name="name" val="sound_1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val=".2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startEstim" val=".75" valType="code" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$SSD" valType="code" updates="None"/>\u000a      </SoundComponent>\u000a      <TextComponent name="text_3">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_3" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="|" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="4" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_3">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_3" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPosGoStim, yPosGoStim]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$currentGoStim" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[151, 151]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <KeyboardComponent name="goResp">\u000a        <Param name="correctAns" val="$corrGoResp" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="goResp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'z','m'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="StimSetup"/>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="0" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="ResetAtBlock"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="TrialtypesLearning.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="25" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'h', u'yPos': 200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'n', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'b', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="NewStim"/>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoopMain">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoopMain" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="999" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <Routine name="Blank"/>\u000a    <Routine name="ExitMain"/>\u000a    <LoopTerminator name="ReDoLoopMain"/>\u000a    <LoopTerminator name="trials"/>\u000a    <LoopTerminator name="Blocks"/>\u000a    <Routine name="instrStopPrac"/>\u000a    <LoopInitiator loopType="TrialHandler" name="StopBlocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="StopBlocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="4" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="stopBlockSetup"/>\u000a    <LoopInitiator loopType="TrialHandler" name="StopTrials">\u000a      <Param name="conditionsFile" val="trialtypeStop.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="StopTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="17" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'corrGoResp': u'z', u'yPosGoStim': 0, u'xPosGoStim': -200}, {u'corrGoResp': u'm', u'yPosGoStim': 0, u'xPosGoStim': 200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="newStopStim"/>\u000a    <Routine name="StopTrial"/>\u000a    <Routine name="blankStop"/>\u000a    <Routine name="SSDChange"/>\u000a    <LoopTerminator name="StopTrials"/>\u000a    <Routine name="endOfStopBlockFeedback"/>\u000a    <LoopTerminator name="StopBlocks"/>\u000a    <Routine name="End"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p585
sg45
(lp586
sg46
I243216976
sg11
S'Blocks'
p587
sg6
g7
sg48
I0
sg22
I01
sg23
g24
sg49
g1
(g50
g51
(dp588
g53
g54
(g55
g56
g57
S'b'
tRp589
(I1
(I1
I0
tg59
I00
S''
S''
Ntbsg68
g54
(g55
g56
g57
S'b'
tRp590
(I1
(I1
I0
tg59
I00
S''
S''
NtbstRp591
(dp592
g73
(dp593
g53
I01
sg68
I01
ssg75
g583
sg76
(lp594
g53
ag68
asg78
(lp595
I1
aI0
asbsg80
g81
sg82
g60
(g56
(I0
tS'b'
tRp596
(I1
(I1
I0
tg84
I00
S''
tbsg85
I01
sg86
I0
sg87
I-1
sg88
(lp597
Nasg90
Nsg91
I0
sg93
I0
sg94
I0
sg95
I0
sg96
I01
sbag41
ag1
(g40
g3
NtRp598
(dp599
g43
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="stopBlockSetup">\u000a      <CodeComponent name="code_9">\u000a        <Param name="Begin Experiment" val="goCumRT = 0&#10;goRTCount = 0&#10;omissionCount = 0&#10;commissionCount = 0&#10;stopTrialCount = 0&#10;stopSuccessCount = 0&#10;goTrialCount = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_9" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="blankStop">\u000a      <TextComponent name="text_4">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_4" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="End">\u000a      <TextComponent name="text_6">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_6" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="This is the end, beautiful friend" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instrStopPrac">\u000a      <TextComponent name="instrStopText">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instrStopText" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on the left or right side of the screen&#10;&#10;If it appears on the left, press Z&#10;&#10;If it appears on the right, press M&#10;&#10;If you hear a tone, do not press anything on that trial" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="code_8">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_8" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="InitSSD = .25&#10;SSDLeft = InitSSD&#10;SSDRight = InitSSD" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="ExitMain">\u000a      <CodeComponent name="code_6">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_6" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="if resp.corr:&#10;    ReDoLoopMain.finished = True" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="ResetAtBlock">\u000a      <CodeComponent name="code_3">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_3" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="Redo = 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS I&#10;&#10;If it appears in the lower right quadrant, PRESS K&#10;&#10;If it appears in the lower left quadrant, PRESS J&#10;&#10;If it appears in the upper left quadrant, PRESS U&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.07" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="NewStim">\u000a      <CodeComponent name="code_4">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_4" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="currentLearningTrial = learningTrialList.pop(0)&#10;currentStimulus = currentLearningTrial['fileName']&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="SSDChange">\u000a      <CodeComponent name="code_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="if goResp.keys is None:&#10;    if xPosGoStim == -200:&#10;        SSDLeft = SSDLeft  + .05&#10;    if xPosGoStim == 200:&#10;        SSDRight = SSDRight + .05&#10;else:&#10;    if xPosGoStim == -200:&#10;        SSDLeft = SSDLeft - .05&#10;    if xPosGoStim == 200:&#10;        SSDRight = SSDRight - .05&#10;&#10;if currentStopTrial['stopOrGo'] == 'go':&#10;    goTrialCount = goTrialCount + 1&#10;&#10;if goResp.corr and currentStopTrial['stopOrGo'] == 'go':&#10;    goCumRT = goCumRT + goResp.rt&#10;    goRTCount = goRTCount + 1&#10;&#10;if currentStopTrial['stopOrGo'] == 'stop':&#10;    stopTrialCount = stopTrialCount + 1&#10;&#10;if currentStopTrial['stopOrGo'] == 'stop' and goResp.keys is None:&#10;    stopSuccessCount = stopSuccessCount + 1&#10;&#10;if goResp.keys is None and currentStopTrial['stopOrGo'] == 'go':&#10;    omissionCount = omissionCount + 1&#10;&#10;if goResp != corrGoResp:&#10;    commissionCount = commissionCount + 1" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="endOfStopBlockFeedback">\u000a      <CodeComponent name="code_10">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_10" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="&#10;if goRTCount &gt; 0:&#10;    goRTFeedback = str(goCumRT/goRTCount)&#10;else:&#10;    goRTFeedback = 'Null'&#10;&#10;if goTrialCount &gt; 0:&#10;    commissionRate = str(commissionCount/goTrialCount)&#10;    omissionRate = str(omissionCount/goTrialCount)&#10;else: &#10;    commissionRate = 'Null'&#10;    omissionRate = 'Null'&#10;&#10;if stopTrialCount &gt; 0: &#10;    probabilityOfStop = str(stopSuccessCount/stopTrialCount)&#10;else:&#10;    probabilityOfStop = 'Null'&#10;&#10;SSDFeedback = str((SSDLeft+SSDRight)/2)&#10;&#10;stopMessage = &quot;RT = &quot; + str(goRTFeedback) + &quot;Omission % = &quot; + str(omissionRate) + &quot;Commission % = &quot; + str(commissionRate) + &quot;    &quot; + str(probabilityOfStop) + &quot;    &quot; + str(SSDFeedback)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="text_5">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_5" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$stopMessage&#10;" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_3">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_3" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'y','n','left','right','space'" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="ExitPrac">\u000a      <CodeComponent name="code_5">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_5" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="if resp.corr:&#10;    ReDoLoop.finished = True " valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="trial">\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'u', 'i', 'j', 'k'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$currentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[151, 151]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="newStopStim">\u000a      <CodeComponent name="code_7">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_7" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="currentStopTrial = stopTrialList.pop(0)&#10;currentGoStim = currentStopTrial['fileName']&#10;currentStopOrGo = currentStopTrial['stopOrGo']&#10;&#10;&#10;&#10;#if xPosGoStim == -200:&#10;#    SSD = SSDLeft + 500&#10;#else:&#10;#    SSD = SSDRight + 500&#10;&#10;if currentStopOrGo == 'stop':&#10;    if xPosGoStim == -200:&#10;        SSD = SSDLeft + .5&#10;    else:&#10;        SSD = SSDRight + .5&#10;else:&#10;    SSD = -1" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="Blank">\u000a      <TextComponent name="text_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val=".5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="StimSetup">\u000a      <CodeComponent name="code">\u000a        <Param name="Begin Experiment" val="from copy import deepcopy&#10;colors = ['yellow', 'white', 'orange', 'magenta', 'green', 'gray', 'cyan', 'blue']&#10;shapes = ['triangle', 'square', 'line', 'invertedtriangle', 'hexagon', 'diamond', 'cross', 'circle']&#10;rewards = [0.50, 1.00, 2.00, 4.00] * 2&#10;conditions = ['go', 'go', 'go', 'go', 'stop', 'stop', 'stop', 'stop']&#10;trialDetailsList = []&#10;learningTrialList = []&#10;&#10;shuffle(colors)&#10;shuffle(shapes)&#10;&#10;for i, color in enumerate(colors): # cycle through each color and keep track of an index number&#10;    trialDetails = {} # a dictionary of key-value pairs&#10;    trialDetails['fileName'] = shapes[i] + color + '.gif'&#10;    trialDetails['reward'] = rewards[i]&#10;    trialDetails['condition'] = conditions[i]&#10;    trialDetailsList.append(trialDetails)&#10;&#10;shuffle(trialDetailsList) # do this now to ensure that order of presentation of rewards and conditions is also shuffled&#10;&#10;conditionOne = trialDetailsList[0]&#10;conditionTwo = trialDetailsList[1]&#10;conditionThree = trialDetailsList[2]&#10;conditionFour = trialDetailsList[3]&#10;conditionFive = trialDetailsList[4]&#10;conditionSix = trialDetailsList[5]&#10;conditionSeven = trialDetailsList[6]&#10;conditionEight = trialDetailsList[7]&#10;&#10;numLearningTrials = 400&#10;numLearningRepetitions = 50&#10;for k in range(1, numLearningRepetitions + 1):&#10;    learningTrialList.append(conditionOne)&#10;    learningTrialList.append(conditionTwo)&#10;    learningTrialList.append(conditionThree)&#10;    learningTrialList.append(conditionFour)&#10;    learningTrialList.append(conditionFive)&#10;    learningTrialList.append(conditionSix)&#10;    learningTrialList.append(conditionSeven)&#10;    learningTrialList.append(conditionEight)&#10;&#10;shuffle(learningTrialList)&#10;&#10;stopTaskTrials = 272&#10;stopTrialsPerStopStim = 26&#10;goTrialsPerStopStim = 8&#10;goTrialsPerGoStim = 34&#10;numStim = 8&#10;stopTrialList = []&#10;&#10;if conditionOne['condition'] == 'go':&#10;    conditionOne['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionOne)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionOne['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionOne))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionOne['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionOne))&#10;if conditionTwo['condition'] == 'go':&#10;    conditionTwo['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionTwo)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionTwo['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionTwo))&#10;    for i in range(1,  stopTrialsPerStopStim + 1):&#10;        conditionTwo['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionTwo))&#10;if conditionThree['condition'] == 'go':&#10;    conditionThree['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionThree)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionThree['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionThree))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionThree['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionThree))&#10;if conditionFour['condition'] == 'go':&#10;    conditionFour['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionFour)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionFour['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionFour))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionFour['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionFour))&#10;if conditionFive['condition'] == 'go':&#10;    conditionFive['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionFive)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionFive['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionFive))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionFive['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionFive))&#10;if conditionSix['condition'] == 'go':&#10;    conditionSix['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionSix)&#10;else:&#10;    for j in range(1, stopTrialsPerStopStim + 1):&#10;        conditionSix['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionSix))&#10;    for i in range(1, goTrialsPerStopStim + 1):&#10;        conditionSix['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionSix))&#10;if conditionSeven['condition'] == 'go':&#10;    conditionSeven['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionSeven)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionSeven['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionSeven))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionSeven['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionSeven))&#10;if conditionEight['condition'] == 'go':&#10;    conditionEight['stopOrGo'] = 'go'&#10;    for i in range(1, goTrialsPerGoStim + 1):&#10;        stopTrialList.append(conditionEight)&#10;else:&#10;    for j in range(1, goTrialsPerStopStim + 1):&#10;        conditionEight['stopOrGo'] = 'go'&#10;        stopTrialList.append(deepcopy(conditionEight))&#10;    for i in range(1, stopTrialsPerStopStim + 1):&#10;        conditionEight['stopOrGo'] = 'stop'&#10;        stopTrialList.append(deepcopy(conditionEight))&#10;&#10;shuffle(stopTrialList)" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#message variable just needs some value at start&#10;message=0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="import random&#10;&#10;displayReward = random.randrange(1, 6)&#10;&#10;if resp.corr:#stored on last run routine&#10;    if displayReward == 1:&#10;            message = &quot;You won $&quot; + str(0);&#10;    else: &#10;            currentReward = currentLearningTrial['reward']&#10;            message = &quot;You won $&quot; + str(currentReward + (random.randrange(-25, 26)*.01))&#10;elif resp.keys is None: #or len(key_resp.keys)&lt;1:&#10;#elif resp.rt == 0:&#10;    message =&quot;Too Slow&quot;&#10;else:&#10;  message=&quot;Wrong&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val=".2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$currentStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[151, 151]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="Bank"/>\u000a    <Routine name="StopTrial">\u000a      <SoundComponent name="sound_1">\u000a        <Param name="sound" val="900" valType="str" updates="constant"/>\u000a        <Param name="volume" val=".2" valType="code" updates="constant"/>\u000a        <Param name="name" val="sound_1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val=".2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startEstim" val=".75" valType="code" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="$SSD" valType="code" updates="None"/>\u000a      </SoundComponent>\u000a      <TextComponent name="text_3">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_3" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="|" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="4" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_3">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_3" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPosGoStim, yPosGoStim]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$currentGoStim" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[151, 151]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <KeyboardComponent name="goResp">\u000a        <Param name="correctAns" val="$corrGoResp" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="goResp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="1" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'z','m'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="StimSetup"/>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="Blocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="Blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="0" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="ResetAtBlock"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="TrialtypesLearning.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="25" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'corrAns': u'h', u'yPos': 200}, {u'xPos': -200, u'corrAns': u'g', u'yPos': 200}, {u'xPos': 200, u'corrAns': u'n', u'yPos': -200}, {u'xPos': -200, u'corrAns': u'b', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="NewStim"/>\u000a    <LoopInitiator loopType="TrialHandler" name="ReDoLoopMain">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="ReDoLoopMain" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="999" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <Routine name="Blank"/>\u000a    <Routine name="ExitMain"/>\u000a    <LoopTerminator name="ReDoLoopMain"/>\u000a    <LoopTerminator name="trials"/>\u000a    <LoopTerminator name="Blocks"/>\u000a    <Routine name="instrStopPrac"/>\u000a    <LoopInitiator loopType="TrialHandler" name="StopBlocks">\u000a      <Param name="conditionsFile" val="" valType="str" updates="None"/>\u000a      <Param name="name" val="StopBlocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="4" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="None" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="stopBlockSetup"/>\u000a    <LoopInitiator loopType="TrialHandler" name="StopTrials">\u000a      <Param name="conditionsFile" val="trialtypeStop.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="StopTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="17" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'corrGoResp': u'z', u'yPosGoStim': 0, u'xPosGoStim': -200}, {u'corrGoResp': u'm', u'yPosGoStim': 0, u'xPosGoStim': 200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="newStopStim"/>\u000a    <Routine name="StopTrial"/>\u000a    <Routine name="blankStop"/>\u000a    <Routine name="SSDChange"/>\u000a    <LoopTerminator name="StopTrials"/>\u000a    <Routine name="endOfStopBlockFeedback"/>\u000a    <LoopTerminator name="StopBlocks"/>\u000a    <Routine name="End"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p600
sg45
(lp601
sg46
I243216976
sg11
g106
sg6
g7
sg48
I17
sg22
I01
sg23
g24
sg49
g1
(g50
g51
(dp602
g53
g54
(g55
g56
g57
S'b'
tRp603
(I1
(I2
I17
tg59
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg17
g60
(g56
(I0
tS'b'
tRp604
(I1
(I2
I17
tg62
I00
(lp605
S'z'
aS'z'
aS'z'
aS'z'
aS'z'
aS'z'
aS'z'
aS'z'
aS'z'
aNaNaNaNaNaNaNaNaS'm'
aS'm'
aS'm'
aS'm'
aS'm'
aS'm'
aS'm'
aNaNaNaNaNaNaNaNaNaNatbsg18
g54
(g55
g56
g57
S'b'
tRp606
(I1
(I2
I17
tg59
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg68
g54
(g55
g56
g57
S'b'
tRp607
(I1
(I2
I17
tg59
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00@\x00\x00\xa0@\x00\x00\xe0@\x00\x00 A\x00\x000A\x00\x00@A\x00\x00`A\x00\x00\x80A\x00\x00\x90A\x00\x00\x98A\x00\x00\xa8A\x00\x00\xc0A\x00\x00\xd0A\x00\x00\xd8A\x00\x00\xf8A\x00\x00@@\x00\x00\x80@\x00\x00\xc0@\x00\x00\x00A\x00\x00\x10A\x00\x00PA\x00\x00pA\x00\x00\x88A\x00\x00\xa0A\x00\x00\xb0A\x00\x00\xb8A\x00\x00\xc8A\x00\x00\xe0A\x00\x00\xe8A\x00\x00\xf0A\x00\x00\x00B\x00\x00\x04B'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg19
g54
(g55
g56
g57
S'b'
tRp608
(I1
(I2
I17
tg59
I00
S'\xd0\xd1\xb9>\x98`\xef><\xdd\x19?\x00\xfa*? \xdf\xe6>\x00\xc8\x99>\xc04\xbc>p\x00\xe7>\xc8\xb0\xb3>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xccw\x04?8\xce\xe6>\x88\x03\r?\x08\xf9\x99>\xa0r\xc4>\x10\r\x9a>Hx\xa2>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x01\x01\x01\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01'
NtbstRp609
(dp610
g73
(dp611
g53
I01
sg17
I00
sg18
I01
sg68
I01
sg19
I01
ssg75
g598
sg76
(lp612
g53
ag68
ag17
ag18
ag19
asg78
(lp613
I2
aI17
asbsg80
g145
sg82
g60
(g56
(I0
tS'b'
tRp614
(I1
(I2
I17
tg62
I00
(lp615
I0
aI0
aI1
aI1
aI1
aI0
aI0
aI0
aI0
aI0
aI1
aI1
aI0
aI0
aI1
aI1
aI1
aI0
aI1
aI0
aI0
aI1
aI0
aI1
aI1
aI1
aI0
aI0
aI1
aI1
aI0
aI1
aI0
aI1
atbsg85
I01
sg86
I17
sg87
I-1
sg88
(lp616
g1
(g100
g51
(dp617
g157
Vz
sg158
I0
sg159
I-200
stRp618
ag1
(g100
g51
(dp619
g157
Vm
sg158
I0
sg159
I200
stRp620
asg90
Nsg91
I1
sg93
I34
sg94
I0
sg95
I34
sg96
I01
sbag97
asS'savePickle'
p621
I00
sb.