ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
V/Users/patrickbissett/OneDrive/Poldrack/TrainedInhibition/PsychoPy/LearningTask4.psyexp
p7
sS'dataFileName'
p8
V/Users/patrickbissett/OneDrive/Poldrack/TrainedInhibition/PsychoPy/data/_2015_Mar_03_1204
p9
sS'runtimeInfo'
p10
NsS'name'
p11
S'LearningTask'
p12
sS'dataNames'
p13
(lp14
S'ok1.keys'
p15
aS'ok1.rt'
p16
asS'autoLog'
p17
I01
sS'extraInfo'
p18
(dp19
S'expName'
p20
g12
sS'gender (m/f)'
p21
V
sS'age'
p22
V
sS'frameRate'
p23
cnumpy.core.multiarray
scalar
p24
(cnumpy
dtype
p25
(S'f8'
I0
I1
tRp26
(I3
S'<'
NNNI-1
I-1
I0
tbS'\xa6hf\xd2\xe2\xf7M@'
tRp27
sS'session'
p28
I3
sS'date'
p29
V2015_Mar_03_1204
p30
sS'participant'
p31
V
ssS'loopsUnfinished'
p32
(lp33
g1
(cpsychopy.data
TrialHandler
p34
g3
NtRp35
(dp36
S'origin'
p37
V<PsychoPy2experiment version="1.81.03" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="OK, ready to start the main experiment?&#10;&#10;Remember, press;&#10; - 'S' if the SMALL letters are S&#10; - 'H' if the SMALL letters are H&#10;&#10;Try to respond as quickly and as accurately as possible.&#10;&#10;When you are ready to proceed press any key." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial">\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'t', 'y', 'g', 'h'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$ShapeStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[101, 101]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="In this experiment you will be presented with a large letter made up of smaller letters. Your task is to&#10;&#10;Respond by pressing;&#10; - 'S' if the SMALL letters are S&#10; - 'H' if the SMALL letters are H&#10;&#10;Try to respond as quickly and as accurately as possible.&#10;&#10;There will be a number of practice trials in which you will be given feedback. &#10;&#10;Press any key when you are ready to proceed." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;msg=''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="if resp.corr:#stored on last run routine&#10;  msg=&quot;Correct! RT=%.3f&quot; %(resp.rt)&#10;else:&#10;  msg=&quot;Oops! That was wrong&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="thanks">\u000a      <TextComponent name="thanksMsg">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="thanksMsg" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="You're done! Fun, wasn't it!? ;-)" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="2.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practiceTrials">\u000a      <Param name="conditionsFile" val="trialTypes3.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practiceTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'ShapeStimulus': u'crosscyan.gif', u'yPos': 200, u'Shape': u'Line', u'location': u'up_right', u'corrAns': u'y'}, {u'xPos': 200, u'ShapeStimulus': u'crossgray.gif', u'yPos': 200, u'Shape': u'Triangle', u'location': u'up_right', u'corrAns': u'y'}, {u'xPos': 200, u'ShapeStimulus': u'crossorange.gif', u'yPos': 200, u'Shape': u'Square', u'location': u'up_right', u'corrAns': u'y'}, {u'xPos': 200, u'ShapeStimulus': u'crossyellow.gif', u'yPos': 200, u'Shape': u'Circle', u'location': u'up_right', u'corrAns': u'y'}, {u'xPos': -200, u'ShapeStimulus': u'circlegreen.gif', u'yPos': 200, u'Shape': u'Line', u'location': u'up_left', u'corrAns': u't'}, {u'xPos': -200, u'ShapeStimulus': u'circlemaagenta.gif', u'yPos': 200, u'Shape': u'Triangle', u'location': u'up_left', u'corrAns': u't'}, {u'xPos': -200, u'ShapeStimulus': u'circlewhite.gif', u'yPos': 200, u'Shape': u'Square', u'location': u'up_left', u'corrAns': u't'}, {u'xPos': -200, u'ShapeStimulus': u'circlecyan.gif', u'yPos': 200, u'Shape': u'Circle', u'location': u'up_left', u'corrAns': u't'}, {u'xPos': 200, u'ShapeStimulus': u'diamondgray.gif', u'yPos': -200, u'Shape': u'Line', u'location': u'down_right', u'corrAns': u'h'}, {u'xPos': 200, u'ShapeStimulus': u'diamondorange.gif', u'yPos': -200, u'Shape': u'Triangle', u'location': u'down_right', u'corrAns': u'h'}, {u'xPos': 200, u'ShapeStimulus': u'diamondwhite.gif', u'yPos': -200, u'Shape': u'Square', u'location': u'down_right', u'corrAns': u'h'}, {u'xPos': 200, u'ShapeStimulus': u'diamondmagenta.gif', u'yPos': -200, u'Shape': u'Circle', u'location': u'down_right', u'corrAns': u'h'}, {u'xPos': -200, u'ShapeStimulus': u'hexagonyellow.gif', u'yPos': -200, u'Shape': u'Line', u'location': u'down_left', u'corrAns': u'g'}, {u'xPos': -200, u'ShapeStimulus': u'hexagonmagenta.gif', u'yPos': -200, u'Shape': u'Triangle', u'location': u'down_left', u'corrAns': u'g'}, {u'xPos': -200, u'ShapeStimulus': u'hexagongreen.gif', u'yPos': -200, u'Shape': u'Square', u'location': u'down_left', u'corrAns': u'g'}, {u'xPos': -200, u'ShapeStimulus': u'hexagongray.gif', u'yPos': -200, u'Shape': u'Circle', u'location': u'down_left', u'corrAns': u'g'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="practiceTrials"/>\u000a    <Routine name="instrMain"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="trialTypes2.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="4" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'yPos': 200, u'Shape': u'Line', u'corrAns': u'y', u'numVertices': 2, u'location': u'up_right'}, {u'xPos': 200, u'yPos': 200, u'Shape': u'Triangle', u'corrAns': u'y', u'numVertices': 3, u'location': u'up_right'}, {u'xPos': 200, u'yPos': 200, u'Shape': u'Square', u'corrAns': u'y', u'numVertices': 4, u'location': u'up_right'}, {u'xPos': 200, u'yPos': 200, u'Shape': u'Circle', u'corrAns': u'y', u'numVertices': 90, u'location': u'up_right'}, {u'xPos': -200, u'yPos': 200, u'Shape': u'Line', u'corrAns': u't', u'numVertices': 2, u'location': u'up_left'}, {u'xPos': -200, u'yPos': 200, u'Shape': u'Triangle', u'corrAns': u't', u'numVertices': 3, u'location': u'up_left'}, {u'xPos': -200, u'yPos': 200, u'Shape': u'Square', u'corrAns': u't', u'numVertices': 4, u'location': u'up_left'}, {u'xPos': -200, u'yPos': 200, u'Shape': u'Circle', u'corrAns': u't', u'numVertices': 90, u'location': u'up_left'}, {u'xPos': 200, u'yPos': -200, u'Shape': u'Line', u'corrAns': u'h', u'numVertices': 2, u'location': u'down_right'}, {u'xPos': 200, u'yPos': -200, u'Shape': u'Triangle', u'corrAns': u'h', u'numVertices': 3, u'location': u'down_right'}, {u'xPos': 200, u'yPos': -200, u'Shape': u'Square', u'corrAns': u'h', u'numVertices': 4, u'location': u'down_right'}, {u'xPos': 200, u'yPos': -200, u'Shape': u'Circle', u'corrAns': u'h', u'numVertices': 90, u'location': u'down_right'}, {u'xPos': -200, u'yPos': -200, u'Shape': u'Line', u'corrAns': u'g', u'numVertices': 2, u'location': u'down_left'}, {u'xPos': -200, u'yPos': -200, u'Shape': u'Triangle', u'corrAns': u'g', u'numVertices': 3, u'location': u'down_left'}, {u'xPos': -200, u'yPos': -200, u'Shape': u'Square', u'corrAns': u'g', u'numVertices': 4, u'location': u'down_left'}, {u'xPos': -200, u'yPos': -200, u'Shape': u'Circle', u'corrAns': u'g', u'numVertices': 90, u'location': u'down_left'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <LoopTerminator name="trials"/>\u000a    <Routine name="thanks"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p38
sS'thisTrial'
p39
g1
(cpsychopy.data
TrialType
p40
c__builtin__
dict
p41
(dp42
VxPos
p43
I-200
sVcorrAns
p44
Vt
sVlocation
p45
Vup_left
p46
sVShapeStimulus
p47
Vcirclegreen.gif
p48
sVShape
p49
VLine
p50
sVyPos
p51
I200
stRp52
sS'_exp'
p53
I216564464
sg11
S'practiceTrials'
p54
sg6
g7
sS'thisRepN'
p55
I0
sg17
I01
sg18
g19
sS'data'
p56
g1
(cpsychopy.data
DataHandler
p57
g41
(dp58
S'ran'
p59
cnumpy.ma.core
_mareconstruct
p60
(cnumpy.ma.core
MaskedArray
p61
cnumpy
ndarray
p62
(I0
tp63
S'b'
tRp64
(I1
(I16
I1
tg25
(S'f4'
I0
I1
tRp65
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbsS'order'
p66
g60
(g61
g62
g63
S'b'
tRp67
(I1
(I16
I1
tg65
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01'
NtbstRp68
(dp69
S'isNumeric'
p70
(dp71
g59
I01
sg66
I01
ssS'trials'
p72
g35
sS'dataTypes'
p73
(lp74
g59
ag66
asS'dataShape'
p75
(lp76
I16
aI1
asbsS'method'
p77
S'random'
p78
sS'sequenceIndices'
p79
cnumpy.core.multiarray
_reconstruct
p80
(g62
(I0
tS'b'
tRp81
(I1
(I16
I1
tg25
(S'i4'
I0
I1
tRp82
(I3
S'<'
NNNI-1
I-1
I0
tbI01
S'\x04\x00\x00\x00\x0e\x00\x00\x00\x06\x00\x00\x00\x07\x00\x00\x00\x01\x00\x00\x00\t\x00\x00\x00\x08\x00\x00\x00\x0b\x00\x00\x00\x0f\x00\x00\x00\x05\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\r\x00\x00\x00\n\x00\x00\x00'
tbsS'finished'
p83
I00
sS'nReps'
p84
I1
sS'nRemaining'
p85
I15
sS'trialList'
p86
(lp87
g1
(g40
g41
(dp88
g43
I200
sg44
Vy
sg45
Vup_right
p89
sg47
Vcrosscyan.gif
p90
sg49
g50
sg51
I200
stRp91
ag1
(g40
g41
(dp92
g43
I200
sg44
Vy
sg45
g89
sg47
Vcrossgray.gif
p93
sg49
VTriangle
p94
sg51
I200
stRp95
ag1
(g40
g41
(dp96
g43
I200
sg44
Vy
sg45
g89
sg47
Vcrossorange.gif
p97
sg49
VSquare
p98
sg51
I200
stRp99
ag1
(g40
g41
(dp100
g43
I200
sg44
Vy
sg45
g89
sg47
Vcrossyellow.gif
p101
sg49
VCircle
p102
sg51
I200
stRp103
ag52
ag1
(g40
g41
(dp104
g43
I-200
sg44
Vt
sg45
g46
sg47
Vcirclemagenta.gif
p105
sg49
g94
sg51
I200
stRp106
ag1
(g40
g41
(dp107
g43
I-200
sg44
Vt
sg45
g46
sg47
Vcirclewhite.gif
p108
sg49
g98
sg51
I200
stRp109
ag1
(g40
g41
(dp110
g43
I-200
sg44
Vt
sg45
g46
sg47
Vcirclecyan.gif
p111
sg49
g102
sg51
I200
stRp112
ag1
(g40
g41
(dp113
g43
I200
sg44
Vh
sg45
Vdown_right
p114
sg47
Vdiamondgray.gif
p115
sg49
g50
sg51
I-200
stRp116
ag1
(g40
g41
(dp117
g43
I200
sg44
Vh
sg45
g114
sg47
Vdiamondorange.gif
p118
sg49
g94
sg51
I-200
stRp119
ag1
(g40
g41
(dp120
g43
I200
sg44
Vh
sg45
g114
sg47
Vdiamondwhite.gif
p121
sg49
g98
sg51
I-200
stRp122
ag1
(g40
g41
(dp123
g43
I200
sg44
Vh
sg45
g114
sg47
Vdiamondmagenta.gif
p124
sg49
g102
sg51
I-200
stRp125
ag1
(g40
g41
(dp126
g43
I-200
sg44
Vg
sg45
Vdown_left
p127
sg47
Vhexagonyellow.gif
p128
sg49
g50
sg51
I-200
stRp129
ag1
(g40
g41
(dp130
g43
I-200
sg44
Vg
sg45
g127
sg47
Vhexagonmagenta.gif
p131
sg49
g94
sg51
I-200
stRp132
ag1
(g40
g41
(dp133
g43
I-200
sg44
Vg
sg45
g127
sg47
Vhexagongreen.gif
p134
sg49
g98
sg51
I-200
stRp135
ag1
(g40
g41
(dp136
g43
I-200
sg44
Vg
sg45
g127
sg47
Vhexagongray.gif
p137
sg49
g102
sg51
I-200
stRp138
asS'seed'
p139
NsS'thisIndex'
p140
g24
(g82
S'\x04\x00\x00\x00'
tRp141
sS'thisN'
p142
I0
sS'thisTrialN'
p143
I0
sS'nTotal'
p144
I16
sS'_warnUseOfNext'
p145
I01
sbasS'saveWideText'
p146
I01
sS'thisEntry'
p147
(dp148
sS'version'
p149
S''
sS'_paramNamesSoFar'
p150
(lp151
sS'entries'
p152
(lp153
(dp154
g28
I3
sg21
V
sg16
F3.3263719081878662
sg22
V
sg23
g27
sg20
g12
sg15
S'escape'
p155
sg29
g30
sg31
V
sasS'loops'
p156
(lp157
g35
asS'savePickle'
p158
I01
sb.