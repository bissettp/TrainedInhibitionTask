ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
V/Users/patrickbissett/OneDrive/Poldrack/TrainedInhibition/PsychoPy/IntegratingDifferentCodeFlexibleStim.psyexp
p7
sS'dataFileName'
p8
V/Users/patrickbissett/OneDrive/Poldrack/TrainedInhibition/PsychoPy/data/62_2015_Mar_05_1401
p9
sS'runtimeInfo'
p10
NsS'name'
p11
S'LearningTask'
p12
sS'dataNames'
p13
(lp14
S'ok1.keys'
p15
aS'ok1.rt'
p16
asS'autoLog'
p17
I01
sS'extraInfo'
p18
(dp19
S'expName'
p20
g12
sS'gender (m/f)'
p21
V
sS'age'
p22
V2
sS'frameRate'
p23
cnumpy.core.multiarray
scalar
p24
(cnumpy
dtype
p25
(S'f8'
I0
I1
tRp26
(I3
S'<'
NNNI-1
I-1
I0
tbS'_\xb1\xc4:5\xfcM@'
tRp27
sS'session'
p28
I3
sS'date'
p29
V2015_Mar_05_1401
p30
sS'participant'
p31
V62
p32
ssS'loopsUnfinished'
p33
(lp34
g1
(cpsychopy.data
TrialHandler
p35
g3
NtRp36
(dp37
S'origin'
p38
V<PsychoPy2experiment version="1.81.03" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="LearningTask" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="OK, ready to start the main experiment?&#10;&#10;Remember, press;&#10; - 'S' if the SMALL letters are S&#10; - 'H' if the SMALL letters are H&#10;&#10;Try to respond as quickly and as accurately as possible.&#10;&#10;When you are ready to proceed press any key." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial">\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'t', 'y', 'g', 'h'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <ImageComponent name="image_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image_2" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".5" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$ShapeStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val="[101, 101]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a    </Routine>\u000a    <Routine name="StimSetup">\u000a      <CodeComponent name="code">\u000a        <Param name="Begin Experiment" val="colors = ['yellow', 'white', 'orange', 'magenta', 'green', 'gray', 'cyan', 'blue']&#10;shapes = ['triangle', 'square', 'line', 'invertedtriangle', 'hexagon', 'diamond', 'cross', 'circle']&#10;rewards = [0.5, 1, 2, 4] * 2&#10;conditions = ['go', 'go', 'go', 'go', 'stop', 'stop', 'stop', 'stop']&#10;trialDetailsList = []&#10;&#10;shuffle(colors)&#10;shuffle(shapes)&#10;&#10;for i, color in enumerate(colors): # cycle through each color and keep track of an index number&#10;    trialDetails = {} # a dictionary of key-value pairs&#10;    trialDetails['fileName'] = shapes[i] + color + '.gif'&#10;    trialDetails['reward'] = rewards[i]&#10;    trialDetails['condition'] = conditions[i]&#10;    trialDetailsList.append(trialDetails)&#10;&#10;shuffle(trialDetailsList) # do this now to ensure that order of presentation of rewards and conditions is also shuffled&#10;&#10;ConditionOne = trialDetailsList[0]&#10;ConditionTwo = trialDetailsList[1]&#10;ConditionThree = trialDetailsList[2]&#10;ConditionFour = trialDetailsList[3]&#10;ConditionFive = trialDetailsList[4]&#10;ConditionSix = trialDetailsList[5]&#10;ConditionSeven = trialDetailsList[6]&#10;ConditionEight = trialDetailsList[7]" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A shape stimulus will appear on every trial. &#10;&#10;If it appears in the upper right quadrant, PRESS Y&#10;&#10;If it appears in the lower right quadrant, PRESS H&#10;&#10;If it appears in the lower left quadrant, PRESS G&#10;&#10;If it appears in the upper left quadrant, PRESS T&#10;&#10;Press any key when you are ready to proceed. " valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.07" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;msg=['Reward']" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="if resp.corr:#stored on last run routine&#10;  msg=&quot;Correct! RT=%.3f&quot; %(resp.rt)&#10;else:&#10;  msg=&quot;Oops! That was wrong&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="StimSetup"/>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practiceTrials">\u000a      <Param name="conditionsFile" val="Trialtypes4New.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="practiceTrials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'Reward': 0.5, u'corrAns': u'y', u'ShapeStimulus': u'crosscyan.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 0.5, u'corrAns': u'y', u'ShapeStimulus': u'circlewhite.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'y', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'y', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'y', u'ShapeStimulus': u'squareyellow.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'y', u'ShapeStimulus': u'lineorange.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'y', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'y', u'ShapeStimulus': u'diamondgray.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u't', u'ShapeStimulus': u'crosscyan.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u't', u'ShapeStimulus': u'circlewhite.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u't', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u't', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u't', u'ShapeStimulus': u'squareyellow.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u't', u'ShapeStimulus': u'lineorange.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u't', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u't', u'ShapeStimulus': u'diamondgray.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 0.5, u'corrAns': u'h', u'ShapeStimulus': u'crosscyan.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 0.5, u'corrAns': u'h', u'ShapeStimulus': u'circlewhite.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'h', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'h', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'h', u'ShapeStimulus': u'squareyellow.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'h', u'ShapeStimulus': u'lineorange.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'h', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'h', u'ShapeStimulus': u'diamondgray.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u'g', u'ShapeStimulus': u'crosscyan.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u'g', u'ShapeStimulus': u'circlewhite.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u'g', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u'g', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u'g', u'ShapeStimulus': u'squareyellow.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u'g', u'ShapeStimulus': u'lineorange.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u'g', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u'g', u'ShapeStimulus': u'diamondgray.gif', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="practiceTrials"/>\u000a    <Routine name="instrMain"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="Trialtypes4New.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="4" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'xPos': 200, u'Reward': 0.5, u'corrAns': u'y', u'ShapeStimulus': u'crosscyan.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 0.5, u'corrAns': u'y', u'ShapeStimulus': u'circlewhite.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'y', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'y', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'y', u'ShapeStimulus': u'squareyellow.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'y', u'ShapeStimulus': u'lineorange.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'y', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'y', u'ShapeStimulus': u'diamondgray.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u't', u'ShapeStimulus': u'crosscyan.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u't', u'ShapeStimulus': u'circlewhite.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u't', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u't', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u't', u'ShapeStimulus': u'squareyellow.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u't', u'ShapeStimulus': u'lineorange.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u't', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': 200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u't', u'ShapeStimulus': u'diamondgray.gif', u'yPos': 200}, {u'xPos': 200, u'Reward': 0.5, u'corrAns': u'h', u'ShapeStimulus': u'crosscyan.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 0.5, u'corrAns': u'h', u'ShapeStimulus': u'circlewhite.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'h', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 1, u'corrAns': u'h', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'h', u'ShapeStimulus': u'squareyellow.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 2, u'corrAns': u'h', u'ShapeStimulus': u'lineorange.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'h', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': -200}, {u'xPos': 200, u'Reward': 4, u'corrAns': u'h', u'ShapeStimulus': u'diamondgray.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u'g', u'ShapeStimulus': u'crosscyan.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 0.5, u'corrAns': u'g', u'ShapeStimulus': u'circlewhite.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u'g', u'ShapeStimulus': u'hexagonblue.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 1, u'corrAns': u'g', u'ShapeStimulus': u'trianglemagenta.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u'g', u'ShapeStimulus': u'squareyellow.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 2, u'corrAns': u'g', u'ShapeStimulus': u'lineorange.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u'g', u'ShapeStimulus': u'invertedtrianglegreen.gif', u'yPos': -200}, {u'xPos': -200, u'Reward': 4, u'corrAns': u'g', u'ShapeStimulus': u'diamondgray.gif', u'yPos': -200}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <LoopTerminator name="trials"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p39
sS'thisTrial'
p40
g1
(cpsychopy.data
TrialType
p41
c__builtin__
dict
p42
(dp43
VxPos
p44
I-200
sVcorrAns
p45
Vt
sVyPos
p46
I200
stRp47
sS'_exp'
p48
I216765904
sg11
S'practiceTrials'
p49
sg6
g7
sS'thisRepN'
p50
I0
sg17
I01
sg18
g19
sS'data'
p51
g1
(cpsychopy.data
DataHandler
p52
g42
(dp53
S'ran'
p54
cnumpy.ma.core
_mareconstruct
p55
(cnumpy.ma.core
MaskedArray
p56
cnumpy
ndarray
p57
(I0
tp58
S'b'
tRp59
(I1
(I4
I1
tg25
(S'f4'
I0
I1
tRp60
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00'
NtbsS'order'
p61
g55
(g56
g57
g58
S'b'
tRp62
(I1
(I4
I1
tg60
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x01\x00\x01\x01'
NtbstRp63
(dp64
S'isNumeric'
p65
(dp66
g54
I01
sg61
I01
ssS'trials'
p67
g36
sS'dataTypes'
p68
(lp69
g54
ag61
asS'dataShape'
p70
(lp71
I4
aI1
asbsS'method'
p72
S'random'
p73
sS'sequenceIndices'
p74
cnumpy.core.multiarray
_reconstruct
p75
(g57
(I0
tS'b'
tRp76
(I1
(I4
I1
tg25
(S'i4'
I0
I1
tRp77
(I3
S'<'
NNNI-1
I-1
I0
tbI01
S'\x01\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00'
tbsS'finished'
p78
I00
sS'nReps'
p79
I1
sS'nRemaining'
p80
I3
sS'trialList'
p81
(lp82
g1
(g41
g42
(dp83
g44
I200
sg45
Vy
sg46
I200
stRp84
ag47
ag1
(g41
g42
(dp85
g44
I200
sg45
Vh
sg46
I-200
stRp86
ag1
(g41
g42
(dp87
g44
I-200
sg45
Vg
sg46
I-200
stRp88
asS'seed'
p89
NsS'thisIndex'
p90
g24
(g77
S'\x01\x00\x00\x00'
tRp91
sS'thisN'
p92
I0
sS'thisTrialN'
p93
I0
sS'nTotal'
p94
I4
sS'_warnUseOfNext'
p95
I01
sbasS'saveWideText'
p96
I01
sS'thisEntry'
p97
(dp98
sS'version'
p99
S''
sS'_paramNamesSoFar'
p100
(lp101
sS'entries'
p102
(lp103
(dp104
g28
I3
sg21
V
sg16
F1.208294153213501
sg22
V2
sg23
g27
sg20
g12
sg15
S'space'
p105
sg29
g30
sg31
g32
sasS'loops'
p106
(lp107
g36
asS'savePickle'
p108
I01
sb.